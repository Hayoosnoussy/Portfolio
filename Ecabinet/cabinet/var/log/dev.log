[2021-06-11T16:05:56.509648+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at E:\cabinet\vendor\symfony\http-kernel\EventListener\RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at E:\\cabinet\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at E:\\cabinet\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:182)"} []
[2021-06-11T16:05:58.347730+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1:8000/api"" at E:\cabinet\vendor\symfony\http-kernel\EventListener\RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/api\" at E:\\cabinet\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/\". at E:\\cabinet\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2021-06-11T16:06:00.079391+02:00] request.CRITICAL: Exception thrown when handling an exception (Doctrine\DBAL\Exception\ConnectionException: An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe échouée pour l'utilisateur  « db_user » at E:\cabinet\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractPostgreSQLDriver.php line 88) {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:39)"} []
[2021-06-11T16:06:00.121672+02:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe échouée pour l'utilisateur  « db_user » {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:39)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/api\" at E:\\cabinet\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/\". at E:\\cabinet\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2021-06-11T16:06:00.222025+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe échouée pour l'utilisateur  « db_user »" at E:\cabinet\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractPostgreSQLDriver.php line 88 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:39)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/api\" at E:\\cabinet\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/\". at E:\\cabinet\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2021-06-11T16:06:00.542759+02:00] request.CRITICAL: Exception thrown when handling an exception (Doctrine\DBAL\Exception\ConnectionException: An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe échouée pour l'utilisateur  « db_user » at E:\cabinet\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractPostgreSQLDriver.php line 88) {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:39)"} []
[2021-06-11T16:06:00.543140+02:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe échouée pour l'utilisateur  « db_user » {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:39)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:39)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/api\" at E:\\cabinet\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/\". at E:\\cabinet\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2021-06-11T16:06:01.269009+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1:8000/"" at E:\cabinet\vendor\symfony\http-kernel\EventListener\RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/\" at E:\\cabinet\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at E:\\cabinet\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:182)"} []
[2021-06-11T16:06:01.912962+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1:8000/favicon.ico" (from "http://127.0.0.1:8000/")" at E:\cabinet\vendor\symfony\http-kernel\EventListener\RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/favicon.ico\" (from \"http://127.0.0.1:8000/\") at E:\\cabinet\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at E:\\cabinet\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2021-06-11T16:06:02.134454+02:00] request.CRITICAL: Exception thrown when handling an exception (Doctrine\DBAL\Exception\ConnectionException: An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe échouée pour l'utilisateur  « db_user » at E:\cabinet\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractPostgreSQLDriver.php line 88) {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:39)"} []
[2021-06-11T16:06:02.134928+02:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe échouée pour l'utilisateur  « db_user » {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:39)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/favicon.ico\" (from \"http://127.0.0.1:8000/\") at E:\\cabinet\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at E:\\cabinet\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2021-06-11T16:06:02.136734+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe échouée pour l'utilisateur  « db_user »" at E:\cabinet\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractPostgreSQLDriver.php line 88 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:39)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/favicon.ico\" (from \"http://127.0.0.1:8000/\") at E:\\cabinet\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at E:\\cabinet\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2021-06-11T16:06:02.435269+02:00] request.CRITICAL: Exception thrown when handling an exception (Doctrine\DBAL\Exception\ConnectionException: An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe échouée pour l'utilisateur  « db_user » at E:\cabinet\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractPostgreSQLDriver.php line 88) {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:39)"} []
[2021-06-11T16:06:02.435626+02:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe échouée pour l'utilisateur  « db_user » {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:39)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  authentification par mot de passe ï¿½chouï¿½e pour l'utilisateur  ï¿½ db_user ï¿½ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:39)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/favicon.ico\" (from \"http://127.0.0.1:8000/\") at E:\\cabinet\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at E:\\cabinet\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2021-06-11T17:25:36.671210+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T17:25:36.881159+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T17:25:36.989021+02:00] doctrine.DEBUG: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' [] []
[2021-06-11T17:25:36.992300+02:00] doctrine.DEBUG: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                         increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'db_Cabinet'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' [] []
[2021-06-11T17:25:36.997000+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T17:25:37.092830+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-11T17:25:37.713217+02:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "The target-entity App\Entity\Reglement cannot be found in 'App\Entity\Modereg#reglements'." {"exception":"[object] (Doctrine\\ORM\\Mapping\\MappingException(code: 0): The target-entity App\\Entity\\Reglement cannot be found in 'App\\Entity\\Modereg#reglements'. at E:\\cabinet\\vendor\\doctrine\\orm\\lib\\Doctrine\\ORM\\Mapping\\MappingException.php:870)","command":"make:migration","message":"The target-entity App\\Entity\\Reglement cannot be found in 'App\\Entity\\Modereg#reglements'."} []
[2021-06-11T17:25:37.713681+02:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2021-06-11T17:25:38.133107+02:00] php.DEBUG: Notice: fwrite(): Write of 4294967295 bytes failed with errno=22 Invalid argument {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":8,"file":"E:\\cabinet\\vendor\\symfony\\console\\Output\\StreamOutput.php","line":76,"trace":[{"file":"E:\\cabinet\\vendor\\symfony\\console\\Output\\Output.php","line":166,"function":"doWrite","class":"Symfony\\Component\\Console\\Output\\StreamOutput","type":"->"}],"count":1}}} []
[2021-06-11T17:26:13.135612+02:00] console.CRITICAL: Error thrown while running command "make:entity". Message: "The target-entity App\Entity\Reglement cannot be found in 'App\Entity\Modereg#reglements'." {"exception":"[object] (Doctrine\\ORM\\Mapping\\MappingException(code: 0): The target-entity App\\Entity\\Reglement cannot be found in 'App\\Entity\\Modereg#reglements'. at E:\\cabinet\\vendor\\doctrine\\orm\\lib\\Doctrine\\ORM\\Mapping\\MappingException.php:870)","command":"make:entity","message":"The target-entity App\\Entity\\Reglement cannot be found in 'App\\Entity\\Modereg#reglements'."} []
[2021-06-11T17:26:13.137551+02:00] console.DEBUG: Command "make:entity" exited with code "1" {"command":"make:entity","code":1} []
[2021-06-11T17:27:01.812574+02:00] console.CRITICAL: Error thrown while running command "make:entity". Message: "The target-entity App\Entity\Reglement cannot be found in 'App\Entity\Patient#reglements'." {"exception":"[object] (Doctrine\\ORM\\Mapping\\MappingException(code: 0): The target-entity App\\Entity\\Reglement cannot be found in 'App\\Entity\\Patient#reglements'. at E:\\cabinet\\vendor\\doctrine\\orm\\lib\\Doctrine\\ORM\\Mapping\\MappingException.php:870)","command":"make:entity","message":"The target-entity App\\Entity\\Reglement cannot be found in 'App\\Entity\\Patient#reglements'."} []
[2021-06-11T17:27:01.813694+02:00] console.DEBUG: Command "make:entity" exited with code "1" {"command":"make:entity","code":1} []
[2021-06-11T17:28:27.884832+02:00] console.CRITICAL: Error thrown while running command "make:entity". Message: "The target-entity App\Entity\Patient cannot be found in 'App\Entity\Consultation#patient'." {"exception":"[object] (Doctrine\\ORM\\Mapping\\MappingException(code: 0): The target-entity App\\Entity\\Patient cannot be found in 'App\\Entity\\Consultation#patient'. at E:\\cabinet\\vendor\\doctrine\\orm\\lib\\Doctrine\\ORM\\Mapping\\MappingException.php:870)","command":"make:entity","message":"The target-entity App\\Entity\\Patient cannot be found in 'App\\Entity\\Consultation#patient'."} []
[2021-06-11T17:28:27.885524+02:00] console.DEBUG: Command "make:entity" exited with code "1" {"command":"make:entity","code":1} []
[2021-06-11T17:32:18.953043+02:00] console.CRITICAL: Error thrown while running command "make:entity". Message: "The target-entity App\Entity\Patient cannot be found in 'App\Entity\Consultation#patient'." {"exception":"[object] (Doctrine\\ORM\\Mapping\\MappingException(code: 0): The target-entity App\\Entity\\Patient cannot be found in 'App\\Entity\\Consultation#patient'. at E:\\cabinet\\vendor\\doctrine\\orm\\lib\\Doctrine\\ORM\\Mapping\\MappingException.php:870)","command":"make:entity","message":"The target-entity App\\Entity\\Patient cannot be found in 'App\\Entity\\Consultation#patient'."} []
[2021-06-11T17:32:18.955269+02:00] console.DEBUG: Command "make:entity" exited with code "1" {"command":"make:entity","code":1} []
[2021-06-11T17:32:50.523599+02:00] console.CRITICAL: Error thrown while running command "make:entity". Message: "The target-entity App\Entity\Horaire cannot be found in 'App\Entity\Rdv#horaire'." {"exception":"[object] (Doctrine\\ORM\\Mapping\\MappingException(code: 0): The target-entity App\\Entity\\Horaire cannot be found in 'App\\Entity\\Rdv#horaire'. at E:\\cabinet\\vendor\\doctrine\\orm\\lib\\Doctrine\\ORM\\Mapping\\MappingException.php:870)","command":"make:entity","message":"The target-entity App\\Entity\\Horaire cannot be found in 'App\\Entity\\Rdv#horaire'."} []
[2021-06-11T17:32:50.524732+02:00] console.DEBUG: Command "make:entity" exited with code "1" {"command":"make:entity","code":1} []
[2021-06-11T17:34:06.882914+02:00] console.DEBUG: Command "make:entity" exited with code "1" {"command":"make:entity","code":1} []
[2021-06-11T17:54:20.561142+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T17:54:20.575897+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T17:54:20.579414+02:00] doctrine.DEBUG: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' [] []
[2021-06-11T17:54:20.581969+02:00] doctrine.DEBUG: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                         increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'db_Cabinet'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' [] []
[2021-06-11T17:54:20.585499+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T17:54:20.589069+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-11T17:54:20.977912+02:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "The target-entity App\Entity\Rdv cannot be found in 'App\Entity\Patient#rdvs'." {"exception":"[object] (Doctrine\\ORM\\Mapping\\MappingException(code: 0): The target-entity App\\Entity\\Rdv cannot be found in 'App\\Entity\\Patient#rdvs'. at E:\\cabinet\\vendor\\doctrine\\orm\\lib\\Doctrine\\ORM\\Mapping\\MappingException.php:870)","command":"make:migration","message":"The target-entity App\\Entity\\Rdv cannot be found in 'App\\Entity\\Patient#rdvs'."} []
[2021-06-11T17:54:20.978639+02:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2021-06-11T17:54:32.800171+02:00] console.CRITICAL: Error thrown while running command "make:entity". Message: "The target-entity App\Entity\Rdv cannot be found in 'App\Entity\Patient#rdvs'." {"exception":"[object] (Doctrine\\ORM\\Mapping\\MappingException(code: 0): The target-entity App\\Entity\\Rdv cannot be found in 'App\\Entity\\Patient#rdvs'. at E:\\cabinet\\vendor\\doctrine\\orm\\lib\\Doctrine\\ORM\\Mapping\\MappingException.php:870)","command":"make:entity","message":"The target-entity App\\Entity\\Rdv cannot be found in 'App\\Entity\\Patient#rdvs'."} []
[2021-06-11T17:54:32.802074+02:00] console.DEBUG: Command "make:entity" exited with code "1" {"command":"make:entity","code":1} []
[2021-06-11T17:55:50.158318+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T17:55:50.172609+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T17:55:50.178325+02:00] doctrine.DEBUG: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' [] []
[2021-06-11T17:55:50.181863+02:00] doctrine.DEBUG: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                         increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'db_Cabinet'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' [] []
[2021-06-11T17:55:50.187363+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T17:55:50.193353+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-11T17:55:50.332596+02:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "The target-entity App\Entity\Horaire cannot be found in 'App\Entity\Rdv#horaire'." {"exception":"[object] (Doctrine\\ORM\\Mapping\\MappingException(code: 0): The target-entity App\\Entity\\Horaire cannot be found in 'App\\Entity\\Rdv#horaire'. at E:\\cabinet\\vendor\\doctrine\\orm\\lib\\Doctrine\\ORM\\Mapping\\MappingException.php:870)","command":"make:migration","message":"The target-entity App\\Entity\\Horaire cannot be found in 'App\\Entity\\Rdv#horaire'."} []
[2021-06-11T17:55:50.333395+02:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2021-06-11T18:00:53.133292+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T18:00:53.147495+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T18:00:53.151055+02:00] doctrine.DEBUG: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' [] []
[2021-06-11T18:00:53.153563+02:00] doctrine.DEBUG: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                         increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'db_Cabinet'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' [] []
[2021-06-11T18:00:53.156916+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T18:00:53.162857+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-11T18:00:53.238103+02:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "The target-entity App\Entity\Rdv cannot be found in 'App\Entity\Patient#rdvs'." {"exception":"[object] (Doctrine\\ORM\\Mapping\\MappingException(code: 0): The target-entity App\\Entity\\Rdv cannot be found in 'App\\Entity\\Patient#rdvs'. at E:\\cabinet\\vendor\\doctrine\\orm\\lib\\Doctrine\\ORM\\Mapping\\MappingException.php:870)","command":"make:migration","message":"The target-entity App\\Entity\\Rdv cannot be found in 'App\\Entity\\Patient#rdvs'."} []
[2021-06-11T18:00:53.238549+02:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2021-06-11T18:03:33.412647+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T18:03:33.424934+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T18:03:33.428480+02:00] doctrine.DEBUG: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' [] []
[2021-06-11T18:03:33.430847+02:00] doctrine.DEBUG: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                         increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'db_Cabinet'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' [] []
[2021-06-11T18:03:33.434270+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T18:03:33.438033+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-11T18:03:33.759879+02:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "The target-entity App\Entity\Rdv cannot be found in 'App\Entity\Patient#rdvs'." {"exception":"[object] (Doctrine\\ORM\\Mapping\\MappingException(code: 0): The target-entity App\\Entity\\Rdv cannot be found in 'App\\Entity\\Patient#rdvs'. at E:\\cabinet\\vendor\\doctrine\\orm\\lib\\Doctrine\\ORM\\Mapping\\MappingException.php:870)","command":"make:migration","message":"The target-entity App\\Entity\\Rdv cannot be found in 'App\\Entity\\Patient#rdvs'."} []
[2021-06-11T18:03:33.760603+02:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2021-06-11T18:04:38.947913+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T18:04:38.962821+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T18:04:38.966609+02:00] doctrine.DEBUG: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' [] []
[2021-06-11T18:04:38.969627+02:00] doctrine.DEBUG: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                         increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'db_Cabinet'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' [] []
[2021-06-11T18:04:38.974671+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T18:04:38.978919+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-11T18:04:39.388813+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-11T18:05:14.033575+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-11T18:05:14.077804+02:00] doctrine.DEBUG: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) [] []
[2021-06-11T18:05:14.310281+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-11T18:05:14.312274+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-11T18:05:14.312763+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-11T18:05:14.693734+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-06-11T18:05:15.074012+02:00] doctrine.DEBUG: CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-11T18:05:15.076255+02:00] doctrine.DEBUG: CREATE SEQUENCE categorie_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-11T18:05:15.077688+02:00] doctrine.DEBUG: CREATE SEQUENCE consultation_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-11T18:05:15.079041+02:00] doctrine.DEBUG: CREATE SEQUENCE domaine_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-11T18:05:15.080262+02:00] doctrine.DEBUG: CREATE SEQUENCE medecin_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-11T18:05:15.081866+02:00] doctrine.DEBUG: CREATE SEQUENCE medicament_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-11T18:05:15.083714+02:00] doctrine.DEBUG: CREATE SEQUENCE modereg_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-11T18:05:15.085165+02:00] doctrine.DEBUG: CREATE SEQUENCE nationalite_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-11T18:05:15.108798+02:00] doctrine.DEBUG: CREATE SEQUENCE ordonance_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-11T18:05:15.110187+02:00] doctrine.DEBUG: CREATE SEQUENCE patient_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-11T18:05:15.111451+02:00] doctrine.DEBUG: CREATE SEQUENCE reglement_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-11T18:05:15.112984+02:00] doctrine.DEBUG: CREATE SEQUENCE specialite_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-11T18:05:15.114736+02:00] doctrine.DEBUG: CREATE TABLE assureur (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-11T18:05:15.386110+02:00] doctrine.DEBUG: CREATE TABLE categorie (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-11T18:05:15.441869+02:00] doctrine.DEBUG: CREATE TABLE consultation (id INT NOT NULL, patient_id INT NOT NULL, numero INT NOT NULL, annee INT NOT NULL, date_consultation DATE NOT NULL, observation VARCHAR(255) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-11T18:05:15.481006+02:00] doctrine.DEBUG: CREATE INDEX IDX_964685A66B899279 ON consultation (patient_id) [] []
[2021-06-11T18:05:15.507910+02:00] doctrine.DEBUG: CREATE TABLE domaine (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-11T18:05:15.590563+02:00] doctrine.DEBUG: CREATE TABLE medecin (id INT NOT NULL, specialite_id INT NOT NULL, categorie_id INT NOT NULL, nationalite_id INT DEFAULT NULL, matricule VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, date_naissance DATE DEFAULT NULL, adresse VARCHAR(255) DEFAULT NULL, ville VARCHAR(255) DEFAULT NULL, tel VARCHAR(255) NOT NULL, gsm VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, fax VARCHAR(255) DEFAULT NULL, genre VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-11T18:05:15.652347+02:00] doctrine.DEBUG: CREATE INDEX IDX_1BDA53C62195E0F0 ON medecin (specialite_id) [] []
[2021-06-11T18:05:15.682324+02:00] doctrine.DEBUG: CREATE INDEX IDX_1BDA53C6BCF5E72D ON medecin (categorie_id) [] []
[2021-06-11T18:05:15.718989+02:00] doctrine.DEBUG: CREATE INDEX IDX_1BDA53C61B063272 ON medecin (nationalite_id) [] []
[2021-06-11T18:05:15.751404+02:00] doctrine.DEBUG: CREATE TABLE medicament (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, duree VARCHAR(255) NOT NULL, utilisation VARCHAR(255) NOT NULL, ctr_indication VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-11T18:05:15.890495+02:00] doctrine.DEBUG: CREATE TABLE modereg (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-11T18:05:16.198535+02:00] doctrine.DEBUG: CREATE TABLE nationalite (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-11T18:05:16.417130+02:00] doctrine.DEBUG: CREATE TABLE ordonance (id INT NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-11T18:05:16.521420+02:00] doctrine.DEBUG: CREATE TABLE patient (id INT NOT NULL, nationalite_id INT NOT NULL, domaine_id INT DEFAULT NULL, assureur_id INT DEFAULT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, date_naissance DATE NOT NULL, adresse VARCHAR(255) NOT NULL, ville VARCHAR(255) NOT NULL, tel VARCHAR(255) NOT NULL, gsm VARCHAR(255) NOT NULL, genre VARCHAR(255) NOT NULL, etat_civil VARCHAR(255) NOT NULL, nbr_enfant INT NOT NULL, nom_conjoint VARCHAR(255) NOT NULL, lien_parente VARCHAR(255) NOT NULL, taille DOUBLE PRECISION NOT NULL, poids INT NOT NULL, gr_sanguin VARCHAR(255) NOT NULL, profession VARCHAR(255) DEFAULT NULL, ident_unique VARCHAR(255) DEFAULT NULL, prise_encharge VARCHAR(255) NOT NULL, medecin VARCHAR(255) DEFAULT NULL, datep_cons DATE DEFAULT NULL, date_dcons DATE DEFAULT NULL, motcles VARCHAR(255) DEFAULT NULL, code_apci VARCHAR(255) DEFAULT NULL, regime_cnam VARCHAR(255) NOT NULL, datevalidite DATE DEFAULT NULL, code VARCHAR(255) NOT NULL, lieu VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-11T18:05:16.607452+02:00] doctrine.DEBUG: CREATE INDEX IDX_1ADAD7EB1B063272 ON patient (nationalite_id) [] []
[2021-06-11T18:05:16.660904+02:00] doctrine.DEBUG: CREATE INDEX IDX_1ADAD7EB4272FC9F ON patient (domaine_id) [] []
[2021-06-11T18:05:16.696677+02:00] doctrine.DEBUG: CREATE INDEX IDX_1ADAD7EB80F7E20A ON patient (assureur_id) [] []
[2021-06-11T18:05:16.741561+02:00] doctrine.DEBUG: CREATE TABLE reglement (id INT NOT NULL, patient_id INT NOT NULL, modereg_id INT NOT NULL, numero INT NOT NULL, annee INT NOT NULL, date_reglement DATE NOT NULL, mod_reglement VARCHAR(255) NOT NULL, num_piece VARCHAR(255) DEFAULT NULL, montant DOUBLE PRECISION NOT NULL, observation VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-11T18:05:16.819585+02:00] doctrine.DEBUG: CREATE INDEX IDX_EBE4C14C6B899279 ON reglement (patient_id) [] []
[2021-06-11T18:05:16.875205+02:00] doctrine.DEBUG: CREATE INDEX IDX_EBE4C14CE1AFE3AF ON reglement (modereg_id) [] []
[2021-06-11T18:05:16.942663+02:00] doctrine.DEBUG: CREATE TABLE specialite (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-11T18:05:17.075783+02:00] doctrine.DEBUG: ALTER TABLE consultation ADD CONSTRAINT FK_964685A66B899279 FOREIGN KEY (patient_id) REFERENCES patient (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-11T18:05:17.102047+02:00] doctrine.DEBUG: ALTER TABLE medecin ADD CONSTRAINT FK_1BDA53C62195E0F0 FOREIGN KEY (specialite_id) REFERENCES specialite (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-11T18:05:17.109198+02:00] doctrine.DEBUG: ALTER TABLE medecin ADD CONSTRAINT FK_1BDA53C6BCF5E72D FOREIGN KEY (categorie_id) REFERENCES categorie (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-11T18:05:17.111630+02:00] doctrine.DEBUG: ALTER TABLE medecin ADD CONSTRAINT FK_1BDA53C61B063272 FOREIGN KEY (nationalite_id) REFERENCES nationalite (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-11T18:05:17.114215+02:00] doctrine.DEBUG: ALTER TABLE patient ADD CONSTRAINT FK_1ADAD7EB1B063272 FOREIGN KEY (nationalite_id) REFERENCES nationalite (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-11T18:05:17.115529+02:00] doctrine.DEBUG: ALTER TABLE patient ADD CONSTRAINT FK_1ADAD7EB4272FC9F FOREIGN KEY (domaine_id) REFERENCES domaine (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-11T18:05:17.117567+02:00] doctrine.DEBUG: ALTER TABLE patient ADD CONSTRAINT FK_1ADAD7EB80F7E20A FOREIGN KEY (assureur_id) REFERENCES assureur (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-11T18:05:17.119633+02:00] doctrine.DEBUG: ALTER TABLE reglement ADD CONSTRAINT FK_EBE4C14C6B899279 FOREIGN KEY (patient_id) REFERENCES patient (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-11T18:05:17.122640+02:00] doctrine.DEBUG: ALTER TABLE reglement ADD CONSTRAINT FK_EBE4C14CE1AFE3AF FOREIGN KEY (modereg_id) REFERENCES modereg (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-11T18:05:17.154300+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-06-11T18:05:14+02:00",2404] []
[2021-06-11T18:05:17.204961+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-06-12T00:04:32.366043+02:00] console.DEBUG: Command "doctrine:database:create" exited with code "1" {"command":"doctrine:database:create","code":1} []
[2021-06-14T01:33:43.103400+02:00] php.DEBUG: Notice: fwrite(): Write of 4294967295 bytes failed with errno=22 Invalid argument {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":8,"file":"E:\\cabinet\\vendor\\symfony\\console\\Output\\StreamOutput.php","line":76,"trace":[{"file":"E:\\cabinet\\vendor\\symfony\\console\\Output\\Output.php","line":166,"function":"doWrite","class":"Symfony\\Component\\Console\\Output\\StreamOutput","type":"->"}],"count":1}}} []
[2021-06-14T02:04:37.568936+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:04:37.895237+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:04:45.891758+02:00] doctrine.DEBUG: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' [] []
[2021-06-14T02:04:45.926981+02:00] doctrine.DEBUG: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                         increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'MyCabinet'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' [] []
[2021-06-14T02:04:45.939775+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:04:46.038222+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:04:47.184898+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:05:09.177799+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:05:09.202676+02:00] doctrine.DEBUG: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) [] []
[2021-06-14T02:05:09.457818+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:05:09.459685+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:05:09.460129+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:05:09.853443+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-06-14T02:05:10.195809+02:00] doctrine.DEBUG: CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:05:10.218870+02:00] doctrine.DEBUG: CREATE SEQUENCE categorie_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:05:10.240122+02:00] doctrine.DEBUG: CREATE SEQUENCE consultation_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:05:10.245541+02:00] doctrine.DEBUG: CREATE SEQUENCE domaine_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:05:10.249498+02:00] doctrine.DEBUG: CREATE SEQUENCE medecin_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:05:10.252860+02:00] doctrine.DEBUG: CREATE SEQUENCE medicament_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:05:10.268428+02:00] doctrine.DEBUG: CREATE SEQUENCE modereg_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:05:10.270047+02:00] doctrine.DEBUG: CREATE SEQUENCE nationalite_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:05:10.271295+02:00] doctrine.DEBUG: CREATE SEQUENCE ordonance_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:05:10.272864+02:00] doctrine.DEBUG: CREATE SEQUENCE patient_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:05:10.274380+02:00] doctrine.DEBUG: CREATE SEQUENCE reglement_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:05:10.275618+02:00] doctrine.DEBUG: CREATE SEQUENCE specialite_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:05:10.277674+02:00] doctrine.DEBUG: CREATE TABLE assureur (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:05:10.389093+02:00] doctrine.DEBUG: CREATE TABLE categorie (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:05:10.474713+02:00] doctrine.DEBUG: CREATE TABLE consultation (id INT NOT NULL, patient_id INT NOT NULL, numero INT NOT NULL, annee INT NOT NULL, date_consultation DATE NOT NULL, observation VARCHAR(255) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:05:10.523792+02:00] doctrine.DEBUG: CREATE INDEX IDX_964685A66B899279 ON consultation (patient_id) [] []
[2021-06-14T02:05:10.577837+02:00] doctrine.DEBUG: CREATE TABLE domaine (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:05:10.657061+02:00] doctrine.DEBUG: CREATE TABLE medecin (id INT NOT NULL, specialite_id INT NOT NULL, categorie_id INT NOT NULL, nationalite_id INT DEFAULT NULL, matricule VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, date_naissance DATE DEFAULT NULL, adresse VARCHAR(255) DEFAULT NULL, ville VARCHAR(255) DEFAULT NULL, tel VARCHAR(255) NOT NULL, gsm VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, fax VARCHAR(255) DEFAULT NULL, genre VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:05:10.734454+02:00] doctrine.DEBUG: CREATE INDEX IDX_1BDA53C62195E0F0 ON medecin (specialite_id) [] []
[2021-06-14T02:05:10.778165+02:00] doctrine.DEBUG: CREATE INDEX IDX_1BDA53C6BCF5E72D ON medecin (categorie_id) [] []
[2021-06-14T02:05:10.812095+02:00] doctrine.DEBUG: CREATE INDEX IDX_1BDA53C61B063272 ON medecin (nationalite_id) [] []
[2021-06-14T02:05:10.861280+02:00] doctrine.DEBUG: CREATE TABLE medicament (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, duree VARCHAR(255) NOT NULL, utilisation VARCHAR(255) NOT NULL, ctr_indication VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:05:10.928342+02:00] doctrine.DEBUG: CREATE TABLE modereg (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:05:11.006880+02:00] doctrine.DEBUG: CREATE TABLE nationalite (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:05:11.140539+02:00] doctrine.DEBUG: CREATE TABLE ordonance (id INT NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:05:11.178231+02:00] doctrine.DEBUG: CREATE TABLE patient (id INT NOT NULL, nationalite_id INT NOT NULL, domaine_id INT DEFAULT NULL, assureur_id INT DEFAULT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, date_naissance DATE NOT NULL, adresse VARCHAR(255) NOT NULL, ville VARCHAR(255) NOT NULL, tel VARCHAR(255) NOT NULL, gsm VARCHAR(255) NOT NULL, genre VARCHAR(255) NOT NULL, etat_civil VARCHAR(255) NOT NULL, nbr_enfant INT NOT NULL, nom_conjoint VARCHAR(255) NOT NULL, lien_parente VARCHAR(255) NOT NULL, taille DOUBLE PRECISION NOT NULL, poids INT NOT NULL, gr_sanguin VARCHAR(255) NOT NULL, profession VARCHAR(255) DEFAULT NULL, ident_unique VARCHAR(255) DEFAULT NULL, prise_encharge VARCHAR(255) NOT NULL, medecin VARCHAR(255) DEFAULT NULL, datep_cons DATE DEFAULT NULL, date_dcons DATE DEFAULT NULL, motcles VARCHAR(255) DEFAULT NULL, code_apci VARCHAR(255) DEFAULT NULL, regime_cnam VARCHAR(255) NOT NULL, datevalidite DATE DEFAULT NULL, code VARCHAR(255) NOT NULL, lieu VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:05:11.274902+02:00] doctrine.DEBUG: CREATE INDEX IDX_1ADAD7EB1B063272 ON patient (nationalite_id) [] []
[2021-06-14T02:05:11.312566+02:00] doctrine.DEBUG: CREATE INDEX IDX_1ADAD7EB4272FC9F ON patient (domaine_id) [] []
[2021-06-14T02:05:11.368663+02:00] doctrine.DEBUG: CREATE INDEX IDX_1ADAD7EB80F7E20A ON patient (assureur_id) [] []
[2021-06-14T02:05:11.408480+02:00] doctrine.DEBUG: CREATE TABLE reglement (id INT NOT NULL, patient_id INT NOT NULL, modereg_id INT NOT NULL, numero INT NOT NULL, annee INT NOT NULL, date_reglement DATE NOT NULL, mod_reglement VARCHAR(255) NOT NULL, num_piece VARCHAR(255) DEFAULT NULL, montant DOUBLE PRECISION NOT NULL, observation VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:05:11.508372+02:00] doctrine.DEBUG: CREATE INDEX IDX_EBE4C14C6B899279 ON reglement (patient_id) [] []
[2021-06-14T02:05:11.545747+02:00] doctrine.DEBUG: CREATE INDEX IDX_EBE4C14CE1AFE3AF ON reglement (modereg_id) [] []
[2021-06-14T02:05:11.602810+02:00] doctrine.DEBUG: CREATE TABLE specialite (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:05:11.705474+02:00] doctrine.DEBUG: ALTER TABLE consultation ADD CONSTRAINT FK_964685A66B899279 FOREIGN KEY (patient_id) REFERENCES patient (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:05:11.748619+02:00] doctrine.DEBUG: ALTER TABLE medecin ADD CONSTRAINT FK_1BDA53C62195E0F0 FOREIGN KEY (specialite_id) REFERENCES specialite (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:05:11.755632+02:00] doctrine.DEBUG: ALTER TABLE medecin ADD CONSTRAINT FK_1BDA53C6BCF5E72D FOREIGN KEY (categorie_id) REFERENCES categorie (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:05:11.758126+02:00] doctrine.DEBUG: ALTER TABLE medecin ADD CONSTRAINT FK_1BDA53C61B063272 FOREIGN KEY (nationalite_id) REFERENCES nationalite (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:05:11.760407+02:00] doctrine.DEBUG: ALTER TABLE patient ADD CONSTRAINT FK_1ADAD7EB1B063272 FOREIGN KEY (nationalite_id) REFERENCES nationalite (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:05:11.761866+02:00] doctrine.DEBUG: ALTER TABLE patient ADD CONSTRAINT FK_1ADAD7EB4272FC9F FOREIGN KEY (domaine_id) REFERENCES domaine (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:05:11.763822+02:00] doctrine.DEBUG: ALTER TABLE patient ADD CONSTRAINT FK_1ADAD7EB80F7E20A FOREIGN KEY (assureur_id) REFERENCES assureur (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:05:11.765849+02:00] doctrine.DEBUG: ALTER TABLE reglement ADD CONSTRAINT FK_EBE4C14C6B899279 FOREIGN KEY (patient_id) REFERENCES patient (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:05:11.768892+02:00] doctrine.DEBUG: ALTER TABLE reglement ADD CONSTRAINT FK_EBE4C14CE1AFE3AF FOREIGN KEY (modereg_id) REFERENCES modereg (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:05:11.804548+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-06-14T02:05:09+02:00",1917] []
[2021-06-14T02:05:11.820884+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-06-14T02:05:11.822112+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-06-14T02:05:11.823893+02:00] doctrine.DEBUG: CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:05:12.174713+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2021-06-14T02:05:12.235739+02:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing 'CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1':  SQLSTATE[42P07]: Duplicate table: 7 ERREUR:  la relation Â« assureur_id_seq Â» existe dÃ©jÃ " {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableExistsException(code: 0): An exception occurred while executing 'CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1':\n\nSQLSTATE[42P07]: Duplicate table: 7 ERREUR:  la relation Â« assureur_id_seq Â» existe dÃ©jÃ  at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:85)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 42P07): SQLSTATE[42P07]: Duplicate table: 7 ERREUR:  la relation Â« assureur_id_seq Â» existe dÃ©jÃ  at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 42P07): SQLSTATE[42P07]: Duplicate table: 7 ERREUR:  la relation Â« assureur_id_seq Â» existe dÃ©jÃ  at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:132)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing 'CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1':\n\nSQLSTATE[42P07]: Duplicate table: 7 ERREUR:  la relation Â« assureur_id_seq Â» existe dÃ©jÃ "} []
[2021-06-14T02:05:12.236185+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2021-06-14T02:07:02.571264+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:07:02.601583+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T02:07:02.701582+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:07:02.715205+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:07:02.799230+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:07:02.803664+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:07:02.805837+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20050 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:07:02.806579+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:07:02.876613+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:07:02.998461+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:07:02.998994+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:07:03.011203+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-06-14T02:07:03.047759+02:00] doctrine.DEBUG: CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:07:03.061085+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2021-06-14T02:07:03.063639+02:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing 'CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1':  SQLSTATE[42P07]: Duplicate table: 7 ERREUR:  la relation Â« assureur_id_seq Â» existe dÃ©jÃ " {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableExistsException(code: 0): An exception occurred while executing 'CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1':\n\nSQLSTATE[42P07]: Duplicate table: 7 ERREUR:  la relation Â« assureur_id_seq Â» existe dÃ©jÃ  at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:85)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 42P07): SQLSTATE[42P07]: Duplicate table: 7 ERREUR:  la relation Â« assureur_id_seq Â» existe dÃ©jÃ  at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 42P07): SQLSTATE[42P07]: Duplicate table: 7 ERREUR:  la relation Â« assureur_id_seq Â» existe dÃ©jÃ  at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:132)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing 'CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1':\n\nSQLSTATE[42P07]: Duplicate table: 7 ERREUR:  la relation Â« assureur_id_seq Â» existe dÃ©jÃ "} []
[2021-06-14T02:07:03.064142+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2021-06-14T02:08:41.948041+02:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  la base de données « MyCabinet » n'existe pas" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  la base de donnï¿½es ï¿½ MyCabinet ï¿½ n'existe pas at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  la base de donnï¿½es ï¿½ MyCabinet ï¿½ n'existe pas at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  la base de donnï¿½es ï¿½ MyCabinet ï¿½ n'existe pas at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:39)","command":"doctrine:migrations:migrate","message":"An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  la base de donnï¿½es ï¿½ MyCabinet ï¿½ n'existe pas"} []
[2021-06-14T02:08:41.950143+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2021-06-14T02:09:24.265524+02:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  la base de données « MyCabinet » n'existe pas" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  la base de donnï¿½es ï¿½ MyCabinet ï¿½ n'existe pas at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  la base de donnï¿½es ï¿½ MyCabinet ï¿½ n'existe pas at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  la base de donnï¿½es ï¿½ MyCabinet ï¿½ n'existe pas at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:39)","command":"doctrine:migrations:migrate","message":"An exception occurred in driver: SQLSTATE[08006] [7] FATAL:  la base de donnï¿½es ï¿½ MyCabinet ï¿½ n'existe pas"} []
[2021-06-14T02:09:24.267485+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2021-06-14T02:09:42.271031+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:09:42.307454+02:00] doctrine.DEBUG: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) [] []
[2021-06-14T02:09:42.443749+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:09:42.447623+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:09:42.448447+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:09:42.466532+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-06-14T02:09:42.499879+02:00] doctrine.DEBUG: CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:09:42.502314+02:00] doctrine.DEBUG: CREATE SEQUENCE categorie_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:09:42.503913+02:00] doctrine.DEBUG: CREATE SEQUENCE consultation_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:09:42.505384+02:00] doctrine.DEBUG: CREATE SEQUENCE domaine_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:09:42.506867+02:00] doctrine.DEBUG: CREATE SEQUENCE medecin_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:09:42.508485+02:00] doctrine.DEBUG: CREATE SEQUENCE medicament_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:09:42.509839+02:00] doctrine.DEBUG: CREATE SEQUENCE modereg_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:09:42.511166+02:00] doctrine.DEBUG: CREATE SEQUENCE nationalite_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:09:42.512301+02:00] doctrine.DEBUG: CREATE SEQUENCE ordonance_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:09:42.513426+02:00] doctrine.DEBUG: CREATE SEQUENCE patient_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:09:42.514809+02:00] doctrine.DEBUG: CREATE SEQUENCE reglement_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:09:42.516524+02:00] doctrine.DEBUG: CREATE SEQUENCE specialite_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:09:42.518582+02:00] doctrine.DEBUG: CREATE TABLE assureur (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:09:42.674054+02:00] doctrine.DEBUG: CREATE TABLE categorie (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:09:42.823593+02:00] doctrine.DEBUG: CREATE TABLE consultation (id INT NOT NULL, patient_id INT NOT NULL, numero INT NOT NULL, annee INT NOT NULL, date_consultation DATE NOT NULL, observation VARCHAR(255) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:09:42.942770+02:00] doctrine.DEBUG: CREATE INDEX IDX_964685A66B899279 ON consultation (patient_id) [] []
[2021-06-14T02:09:43.019076+02:00] doctrine.DEBUG: CREATE TABLE domaine (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:09:43.096439+02:00] doctrine.DEBUG: CREATE TABLE medecin (id INT NOT NULL, specialite_id INT NOT NULL, categorie_id INT NOT NULL, nationalite_id INT DEFAULT NULL, matricule VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, date_naissance DATE DEFAULT NULL, adresse VARCHAR(255) DEFAULT NULL, ville VARCHAR(255) DEFAULT NULL, tel VARCHAR(255) NOT NULL, gsm VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, fax VARCHAR(255) DEFAULT NULL, genre VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:09:43.185278+02:00] doctrine.DEBUG: CREATE INDEX IDX_1BDA53C62195E0F0 ON medecin (specialite_id) [] []
[2021-06-14T02:09:43.224508+02:00] doctrine.DEBUG: CREATE INDEX IDX_1BDA53C6BCF5E72D ON medecin (categorie_id) [] []
[2021-06-14T02:09:43.263072+02:00] doctrine.DEBUG: CREATE INDEX IDX_1BDA53C61B063272 ON medecin (nationalite_id) [] []
[2021-06-14T02:09:43.291600+02:00] doctrine.DEBUG: CREATE TABLE medicament (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, duree VARCHAR(255) NOT NULL, utilisation VARCHAR(255) NOT NULL, ctr_indication VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:09:43.358418+02:00] doctrine.DEBUG: CREATE TABLE modereg (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:09:43.474141+02:00] doctrine.DEBUG: CREATE TABLE nationalite (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:09:43.551576+02:00] doctrine.DEBUG: CREATE TABLE ordonance (id INT NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:09:43.663351+02:00] doctrine.DEBUG: CREATE TABLE patient (id INT NOT NULL, nationalite_id INT NOT NULL, domaine_id INT DEFAULT NULL, assureur_id INT DEFAULT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, date_naissance DATE NOT NULL, adresse VARCHAR(255) NOT NULL, ville VARCHAR(255) NOT NULL, tel VARCHAR(255) NOT NULL, gsm VARCHAR(255) NOT NULL, genre VARCHAR(255) NOT NULL, etat_civil VARCHAR(255) NOT NULL, nbr_enfant INT NOT NULL, nom_conjoint VARCHAR(255) NOT NULL, lien_parente VARCHAR(255) NOT NULL, taille DOUBLE PRECISION NOT NULL, poids INT NOT NULL, gr_sanguin VARCHAR(255) NOT NULL, profession VARCHAR(255) DEFAULT NULL, ident_unique VARCHAR(255) DEFAULT NULL, prise_encharge VARCHAR(255) NOT NULL, medecin VARCHAR(255) DEFAULT NULL, datep_cons DATE DEFAULT NULL, date_dcons DATE DEFAULT NULL, motcles VARCHAR(255) DEFAULT NULL, code_apci VARCHAR(255) DEFAULT NULL, regime_cnam VARCHAR(255) NOT NULL, datevalidite DATE DEFAULT NULL, code VARCHAR(255) NOT NULL, lieu VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:09:43.841132+02:00] doctrine.DEBUG: CREATE INDEX IDX_1ADAD7EB1B063272 ON patient (nationalite_id) [] []
[2021-06-14T02:09:43.875116+02:00] doctrine.DEBUG: CREATE INDEX IDX_1ADAD7EB4272FC9F ON patient (domaine_id) [] []
[2021-06-14T02:09:43.907799+02:00] doctrine.DEBUG: CREATE INDEX IDX_1ADAD7EB80F7E20A ON patient (assureur_id) [] []
[2021-06-14T02:09:43.941608+02:00] doctrine.DEBUG: CREATE TABLE reglement (id INT NOT NULL, patient_id INT NOT NULL, modereg_id INT NOT NULL, numero INT NOT NULL, annee INT NOT NULL, date_reglement DATE NOT NULL, mod_reglement VARCHAR(255) NOT NULL, num_piece VARCHAR(255) DEFAULT NULL, montant DOUBLE PRECISION NOT NULL, observation VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:09:44.128404+02:00] doctrine.DEBUG: CREATE INDEX IDX_EBE4C14C6B899279 ON reglement (patient_id) [] []
[2021-06-14T02:09:44.185450+02:00] doctrine.DEBUG: CREATE INDEX IDX_EBE4C14CE1AFE3AF ON reglement (modereg_id) [] []
[2021-06-14T02:09:44.224675+02:00] doctrine.DEBUG: CREATE TABLE specialite (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:09:44.362917+02:00] doctrine.DEBUG: ALTER TABLE consultation ADD CONSTRAINT FK_964685A66B899279 FOREIGN KEY (patient_id) REFERENCES patient (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:09:44.388342+02:00] doctrine.DEBUG: ALTER TABLE medecin ADD CONSTRAINT FK_1BDA53C62195E0F0 FOREIGN KEY (specialite_id) REFERENCES specialite (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:09:44.398373+02:00] doctrine.DEBUG: ALTER TABLE medecin ADD CONSTRAINT FK_1BDA53C6BCF5E72D FOREIGN KEY (categorie_id) REFERENCES categorie (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:09:44.401987+02:00] doctrine.DEBUG: ALTER TABLE medecin ADD CONSTRAINT FK_1BDA53C61B063272 FOREIGN KEY (nationalite_id) REFERENCES nationalite (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:09:44.405163+02:00] doctrine.DEBUG: ALTER TABLE patient ADD CONSTRAINT FK_1ADAD7EB1B063272 FOREIGN KEY (nationalite_id) REFERENCES nationalite (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:09:44.407013+02:00] doctrine.DEBUG: ALTER TABLE patient ADD CONSTRAINT FK_1ADAD7EB4272FC9F FOREIGN KEY (domaine_id) REFERENCES domaine (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:09:44.409404+02:00] doctrine.DEBUG: ALTER TABLE patient ADD CONSTRAINT FK_1ADAD7EB80F7E20A FOREIGN KEY (assureur_id) REFERENCES assureur (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:09:44.411747+02:00] doctrine.DEBUG: ALTER TABLE reglement ADD CONSTRAINT FK_EBE4C14C6B899279 FOREIGN KEY (patient_id) REFERENCES patient (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:09:44.415092+02:00] doctrine.DEBUG: ALTER TABLE reglement ADD CONSTRAINT FK_EBE4C14CE1AFE3AF FOREIGN KEY (modereg_id) REFERENCES modereg (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:09:44.417616+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-06-14T02:09:42+02:00",1950] []
[2021-06-14T02:09:44.419415+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-06-14T02:09:44.420718+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-06-14T02:09:44.422511+02:00] doctrine.DEBUG: CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:09:44.433891+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2021-06-14T02:09:44.436843+02:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing 'CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1':  SQLSTATE[42P07]: Duplicate table: 7 ERREUR:  la relation Â« assureur_id_seq Â» existe dÃ©jÃ " {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableExistsException(code: 0): An exception occurred while executing 'CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1':\n\nSQLSTATE[42P07]: Duplicate table: 7 ERREUR:  la relation Â« assureur_id_seq Â» existe dÃ©jÃ  at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:85)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 42P07): SQLSTATE[42P07]: Duplicate table: 7 ERREUR:  la relation Â« assureur_id_seq Â» existe dÃ©jÃ  at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 42P07): SQLSTATE[42P07]: Duplicate table: 7 ERREUR:  la relation Â« assureur_id_seq Â» existe dÃ©jÃ  at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:132)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing 'CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1':\n\nSQLSTATE[42P07]: Duplicate table: 7 ERREUR:  la relation Â« assureur_id_seq Â» existe dÃ©jÃ "} []
[2021-06-14T02:09:44.437531+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2021-06-14T02:13:54.211747+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:13:54.240179+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:13:54.243994+02:00] doctrine.DEBUG: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' [] []
[2021-06-14T02:13:54.247088+02:00] doctrine.DEBUG: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                         increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'myCabinet'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' [] []
[2021-06-14T02:13:54.251532+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:13:54.255619+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:13:54.339149+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:14:18.230925+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:14:18.256262+02:00] doctrine.DEBUG: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) [] []
[2021-06-14T02:14:18.374161+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:14:18.381403+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:14:18.383519+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:14:18.410723+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-06-14T02:14:18.443192+02:00] doctrine.DEBUG: CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:14:18.446554+02:00] doctrine.DEBUG: CREATE SEQUENCE categorie_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:14:18.447787+02:00] doctrine.DEBUG: CREATE SEQUENCE compteur_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:14:18.449100+02:00] doctrine.DEBUG: CREATE SEQUENCE consultation_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:14:18.450352+02:00] doctrine.DEBUG: CREATE SEQUENCE domaine_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:14:18.451758+02:00] doctrine.DEBUG: CREATE SEQUENCE horaire_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:14:18.453145+02:00] doctrine.DEBUG: CREATE SEQUENCE medecin_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:14:18.454625+02:00] doctrine.DEBUG: CREATE SEQUENCE medicament_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:14:18.455882+02:00] doctrine.DEBUG: CREATE SEQUENCE modereg_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:14:18.457436+02:00] doctrine.DEBUG: CREATE SEQUENCE nationalite_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:14:18.459196+02:00] doctrine.DEBUG: CREATE SEQUENCE ordonance_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:14:18.460629+02:00] doctrine.DEBUG: CREATE SEQUENCE patient_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:14:18.462706+02:00] doctrine.DEBUG: CREATE SEQUENCE reglement_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:14:18.463979+02:00] doctrine.DEBUG: CREATE SEQUENCE specialite_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:14:18.465242+02:00] doctrine.DEBUG: CREATE SEQUENCE user_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:14:18.466496+02:00] doctrine.DEBUG: CREATE TABLE assureur (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:14:18.566267+02:00] doctrine.DEBUG: CREATE TABLE categorie (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:14:18.644064+02:00] doctrine.DEBUG: CREATE TABLE compteur (id INT NOT NULL, numconsultation INT NOT NULL, numrdv INT NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:14:18.670823+02:00] doctrine.DEBUG: CREATE TABLE consultation (id INT NOT NULL, patient_id INT NOT NULL, numero INT NOT NULL, annee INT NOT NULL, date_consultation DATE NOT NULL, observation VARCHAR(255) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:14:18.754639+02:00] doctrine.DEBUG: CREATE INDEX IDX_964685A66B899279 ON consultation (patient_id) [] []
[2021-06-14T02:14:18.781846+02:00] doctrine.DEBUG: CREATE TABLE domaine (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:14:18.840630+02:00] doctrine.DEBUG: CREATE TABLE horaire (id INT NOT NULL, code VARCHAR(255) NOT NULL, hd TIME(0) WITHOUT TIME ZONE NOT NULL, hf TIME(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:14:18.876864+02:00] doctrine.DEBUG: CREATE TABLE medecin (id INT NOT NULL, specialite_id INT NOT NULL, categorie_id INT NOT NULL, nationalite_id INT DEFAULT NULL, matricule VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, date_naissance DATE DEFAULT NULL, adresse VARCHAR(255) DEFAULT NULL, ville VARCHAR(255) DEFAULT NULL, tel VARCHAR(255) NOT NULL, gsm VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, fax VARCHAR(255) DEFAULT NULL, genre VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:14:18.991846+02:00] doctrine.DEBUG: CREATE INDEX IDX_1BDA53C62195E0F0 ON medecin (specialite_id) [] []
[2021-06-14T02:14:19.073997+02:00] doctrine.DEBUG: CREATE INDEX IDX_1BDA53C6BCF5E72D ON medecin (categorie_id) [] []
[2021-06-14T02:14:19.167466+02:00] doctrine.DEBUG: CREATE INDEX IDX_1BDA53C61B063272 ON medecin (nationalite_id) [] []
[2021-06-14T02:14:19.253926+02:00] doctrine.DEBUG: CREATE TABLE medicament (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, duree VARCHAR(255) NOT NULL, utilisation VARCHAR(255) NOT NULL, ctr_indication VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:14:19.472205+02:00] doctrine.DEBUG: CREATE TABLE modereg (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:14:19.654211+02:00] doctrine.DEBUG: CREATE TABLE nationalite (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:14:19.721217+02:00] doctrine.DEBUG: CREATE TABLE ordonance (id INT NOT NULL, consultation_id INT DEFAULT NULL, medicament_id INT DEFAULT NULL, code VARCHAR(255) NOT NULL, nbr INT NOT NULL, duree VARCHAR(255) NOT NULL, utilisation VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:14:19.798760+02:00] doctrine.DEBUG: CREATE INDEX IDX_99240B9C62FF6CDF ON ordonance (consultation_id) [] []
[2021-06-14T02:14:19.857908+02:00] doctrine.DEBUG: CREATE INDEX IDX_99240B9CAB0D61F7 ON ordonance (medicament_id) [] []
[2021-06-14T02:14:19.887599+02:00] doctrine.DEBUG: CREATE TABLE patient (id INT NOT NULL, nationalite_id INT NOT NULL, domaine_id INT DEFAULT NULL, assureur_id INT DEFAULT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, date_naissance DATE NOT NULL, adresse VARCHAR(255) NOT NULL, ville VARCHAR(255) NOT NULL, tel VARCHAR(255) NOT NULL, gsm VARCHAR(255) NOT NULL, genre VARCHAR(255) NOT NULL, etat_civil VARCHAR(255) NOT NULL, nbr_enfant INT NOT NULL, nom_conjoint VARCHAR(255) NOT NULL, lien_parente VARCHAR(255) NOT NULL, taille DOUBLE PRECISION NOT NULL, poids INT NOT NULL, gr_sanguin VARCHAR(255) NOT NULL, profession VARCHAR(255) DEFAULT NULL, ident_unique VARCHAR(255) DEFAULT NULL, prise_encharge VARCHAR(255) NOT NULL, medecin VARCHAR(255) DEFAULT NULL, datep_cons DATE DEFAULT NULL, date_dcons DATE DEFAULT NULL, motcles VARCHAR(255) DEFAULT NULL, code_apci VARCHAR(255) DEFAULT NULL, regime_cnam VARCHAR(255) NOT NULL, datevalidite DATE DEFAULT NULL, code VARCHAR(255) NOT NULL, lieu VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:14:19.954018+02:00] doctrine.DEBUG: CREATE INDEX IDX_1ADAD7EB1B063272 ON patient (nationalite_id) [] []
[2021-06-14T02:14:19.998814+02:00] doctrine.DEBUG: CREATE INDEX IDX_1ADAD7EB4272FC9F ON patient (domaine_id) [] []
[2021-06-14T02:14:20.120520+02:00] doctrine.DEBUG: CREATE INDEX IDX_1ADAD7EB80F7E20A ON patient (assureur_id) [] []
[2021-06-14T02:14:20.177390+02:00] doctrine.DEBUG: CREATE TABLE reglement (id INT NOT NULL, patient_id INT NOT NULL, modereg_id INT NOT NULL, numero INT NOT NULL, annee INT NOT NULL, date_reglement DATE NOT NULL, mod_reglement VARCHAR(255) NOT NULL, num_piece VARCHAR(255) DEFAULT NULL, montant DOUBLE PRECISION NOT NULL, observation VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:14:20.430731+02:00] doctrine.DEBUG: CREATE INDEX IDX_EBE4C14C6B899279 ON reglement (patient_id) [] []
[2021-06-14T02:14:20.595312+02:00] doctrine.DEBUG: CREATE INDEX IDX_EBE4C14CE1AFE3AF ON reglement (modereg_id) [] []
[2021-06-14T02:14:20.673399+02:00] doctrine.DEBUG: CREATE TABLE specialite (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:14:20.987706+02:00] doctrine.DEBUG: CREATE TABLE "user" (id INT NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:14:21.240639+02:00] doctrine.DEBUG: CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON "user" (email) [] []
[2021-06-14T02:14:21.329711+02:00] doctrine.DEBUG: ALTER TABLE consultation ADD CONSTRAINT FK_964685A66B899279 FOREIGN KEY (patient_id) REFERENCES patient (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:14:21.349618+02:00] doctrine.DEBUG: ALTER TABLE medecin ADD CONSTRAINT FK_1BDA53C62195E0F0 FOREIGN KEY (specialite_id) REFERENCES specialite (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:14:21.359287+02:00] doctrine.DEBUG: ALTER TABLE medecin ADD CONSTRAINT FK_1BDA53C6BCF5E72D FOREIGN KEY (categorie_id) REFERENCES categorie (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:14:21.363522+02:00] doctrine.DEBUG: ALTER TABLE medecin ADD CONSTRAINT FK_1BDA53C61B063272 FOREIGN KEY (nationalite_id) REFERENCES nationalite (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:14:21.368054+02:00] doctrine.DEBUG: ALTER TABLE ordonance ADD CONSTRAINT FK_99240B9C62FF6CDF FOREIGN KEY (consultation_id) REFERENCES consultation (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:14:21.374731+02:00] doctrine.DEBUG: ALTER TABLE ordonance ADD CONSTRAINT FK_99240B9CAB0D61F7 FOREIGN KEY (medicament_id) REFERENCES medicament (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:14:21.378562+02:00] doctrine.DEBUG: ALTER TABLE patient ADD CONSTRAINT FK_1ADAD7EB1B063272 FOREIGN KEY (nationalite_id) REFERENCES nationalite (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:14:21.380583+02:00] doctrine.DEBUG: ALTER TABLE patient ADD CONSTRAINT FK_1ADAD7EB4272FC9F FOREIGN KEY (domaine_id) REFERENCES domaine (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:14:21.383738+02:00] doctrine.DEBUG: ALTER TABLE patient ADD CONSTRAINT FK_1ADAD7EB80F7E20A FOREIGN KEY (assureur_id) REFERENCES assureur (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:14:21.387314+02:00] doctrine.DEBUG: ALTER TABLE reglement ADD CONSTRAINT FK_EBE4C14C6B899279 FOREIGN KEY (patient_id) REFERENCES patient (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:14:21.391741+02:00] doctrine.DEBUG: ALTER TABLE reglement ADD CONSTRAINT FK_EBE4C14CE1AFE3AF FOREIGN KEY (modereg_id) REFERENCES modereg (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:14:21.394257+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-06-14T02:14:18+02:00",2983] []
[2021-06-14T02:14:21.396111+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-06-14T02:15:52.941827+02:00] console.CRITICAL: Error thrown while running command "create entity". Message: "Command "create" is not defined.  Did you mean one of these?     doctrine:database:create     doctrine:schema:create" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"create\" is not defined.\n\nDid you mean one of these?\n    doctrine:database:create\n    doctrine:schema:create at E:\\cabinet\\vendor\\symfony\\console\\Application.php:678)","command":"create entity","message":"Command \"create\" is not defined.\n\nDid you mean one of these?\n    doctrine:database:create\n    doctrine:schema:create"} []
[2021-06-14T02:16:16.579879+02:00] console.DEBUG: Command "make:entity" exited with code "1" {"command":"make:entity","code":1} []
[2021-06-14T02:17:32.631830+02:00] php.DEBUG: Notice: fwrite(): Write of 4294967295 bytes failed with errno=22 Invalid argument {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":8,"file":"E:\\cabinet\\vendor\\symfony\\console\\Output\\StreamOutput.php","line":76,"trace":[{"file":"E:\\cabinet\\vendor\\symfony\\console\\Output\\Output.php","line":166,"function":"doWrite","class":"Symfony\\Component\\Console\\Output\\StreamOutput","type":"->"}],"count":1}}} []
[2021-06-14T02:19:30.389556+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:19:30.415991+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:19:51.780412+02:00] doctrine.DEBUG: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' [] []
[2021-06-14T02:19:51.784210+02:00] doctrine.DEBUG: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                         increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'myCabinet'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' [] []
[2021-06-14T02:19:51.789586+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:19:51.793528+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:19:51.950160+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:20:03.437661+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:20:03.465010+02:00] doctrine.DEBUG: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) [] []
[2021-06-14T02:20:03.520337+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:20:03.522073+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:20:03.522506+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:20:03.536138+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-06-14T02:20:03.578819+02:00] doctrine.DEBUG: CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:20:03.581802+02:00] doctrine.DEBUG: CREATE SEQUENCE categorie_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:20:03.583378+02:00] doctrine.DEBUG: CREATE SEQUENCE compteur_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:20:03.584931+02:00] doctrine.DEBUG: CREATE SEQUENCE consultation_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:20:03.586526+02:00] doctrine.DEBUG: CREATE SEQUENCE domaine_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:20:03.588249+02:00] doctrine.DEBUG: CREATE SEQUENCE horaire_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:20:03.589962+02:00] doctrine.DEBUG: CREATE SEQUENCE medecin_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:20:03.591660+02:00] doctrine.DEBUG: CREATE SEQUENCE medicament_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:20:03.593153+02:00] doctrine.DEBUG: CREATE SEQUENCE modereg_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:20:03.594792+02:00] doctrine.DEBUG: CREATE SEQUENCE nationalite_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:20:03.596444+02:00] doctrine.DEBUG: CREATE SEQUENCE ordonance_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:20:03.598086+02:00] doctrine.DEBUG: CREATE SEQUENCE patient_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:20:03.600425+02:00] doctrine.DEBUG: CREATE SEQUENCE reglement_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:20:03.601906+02:00] doctrine.DEBUG: CREATE SEQUENCE specialite_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:20:03.603290+02:00] doctrine.DEBUG: CREATE SEQUENCE user_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2021-06-14T02:20:03.604843+02:00] doctrine.DEBUG: CREATE TABLE assureur (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:20:03.702383+02:00] doctrine.DEBUG: CREATE TABLE categorie (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:20:03.791218+02:00] doctrine.DEBUG: CREATE TABLE compteur (id INT NOT NULL, annee INT NOT NULL, numconsultation INT NOT NULL, numrdv INT NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:20:03.820818+02:00] doctrine.DEBUG: CREATE TABLE consultation (id INT NOT NULL, patient_id INT NOT NULL, numero INT NOT NULL, annee INT NOT NULL, date_consultation DATE NOT NULL, observation VARCHAR(255) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:20:03.856859+02:00] doctrine.DEBUG: CREATE INDEX IDX_964685A66B899279 ON consultation (patient_id) [] []
[2021-06-14T02:20:03.887579+02:00] doctrine.DEBUG: CREATE TABLE domaine (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:20:03.985539+02:00] doctrine.DEBUG: CREATE TABLE horaire (id INT NOT NULL, code VARCHAR(255) NOT NULL, hd TIME(0) WITHOUT TIME ZONE NOT NULL, hf TIME(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:20:04.052622+02:00] doctrine.DEBUG: CREATE TABLE medecin (id INT NOT NULL, specialite_id INT NOT NULL, categorie_id INT NOT NULL, nationalite_id INT DEFAULT NULL, matricule VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, date_naissance DATE DEFAULT NULL, adresse VARCHAR(255) DEFAULT NULL, ville VARCHAR(255) DEFAULT NULL, tel VARCHAR(255) NOT NULL, gsm VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, fax VARCHAR(255) DEFAULT NULL, genre VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:20:04.284417+02:00] doctrine.DEBUG: CREATE INDEX IDX_1BDA53C62195E0F0 ON medecin (specialite_id) [] []
[2021-06-14T02:20:04.381194+02:00] doctrine.DEBUG: CREATE INDEX IDX_1BDA53C6BCF5E72D ON medecin (categorie_id) [] []
[2021-06-14T02:20:04.445744+02:00] doctrine.DEBUG: CREATE INDEX IDX_1BDA53C61B063272 ON medecin (nationalite_id) [] []
[2021-06-14T02:20:04.529986+02:00] doctrine.DEBUG: CREATE TABLE medicament (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, duree VARCHAR(255) NOT NULL, utilisation VARCHAR(255) NOT NULL, ctr_indication VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:20:04.744572+02:00] doctrine.DEBUG: CREATE TABLE modereg (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:20:04.922484+02:00] doctrine.DEBUG: CREATE TABLE nationalite (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:20:05.026299+02:00] doctrine.DEBUG: CREATE TABLE ordonance (id INT NOT NULL, consultation_id INT DEFAULT NULL, medicament_id INT DEFAULT NULL, code VARCHAR(255) NOT NULL, nbr INT NOT NULL, duree VARCHAR(255) NOT NULL, utilisation VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:20:05.103677+02:00] doctrine.DEBUG: CREATE INDEX IDX_99240B9C62FF6CDF ON ordonance (consultation_id) [] []
[2021-06-14T02:20:05.134880+02:00] doctrine.DEBUG: CREATE INDEX IDX_99240B9CAB0D61F7 ON ordonance (medicament_id) [] []
[2021-06-14T02:20:05.166675+02:00] doctrine.DEBUG: CREATE TABLE patient (id INT NOT NULL, nationalite_id INT NOT NULL, domaine_id INT DEFAULT NULL, assureur_id INT DEFAULT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, date_naissance DATE NOT NULL, adresse VARCHAR(255) NOT NULL, ville VARCHAR(255) NOT NULL, tel VARCHAR(255) NOT NULL, gsm VARCHAR(255) NOT NULL, genre VARCHAR(255) NOT NULL, etat_civil VARCHAR(255) NOT NULL, nbr_enfant INT NOT NULL, nom_conjoint VARCHAR(255) NOT NULL, lien_parente VARCHAR(255) NOT NULL, taille DOUBLE PRECISION NOT NULL, poids INT NOT NULL, gr_sanguin VARCHAR(255) NOT NULL, profession VARCHAR(255) DEFAULT NULL, ident_unique VARCHAR(255) DEFAULT NULL, prise_encharge VARCHAR(255) NOT NULL, medecin VARCHAR(255) DEFAULT NULL, datep_cons DATE DEFAULT NULL, date_dcons DATE DEFAULT NULL, motcles VARCHAR(255) DEFAULT NULL, code_apci VARCHAR(255) DEFAULT NULL, regime_cnam VARCHAR(255) NOT NULL, datevalidite DATE DEFAULT NULL, code VARCHAR(255) NOT NULL, lieu VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:20:05.290341+02:00] doctrine.DEBUG: CREATE INDEX IDX_1ADAD7EB1B063272 ON patient (nationalite_id) [] []
[2021-06-14T02:20:05.336371+02:00] doctrine.DEBUG: CREATE INDEX IDX_1ADAD7EB4272FC9F ON patient (domaine_id) [] []
[2021-06-14T02:20:05.367645+02:00] doctrine.DEBUG: CREATE INDEX IDX_1ADAD7EB80F7E20A ON patient (assureur_id) [] []
[2021-06-14T02:20:05.425362+02:00] doctrine.DEBUG: CREATE TABLE reglement (id INT NOT NULL, patient_id INT NOT NULL, modereg_id INT NOT NULL, numero INT NOT NULL, annee INT NOT NULL, date_reglement DATE NOT NULL, mod_reglement VARCHAR(255) NOT NULL, num_piece VARCHAR(255) DEFAULT NULL, montant DOUBLE PRECISION NOT NULL, observation VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:20:05.706995+02:00] doctrine.DEBUG: CREATE INDEX IDX_EBE4C14C6B899279 ON reglement (patient_id) [] []
[2021-06-14T02:20:05.758714+02:00] doctrine.DEBUG: CREATE INDEX IDX_EBE4C14CE1AFE3AF ON reglement (modereg_id) [] []
[2021-06-14T02:20:05.789325+02:00] doctrine.DEBUG: CREATE TABLE specialite (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:20:05.888358+02:00] doctrine.DEBUG: CREATE TABLE "user" (id INT NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2021-06-14T02:20:05.990344+02:00] doctrine.DEBUG: CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON "user" (email) [] []
[2021-06-14T02:20:06.022591+02:00] doctrine.DEBUG: ALTER TABLE consultation ADD CONSTRAINT FK_964685A66B899279 FOREIGN KEY (patient_id) REFERENCES patient (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:20:06.054266+02:00] doctrine.DEBUG: ALTER TABLE medecin ADD CONSTRAINT FK_1BDA53C62195E0F0 FOREIGN KEY (specialite_id) REFERENCES specialite (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:20:06.067543+02:00] doctrine.DEBUG: ALTER TABLE medecin ADD CONSTRAINT FK_1BDA53C6BCF5E72D FOREIGN KEY (categorie_id) REFERENCES categorie (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:20:06.072423+02:00] doctrine.DEBUG: ALTER TABLE medecin ADD CONSTRAINT FK_1BDA53C61B063272 FOREIGN KEY (nationalite_id) REFERENCES nationalite (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:20:06.075974+02:00] doctrine.DEBUG: ALTER TABLE ordonance ADD CONSTRAINT FK_99240B9C62FF6CDF FOREIGN KEY (consultation_id) REFERENCES consultation (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:20:06.080456+02:00] doctrine.DEBUG: ALTER TABLE ordonance ADD CONSTRAINT FK_99240B9CAB0D61F7 FOREIGN KEY (medicament_id) REFERENCES medicament (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:20:06.082757+02:00] doctrine.DEBUG: ALTER TABLE patient ADD CONSTRAINT FK_1ADAD7EB1B063272 FOREIGN KEY (nationalite_id) REFERENCES nationalite (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:20:06.084270+02:00] doctrine.DEBUG: ALTER TABLE patient ADD CONSTRAINT FK_1ADAD7EB4272FC9F FOREIGN KEY (domaine_id) REFERENCES domaine (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:20:06.086300+02:00] doctrine.DEBUG: ALTER TABLE patient ADD CONSTRAINT FK_1ADAD7EB80F7E20A FOREIGN KEY (assureur_id) REFERENCES assureur (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:20:06.088398+02:00] doctrine.DEBUG: ALTER TABLE reglement ADD CONSTRAINT FK_EBE4C14C6B899279 FOREIGN KEY (patient_id) REFERENCES patient (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:20:06.091587+02:00] doctrine.DEBUG: ALTER TABLE reglement ADD CONSTRAINT FK_EBE4C14CE1AFE3AF FOREIGN KEY (modereg_id) REFERENCES modereg (id) NOT DEFERRABLE INITIALLY IMMEDIATE [] []
[2021-06-14T02:20:06.093964+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-06-14T02:20:03+02:00",2557] []
[2021-06-14T02:20:06.095887+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-06-14T02:29:38.452121+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Categorie","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/categories","method":"GET"} []
[2021-06-14T02:29:38.602107+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T02:29:40.346573+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.code AS code_1, c0_.libelle AS libelle_2 FROM categorie c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T02:29:41.083312+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM categorie c0_ [] []
[2021-06-14T02:29:41.950707+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:29:41.960711+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T02:29:41.961449+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:29:41.961830+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:29:41.967944+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:29:41.983257+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:29:41.987940+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:29:41.991096+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:29:41.991931+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:29:41.993721+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:29:42.018070+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:29:42.019772+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:29:42.021519+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:29:42.023634+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:29:42.024479+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:29:42.025918+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:29:42.026435+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:29:42.026979+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:29:42.027368+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:29:42.028985+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:29:42.030716+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:29:42.033026+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:29:42.033902+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:29:42.035350+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:29:42.035868+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:29:42.036381+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:30:36.748601+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:36.761540+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T02:30:36.763072+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:30:36.763420+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:36.776366+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:30:36.788995+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:30:36.792991+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:30:36.795223+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:30:36.795922+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:30:36.796935+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:30:36.801219+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:36.803049+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:36.804858+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:30:36.807128+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:30:36.807998+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:30:36.809383+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:30:36.809837+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:30:36.810328+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:30:36.810689+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:36.812306+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:36.814234+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:30:36.816393+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:30:36.817212+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:30:36.818676+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:30:36.819171+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:30:36.819678+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:30:37.070643+02:00] request.INFO: Matched route "api_categories_post_collection". {"route":"api_categories_post_collection","route_parameters":{"_route":"api_categories_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Categorie","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"post"},"request_uri":"http://127.0.0.1:8000/api/categories","method":"POST"} []
[2021-06-14T02:30:37.083799+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T02:30:37.424406+02:00] doctrine.DEBUG: SELECT NEXTVAL('categorie_id_seq') [] []
[2021-06-14T02:30:37.446328+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-06-14T02:30:37.654650+02:00] doctrine.DEBUG: INSERT INTO categorie (id, code, libelle) VALUES (?, ?, ?) {"1":1,"2":"002","3":"Medecin Dentiste"} []
[2021-06-14T02:30:37.718595+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2021-06-14T02:30:37.827485+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\UniqueConstraintViolationException: "An exception occurred while executing 'INSERT INTO categorie (id, code, libelle) VALUES (?, ?, ?)' with params [1, "002", "Medecin Dentiste"]:  SQLSTATE[23505]: Unique violation: 7 ERREUR:  la valeur d'une clÃ© dupliquÃ©e rompt la contrainte unique Â« categorie_pkey Â» DETAIL:  La clÃ© Â« (id)=(1) Â» existe dÃ©jÃ ." at E:\cabinet\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractPostgreSQLDriver.php line 70 {"exception":"[object] (Doctrine\\DBAL\\Exception\\UniqueConstraintViolationException(code: 0): An exception occurred while executing 'INSERT INTO categorie (id, code, libelle) VALUES (?, ?, ?)' with params [1, \"002\", \"Medecin Dentiste\"]:\n\nSQLSTATE[23505]: Unique violation: 7 ERREUR:  la valeur d'une clÃ© dupliquÃ©e rompt la contrainte unique Â« categorie_pkey Â»\nDETAIL:  La clÃ© Â« (id)=(1) Â» existe dÃ©jÃ . at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:70)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 23505): SQLSTATE[23505]: Unique violation: 7 ERREUR:  la valeur d'une clÃ© dupliquÃ©e rompt la contrainte unique Â« categorie_pkey Â»\nDETAIL:  La clÃ© Â« (id)=(1) Â» existe dÃ©jÃ . at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 23505): SQLSTATE[23505]: Unique violation: 7 ERREUR:  la valeur d'une clÃ© dupliquÃ©e rompt la contrainte unique Â« categorie_pkey Â»\nDETAIL:  La clÃ© Â« (id)=(1) Â» existe dÃ©jÃ . at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:112)"} []
[2021-06-14T02:30:37.907472+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:37.921341+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T02:30:37.923338+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:30:37.923714+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:37.931007+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:30:37.943425+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:30:37.947343+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:30:37.950493+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:30:37.951276+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:30:37.952281+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:30:37.957515+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:37.959298+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:37.961281+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:30:37.963757+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:30:37.964860+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:30:37.966932+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:30:37.967471+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:30:37.967945+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:30:37.968378+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:37.970040+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:37.971784+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:30:37.974064+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:30:37.974827+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:30:37.976363+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:30:37.976859+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:30:37.977297+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:30:37.979870+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:37.982293+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:37.984393+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:30:37.986742+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:30:37.987630+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:30:37.989181+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:30:37.989745+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:30:37.990218+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:30:37.990590+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:37.992295+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:37.994106+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:30:37.996406+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:30:37.997583+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:30:38.000014+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:30:38.000623+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:30:38.001129+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:30:38.001488+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:38.003161+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:38.005220+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:30:38.007516+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:30:38.008414+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:30:38.009918+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:30:38.010461+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:30:38.010933+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:30:42.601399+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Categorie","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/categories","method":"GET"} []
[2021-06-14T02:30:42.627911+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T02:30:42.840673+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.code AS code_1, c0_.libelle AS libelle_2 FROM categorie c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T02:30:42.853783+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM categorie c0_ [] []
[2021-06-14T02:30:42.927164+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:42.935557+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T02:30:42.936221+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:30:42.936490+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:42.942335+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:30:42.953168+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:30:42.957179+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:30:42.960556+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:30:42.961592+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:30:42.962664+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:30:42.967184+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:42.968984+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:42.970723+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:30:42.972874+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:30:42.973633+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:30:42.975027+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:30:42.975424+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:30:42.975838+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:30:42.976147+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:42.977776+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:30:42.979530+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:30:42.981650+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:30:42.982420+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:30:42.983816+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:30:42.984227+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:30:42.984634+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:21.443017+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:21.455704+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T02:31:21.457009+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:31:21.457296+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:21.468884+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:21.481334+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:21.485744+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:21.487921+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:21.488643+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:21.489629+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:21.493745+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:21.495526+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:21.497369+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:21.499751+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:21.500607+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:21.502074+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:21.502556+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:21.502976+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:21.503299+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:21.504908+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:21.506681+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:21.508811+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:21.509604+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:21.511027+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:21.511612+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:21.512083+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:21.761714+02:00] request.INFO: Matched route "api_categories_put_item". {"route":"api_categories_put_item","route_parameters":{"_route":"api_categories_put_item","_controller":"api_platform.action.put_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Categorie","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"put","id":"1"},"request_uri":"http://127.0.0.1:8000/api/categories/1","method":"PUT"} []
[2021-06-14T02:31:21.774549+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T02:31:22.170890+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.code AS code_1, c0_.libelle AS libelle_2 FROM categorie c0_ WHERE c0_.id = ? [1] []
[2021-06-14T02:31:22.245280+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-06-14T02:31:22.250077+02:00] doctrine.DEBUG: UPDATE categorie SET libelle = ? WHERE id = ? ["Medecin GÃ©nÃ©raliste fff",1] []
[2021-06-14T02:31:22.292379+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-06-14T02:31:22.350177+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.code AS code_2, t0.libelle AS libelle_3 FROM categorie t0 WHERE t0.id = ? [1] []
[2021-06-14T02:31:22.433213+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:22.442883+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T02:31:22.443629+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:31:22.444012+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:22.450374+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:22.463701+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:22.467934+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:22.470233+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:22.471031+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:22.472056+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:22.477218+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:22.479222+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:22.481030+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:22.483217+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:22.484281+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:22.485751+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:22.486309+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:22.486833+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:22.487162+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:22.488901+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:22.490696+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:22.492993+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:22.493946+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:22.495614+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:22.496185+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:22.496678+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:22.860663+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Categorie","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/categories","method":"GET"} []
[2021-06-14T02:31:22.874500+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T02:31:23.042708+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.code AS code_1, c0_.libelle AS libelle_2 FROM categorie c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T02:31:23.055764+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM categorie c0_ [] []
[2021-06-14T02:31:23.119994+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:23.129995+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T02:31:23.130759+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:31:23.131081+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:23.136810+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:23.149731+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:23.153712+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:23.156000+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:23.156812+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:23.157802+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:23.162517+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:23.164555+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:23.166474+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:23.168685+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:23.169553+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:23.171045+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:23.171685+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:23.172264+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:23.172647+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:23.174390+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:23.176209+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:23.178656+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:23.179675+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:23.181663+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:23.182246+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:23.182750+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:29.104517+02:00] request.INFO: Matched route "api_categories_put_item". {"route":"api_categories_put_item","route_parameters":{"_route":"api_categories_put_item","_controller":"api_platform.action.put_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Categorie","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"put","id":"1"},"request_uri":"http://127.0.0.1:8000/api/categories/1","method":"PUT"} []
[2021-06-14T02:31:29.117043+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T02:31:29.233966+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.code AS code_1, c0_.libelle AS libelle_2 FROM categorie c0_ WHERE c0_.id = ? [1] []
[2021-06-14T02:31:29.266691+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-06-14T02:31:29.270911+02:00] doctrine.DEBUG: UPDATE categorie SET libelle = ? WHERE id = ? ["Medecin GÃ©nÃ©raliste ",1] []
[2021-06-14T02:31:29.271723+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-06-14T02:31:29.274055+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.code AS code_2, t0.libelle AS libelle_3 FROM categorie t0 WHERE t0.id = ? [1] []
[2021-06-14T02:31:29.337698+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:29.347018+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T02:31:29.347786+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:31:29.348099+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:29.353463+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:29.365517+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:29.369503+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:29.371579+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:29.372346+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:29.373287+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:29.377845+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:29.379620+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:29.381375+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:29.383658+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:29.384518+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:29.385894+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:29.386416+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:29.386886+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:29.387241+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:29.388868+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:29.390713+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:29.392919+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:29.393777+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:29.395169+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:29.395705+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:29.396174+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:29.709910+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Categorie","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/categories","method":"GET"} []
[2021-06-14T02:31:29.721346+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T02:31:29.872755+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.code AS code_1, c0_.libelle AS libelle_2 FROM categorie c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T02:31:29.885753+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM categorie c0_ [] []
[2021-06-14T02:31:29.945957+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:29.954372+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T02:31:29.955032+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:31:29.955300+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:29.961023+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:29.972248+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:29.976094+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:29.978291+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:29.979015+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:29.979988+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:29.984366+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:29.986196+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:29.988326+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:29.991025+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:29.991862+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:29.993348+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:29.993833+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:29.994347+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:29.994740+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:29.996748+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:29.998598+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:30.000854+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:30.001709+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:30.003165+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:30.003690+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:30.004265+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:37.699078+02:00] request.INFO: Matched route "api_categories_post_collection". {"route":"api_categories_post_collection","route_parameters":{"_route":"api_categories_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Categorie","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"post"},"request_uri":"http://127.0.0.1:8000/api/categories","method":"POST"} []
[2021-06-14T02:31:37.712326+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T02:31:37.829965+02:00] doctrine.DEBUG: SELECT NEXTVAL('categorie_id_seq') [] []
[2021-06-14T02:31:37.831325+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-06-14T02:31:37.837441+02:00] doctrine.DEBUG: INSERT INTO categorie (id, code, libelle) VALUES (?, ?, ?) {"1":2,"2":"002","3":"gffgf"} []
[2021-06-14T02:31:37.838836+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-06-14T02:31:37.841762+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.code AS code_2, t0.libelle AS libelle_3 FROM categorie t0 WHERE t0.id = ? [2] []
[2021-06-14T02:31:37.911324+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:37.920743+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T02:31:37.921502+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:31:37.921829+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:37.927384+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:37.939595+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:37.943641+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:37.945827+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:37.946584+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:37.947518+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:37.951693+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:37.953506+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:37.955280+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:37.957461+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:37.958300+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:37.959800+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:37.960343+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:37.960835+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:37.961205+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:37.962811+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:37.964537+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:37.966699+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:37.967538+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:37.968958+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:37.969484+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:37.969946+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:38.260748+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Categorie","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/categories","method":"GET"} []
[2021-06-14T02:31:38.272280+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T02:31:38.424839+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.code AS code_1, c0_.libelle AS libelle_2 FROM categorie c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T02:31:38.440327+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM categorie c0_ [] []
[2021-06-14T02:31:38.506367+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:38.516382+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T02:31:38.517174+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:31:38.517508+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:38.523096+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:38.535621+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:38.539684+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:38.541924+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:38.542739+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:38.543755+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:38.548106+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:38.549982+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:38.551867+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:38.554262+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:38.555134+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:38.556614+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:38.557172+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:38.557652+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:38.558008+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:38.559699+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:38.561817+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:38.564063+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:38.564905+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:38.566378+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:38.566907+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:38.567394+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:53.617776+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T02:31:53.629246+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T02:31:54.000016+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T02:31:54.008289+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T02:31:54.111487+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:54.121009+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T02:31:54.121756+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:31:54.122084+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:54.129077+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:54.142052+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:54.146701+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:54.149301+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:54.150149+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:54.151215+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:54.156360+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:54.158175+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:54.160087+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:54.162796+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:54.163786+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:54.165420+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:54.165949+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:54.166456+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:54.166832+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:54.168609+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:54.170473+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:54.172975+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:54.173885+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:54.175388+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:54.175934+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:54.176650+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:55.306117+02:00] request.INFO: Matched route "code". {"route":"code","route_parameters":{"_route":"code","_controller":"App\\Controller\\ApiCodeController::getCompteur"},"request_uri":"http://localhost:8000/get/code","method":"GET"} []
[2021-06-14T02:31:55.322575+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T02:31:55.469416+02:00] php.CRITICAL: Uncaught Error: Object of type DateTime is not callable {"exception":"[object] (Error(code: 0): Object of type DateTime is not callable at E:\\cabinet\\src\\Controller\\ApiCodeController.php:24)"} []
[2021-06-14T02:31:55.586727+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Object of type DateTime is not callable" at E:\cabinet\src\Controller\ApiCodeController.php line 24 {"exception":"[object] (Error(code: 0): Object of type DateTime is not callable at E:\\cabinet\\src\\Controller\\ApiCodeController.php:24)"} []
[2021-06-14T02:31:55.699076+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:55.711606+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T02:31:55.713138+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:31:55.713501+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:55.726602+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:55.739105+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:55.743120+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:55.745539+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:55.746353+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:55.747399+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:55.752134+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:55.754058+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:55.756202+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:55.758586+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:55.759453+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:55.760999+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:55.761479+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:55.761993+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:55.762355+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:55.764036+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:55.765851+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:55.768109+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:55.769029+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:55.770447+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:55.770941+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:55.771448+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:55.773216+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:55.774931+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:55.776955+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:55.779151+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:55.780261+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:55.781696+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:55.782169+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:55.782653+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:55.783043+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:55.784661+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:55.786418+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:55.788543+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:55.789379+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:55.790741+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:55.791206+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:55.791701+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:55.792071+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:55.794165+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:55.796000+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:55.798196+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:55.799044+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:55.800476+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:55.800932+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:55.801422+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:56.173922+02:00] request.INFO: Matched route "api_patients_get_collection". {"route":"api_patients_get_collection","route_parameters":{"_route":"api_patients_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Patient","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/patients","method":"GET"} []
[2021-06-14T02:31:56.187044+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T02:31:56.475013+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.nom AS nom_1, p0_.prenom AS prenom_2, p0_.date_naissance AS date_naissance_3, p0_.adresse AS adresse_4, p0_.ville AS ville_5, p0_.tel AS tel_6, p0_.gsm AS gsm_7, p0_.genre AS genre_8, p0_.etat_civil AS etat_civil_9, p0_.nbr_enfant AS nbr_enfant_10, p0_.nom_conjoint AS nom_conjoint_11, p0_.lien_parente AS lien_parente_12, p0_.taille AS taille_13, p0_.poids AS poids_14, p0_.gr_sanguin AS gr_sanguin_15, p0_.profession AS profession_16, p0_.ident_unique AS ident_unique_17, p0_.prise_encharge AS prise_encharge_18, p0_.medecin AS medecin_19, p0_.datep_cons AS datep_cons_20, p0_.date_dcons AS date_dcons_21, p0_.motcles AS motcles_22, p0_.code_apci AS code_apci_23, p0_.regime_cnam AS regime_cnam_24, p0_.datevalidite AS datevalidite_25, p0_.code AS code_26, p0_.lieu AS lieu_27, p0_.email AS email_28, p0_.nationalite_id AS nationalite_id_29, p0_.domaine_id AS domaine_id_30, p0_.assureur_id AS assureur_id_31 FROM patient p0_ ORDER BY p0_.id ASC LIMIT 30 [] []
[2021-06-14T02:31:56.484922+02:00] doctrine.DEBUG: SELECT count(p0_.id) AS sclr_0 FROM patient p0_ [] []
[2021-06-14T02:31:56.587610+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:56.596966+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T02:31:56.597711+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:31:56.597986+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:56.603958+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:56.616583+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:56.620641+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:56.623028+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:56.623803+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:56.624838+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:56.629751+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:56.631554+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:56.633352+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:56.635578+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:56.636433+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:56.637959+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:56.638477+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:56.638964+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:56.639322+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:56.640995+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:56.643177+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:56.645628+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:56.646535+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:56.648014+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:56.648565+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:56.649055+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:56.970020+02:00] request.INFO: Matched route "register". {"route":"register","route_parameters":{"_route":"register","_controller":"App\\Controller\\OrdonanceController::index","id":"null"},"request_uri":"http://localhost:8000/get/ordonance/null","method":"GET"} []
[2021-06-14T02:31:56.979808+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T02:31:57.109091+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8 ["null"] []
[2021-06-14T02:31:57.198781+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\DriverException: "An exception occurred while executing 'SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8' with params ["null"]:  SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â»" at E:\cabinet\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractPostgreSQLDriver.php line 102 {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred while executing 'SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8' with params [\"null\"]:\n\nSQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:102)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 22P02): SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 22P02): SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:112)"} []
[2021-06-14T02:31:57.255529+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:57.268139+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T02:31:57.268936+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:31:57.269216+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:57.274832+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:57.287386+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:57.291090+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:57.293437+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:57.294345+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:57.295772+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:57.300022+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:57.301845+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:57.303644+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:57.305849+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:57.306720+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:57.308113+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:57.308539+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:57.308984+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:57.309285+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:57.311865+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:57.314014+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:57.316394+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:57.317302+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:57.318745+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:57.319226+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:57.319728+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:57.329794+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:57.331702+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:57.333599+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:57.335867+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:57.336750+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:57.338185+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:57.338654+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:57.339138+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:57.339536+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:57.341235+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:57.343271+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:57.346512+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:57.347523+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:57.348958+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:57.349552+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:57.350067+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:31:57.350398+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:57.352193+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:31:57.354019+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:31:57.356513+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:31:57.357400+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:31:57.358919+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:31:57.359396+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:31:57.360293+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:43:57.064733+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T02:43:57.081294+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T02:43:57.300774+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T02:43:57.312484+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T02:43:57.416971+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:43:57.425664+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T02:43:57.426415+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T02:43:57.426681+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:43:57.432482+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:43:57.445487+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:43:57.449545+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:43:57.451643+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:43:57.452364+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:43:57.453528+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:43:57.458396+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:43:57.460136+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:43:57.461944+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:43:57.464081+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:43:57.464949+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:43:57.466387+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:43:57.466855+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:43:57.467326+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T02:43:57.467688+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:43:57.469343+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T02:43:57.471102+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T02:43:57.473274+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T02:43:57.474144+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T02:43:57.475534+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T02:43:57.476001+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T02:43:57.476493+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:07:24.737563+02:00] request.INFO: Matched route "code". {"route":"code","route_parameters":{"_route":"code","_controller":"App\\Controller\\ApiCodeController::getCompteur","id":"2021"},"request_uri":"http://localhost:8000/get/code/2021","method":"GET"} []
[2021-06-14T03:07:24.740677+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T03:07:24.754454+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Undefined variable $repository" at E:\cabinet\src\Controller\ApiCodeController.php line 23 {"exception":"[object] (ErrorException(code: 0): Warning: Undefined variable $repository at E:\\cabinet\\src\\Controller\\ApiCodeController.php:23)"} []
[2021-06-14T03:07:24.844375+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:24.857847+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T03:07:24.858917+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T03:07:24.859266+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:24.869020+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:07:24.887711+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:07:24.893523+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:07:24.896717+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:07:24.897916+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:07:24.899615+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:07:24.908106+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:24.909883+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:24.911693+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:07:24.913942+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:07:24.914755+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:07:24.916219+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:07:24.916681+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:07:24.917106+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:07:24.917360+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:24.919054+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:24.920916+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:07:24.923006+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:07:24.923815+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:07:24.925181+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:07:24.925606+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:07:24.925966+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:07:24.928364+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:24.930136+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:24.931901+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:07:24.934287+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:07:24.935572+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:07:24.937852+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:07:24.938591+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:07:24.939204+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:07:24.939863+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:24.942079+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:24.943978+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:07:24.946156+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:07:24.946940+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:07:24.948374+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:07:24.948796+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:07:24.949191+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:07:24.949464+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:24.951089+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:24.952860+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:07:24.954948+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:07:24.955696+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:07:24.957405+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:07:24.957892+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:07:24.958326+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:07:25.411104+02:00] request.INFO: Matched route "api_patients_get_collection". {"route":"api_patients_get_collection","route_parameters":{"_route":"api_patients_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Patient","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/patients","method":"GET"} []
[2021-06-14T03:07:25.423390+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T03:07:25.764967+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.nom AS nom_1, p0_.prenom AS prenom_2, p0_.date_naissance AS date_naissance_3, p0_.adresse AS adresse_4, p0_.ville AS ville_5, p0_.tel AS tel_6, p0_.gsm AS gsm_7, p0_.genre AS genre_8, p0_.etat_civil AS etat_civil_9, p0_.nbr_enfant AS nbr_enfant_10, p0_.nom_conjoint AS nom_conjoint_11, p0_.lien_parente AS lien_parente_12, p0_.taille AS taille_13, p0_.poids AS poids_14, p0_.gr_sanguin AS gr_sanguin_15, p0_.profession AS profession_16, p0_.ident_unique AS ident_unique_17, p0_.prise_encharge AS prise_encharge_18, p0_.medecin AS medecin_19, p0_.datep_cons AS datep_cons_20, p0_.date_dcons AS date_dcons_21, p0_.motcles AS motcles_22, p0_.code_apci AS code_apci_23, p0_.regime_cnam AS regime_cnam_24, p0_.datevalidite AS datevalidite_25, p0_.code AS code_26, p0_.lieu AS lieu_27, p0_.email AS email_28, p0_.nationalite_id AS nationalite_id_29, p0_.domaine_id AS domaine_id_30, p0_.assureur_id AS assureur_id_31 FROM patient p0_ ORDER BY p0_.id ASC LIMIT 30 [] []
[2021-06-14T03:07:25.775341+02:00] doctrine.DEBUG: SELECT count(p0_.id) AS sclr_0 FROM patient p0_ [] []
[2021-06-14T03:07:25.876756+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:25.885570+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T03:07:25.886263+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T03:07:25.886562+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:25.892739+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:07:25.904664+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:07:25.908301+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:07:25.910982+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:07:25.911941+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:07:25.913076+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:07:25.917994+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:25.919818+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:25.921597+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:07:25.923760+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:07:25.924562+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:07:25.925940+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:07:25.926408+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:07:25.926823+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:07:25.927123+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:25.928755+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:25.930539+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:07:25.932735+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:07:25.933524+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:07:25.934921+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:07:25.935507+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:07:25.936000+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:07:26.265560+02:00] request.INFO: Matched route "register". {"route":"register","route_parameters":{"_route":"register","_controller":"App\\Controller\\OrdonanceController::index","id":"null"},"request_uri":"http://localhost:8000/get/ordonance/null","method":"GET"} []
[2021-06-14T03:07:26.278888+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T03:07:26.408938+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8 ["null"] []
[2021-06-14T03:07:26.466527+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\DriverException: "An exception occurred while executing 'SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8' with params ["null"]:  SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â»" at E:\cabinet\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractPostgreSQLDriver.php line 102 {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred while executing 'SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8' with params [\"null\"]:\n\nSQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:102)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 22P02): SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 22P02): SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:112)"} []
[2021-06-14T03:07:26.512718+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:26.523279+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T03:07:26.524042+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T03:07:26.524334+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:26.529913+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:07:26.541315+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:07:26.545476+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:07:26.547603+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:07:26.548249+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:07:26.549175+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:07:26.553465+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:26.555341+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:26.557107+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:07:26.559359+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:07:26.560214+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:07:26.561594+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:07:26.562000+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:07:26.562433+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:07:26.562739+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:26.564337+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:26.566084+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:07:26.568477+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:07:26.569292+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:07:26.571111+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:07:26.571593+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:07:26.572081+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:07:26.580588+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:26.582359+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:26.584335+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:07:26.586694+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:07:26.587561+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:07:26.588990+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:07:26.589459+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:07:26.589947+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:07:26.590338+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:26.592134+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:26.594011+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:07:26.596207+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:07:26.597045+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:07:26.598523+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:07:26.599000+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:07:26.599492+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:07:26.599914+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:26.601997+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:07:26.603909+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:07:26.606186+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:07:26.607076+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:07:26.608782+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:07:26.609256+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:07:26.609747+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:08:29.913409+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2021-06-14T03:08:29.923408+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T03:08:31.708399+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:08:31.720777+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T03:08:31.721597+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T03:08:31.721949+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:08:31.728197+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:08:31.741503+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:08:31.745193+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:08:31.747446+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:08:31.748188+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:08:31.749246+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:08:31.754609+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:08:31.756398+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:08:31.758163+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:08:31.760429+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:08:31.761236+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:08:31.763428+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:08:31.763925+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:08:31.764369+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:08:31.764670+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:08:31.766282+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:08:31.768050+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:08:31.770502+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:08:31.771486+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:08:31.773007+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:08:31.773501+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:08:31.773939+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:08:33.877611+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0f60ea"},"request_uri":"http://127.0.0.1:8000/_wdt/0f60ea","method":"GET"} []
[2021-06-14T03:12:44.313650+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2021-06-14T03:12:44.321515+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T03:12:45.023607+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:12:45.036793+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T03:12:45.037780+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T03:12:45.038148+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:12:45.046489+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:12:45.059764+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:12:45.063378+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:12:45.065489+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:12:45.066170+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:12:45.067167+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:12:45.072683+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:12:45.074543+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:12:45.076834+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:12:45.079058+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:12:45.079844+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:12:45.081294+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:12:45.081733+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:12:45.082133+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:12:45.082388+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:12:45.083955+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:12:45.085615+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:12:45.087678+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:12:45.088366+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:12:45.089690+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:12:45.090073+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:12:45.090436+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:12:45.936979+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d24f3c"},"request_uri":"http://127.0.0.1:8000/_wdt/d24f3c","method":"GET"} []
[2021-06-14T03:14:05.627908+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/get/code/1" (from "http://localhost:4200/")" at E:\cabinet\vendor\symfony\http-kernel\EventListener\RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/get/code/1\" (from \"http://localhost:4200/\") at E:\\cabinet\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/get/code/1/\". at E:\\cabinet\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2021-06-14T03:14:05.756591+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:05.770589+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T03:14:05.772844+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T03:14:05.773246+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:05.795279+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:05.809257+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:05.813357+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:05.815829+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:05.816760+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:05.817942+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:05.824781+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:05.827829+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:05.829768+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:05.832098+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:05.832957+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:05.834455+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:05.834959+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:05.835407+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:05.835768+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:05.837861+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:05.839951+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:05.842230+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:05.843097+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:05.845255+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:05.845760+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:05.846209+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:05.847919+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:05.849719+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:05.852372+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:05.854653+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:05.855493+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:05.856977+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:05.857599+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:05.858062+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:05.858390+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:05.860090+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:05.861900+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:05.864045+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:05.864815+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:05.866170+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:05.866593+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:05.867040+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:05.867332+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:05.868934+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:05.870588+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:05.872605+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:05.873320+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:05.874667+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:05.875110+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:05.875493+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:06.248279+02:00] request.INFO: Matched route "api_patients_get_collection". {"route":"api_patients_get_collection","route_parameters":{"_route":"api_patients_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Patient","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/patients","method":"GET"} []
[2021-06-14T03:14:06.260585+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T03:14:06.544078+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.nom AS nom_1, p0_.prenom AS prenom_2, p0_.date_naissance AS date_naissance_3, p0_.adresse AS adresse_4, p0_.ville AS ville_5, p0_.tel AS tel_6, p0_.gsm AS gsm_7, p0_.genre AS genre_8, p0_.etat_civil AS etat_civil_9, p0_.nbr_enfant AS nbr_enfant_10, p0_.nom_conjoint AS nom_conjoint_11, p0_.lien_parente AS lien_parente_12, p0_.taille AS taille_13, p0_.poids AS poids_14, p0_.gr_sanguin AS gr_sanguin_15, p0_.profession AS profession_16, p0_.ident_unique AS ident_unique_17, p0_.prise_encharge AS prise_encharge_18, p0_.medecin AS medecin_19, p0_.datep_cons AS datep_cons_20, p0_.date_dcons AS date_dcons_21, p0_.motcles AS motcles_22, p0_.code_apci AS code_apci_23, p0_.regime_cnam AS regime_cnam_24, p0_.datevalidite AS datevalidite_25, p0_.code AS code_26, p0_.lieu AS lieu_27, p0_.email AS email_28, p0_.nationalite_id AS nationalite_id_29, p0_.domaine_id AS domaine_id_30, p0_.assureur_id AS assureur_id_31 FROM patient p0_ ORDER BY p0_.id ASC LIMIT 30 [] []
[2021-06-14T03:14:06.554011+02:00] doctrine.DEBUG: SELECT count(p0_.id) AS sclr_0 FROM patient p0_ [] []
[2021-06-14T03:14:06.646485+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:06.655360+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T03:14:06.656132+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T03:14:06.656445+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:06.662397+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:06.675294+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:06.679320+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:06.681613+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:06.682373+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:06.683577+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:06.688360+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:06.690169+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:06.691958+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:06.694117+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:06.694968+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:06.696425+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:06.697069+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:06.697736+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:06.698232+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:06.701414+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:06.703240+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:06.705444+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:06.706291+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:06.707827+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:06.708301+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:06.708793+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:07.015579+02:00] request.INFO: Matched route "register". {"route":"register","route_parameters":{"_route":"register","_controller":"App\\Controller\\OrdonanceController::index","id":"null"},"request_uri":"http://localhost:8000/get/ordonance/null","method":"GET"} []
[2021-06-14T03:14:07.027849+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T03:14:07.167089+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8 ["null"] []
[2021-06-14T03:14:07.222374+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\DriverException: "An exception occurred while executing 'SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8' with params ["null"]:  SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â»" at E:\cabinet\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractPostgreSQLDriver.php line 102 {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred while executing 'SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8' with params [\"null\"]:\n\nSQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:102)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 22P02): SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 22P02): SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:112)"} []
[2021-06-14T03:14:07.264509+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:07.275416+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T03:14:07.276362+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T03:14:07.276730+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:07.282428+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:07.295556+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:07.300453+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:07.302718+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:07.303422+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:07.304814+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:07.309347+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:07.311182+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:07.313048+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:07.315301+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:07.316151+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:07.317770+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:07.318341+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:07.318836+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:07.319229+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:07.321250+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:07.323170+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:07.325395+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:07.326254+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:07.327943+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:07.328511+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:07.328999+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:07.337253+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:07.339071+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:07.340887+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:07.343114+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:07.343993+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:07.345498+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:07.346040+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:07.346530+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:07.346924+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:07.348568+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:07.350392+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:07.352600+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:07.353506+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:07.354950+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:07.355501+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:07.355970+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:07.356354+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:07.358008+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:07.359809+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:07.362010+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:07.362862+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:07.364385+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:07.364916+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:07.365389+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:48.938059+02:00] request.INFO: Matched route "api_patients_get_collection". {"route":"api_patients_get_collection","route_parameters":{"_route":"api_patients_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Patient","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/patients","method":"GET"} []
[2021-06-14T03:14:48.947687+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T03:14:49.133309+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.nom AS nom_1, p0_.prenom AS prenom_2, p0_.date_naissance AS date_naissance_3, p0_.adresse AS adresse_4, p0_.ville AS ville_5, p0_.tel AS tel_6, p0_.gsm AS gsm_7, p0_.genre AS genre_8, p0_.etat_civil AS etat_civil_9, p0_.nbr_enfant AS nbr_enfant_10, p0_.nom_conjoint AS nom_conjoint_11, p0_.lien_parente AS lien_parente_12, p0_.taille AS taille_13, p0_.poids AS poids_14, p0_.gr_sanguin AS gr_sanguin_15, p0_.profession AS profession_16, p0_.ident_unique AS ident_unique_17, p0_.prise_encharge AS prise_encharge_18, p0_.medecin AS medecin_19, p0_.datep_cons AS datep_cons_20, p0_.date_dcons AS date_dcons_21, p0_.motcles AS motcles_22, p0_.code_apci AS code_apci_23, p0_.regime_cnam AS regime_cnam_24, p0_.datevalidite AS datevalidite_25, p0_.code AS code_26, p0_.lieu AS lieu_27, p0_.email AS email_28, p0_.nationalite_id AS nationalite_id_29, p0_.domaine_id AS domaine_id_30, p0_.assureur_id AS assureur_id_31 FROM patient p0_ ORDER BY p0_.id ASC LIMIT 30 [] []
[2021-06-14T03:14:49.143073+02:00] doctrine.DEBUG: SELECT count(p0_.id) AS sclr_0 FROM patient p0_ [] []
[2021-06-14T03:14:49.216760+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:49.226427+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T03:14:49.227099+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T03:14:49.227427+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:49.233091+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:49.245360+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:49.249356+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:49.251454+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:49.252625+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:49.254241+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:49.258702+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:49.260536+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:49.262346+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:49.264571+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:49.265534+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:49.266961+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:49.267438+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:49.267933+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:49.268349+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:49.270790+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:49.272725+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:49.274985+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:49.275859+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:49.277277+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:49.277719+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:49.278164+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:49.549263+02:00] request.INFO: Matched route "api_compteurs_get_item". {"route":"api_compteurs_get_item","route_parameters":{"_route":"api_compteurs_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Compteur","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/compteurs/1","method":"GET"} []
[2021-06-14T03:14:49.557543+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T03:14:49.676133+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.annee AS annee_1, c0_.numconsultation AS numconsultation_2, c0_.numrdv AS numrdv_3 FROM compteur c0_ WHERE c0_.id = ? [1] []
[2021-06-14T03:14:49.938668+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:49.947379+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T03:14:49.948143+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T03:14:49.948439+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:49.954425+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:49.966103+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:49.969822+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:49.972010+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:49.972719+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:49.973703+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:49.978467+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:49.980393+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:49.982236+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:49.984477+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:49.985333+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:49.986779+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:49.987352+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:49.987848+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:49.988221+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:49.989883+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:49.991698+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:49.993917+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:49.995009+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:49.996533+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:49.997069+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:49.997557+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:50.316384+02:00] request.INFO: Matched route "register". {"route":"register","route_parameters":{"_route":"register","_controller":"App\\Controller\\OrdonanceController::index","id":"null"},"request_uri":"http://localhost:8000/get/ordonance/null","method":"GET"} []
[2021-06-14T03:14:50.329230+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T03:14:50.465113+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8 ["null"] []
[2021-06-14T03:14:50.519744+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\DriverException: "An exception occurred while executing 'SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8' with params ["null"]:  SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â»" at E:\cabinet\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractPostgreSQLDriver.php line 102 {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred while executing 'SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8' with params [\"null\"]:\n\nSQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:102)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 22P02): SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 22P02): SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:112)"} []
[2021-06-14T03:14:50.562016+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:50.573100+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T03:14:50.573915+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T03:14:50.574238+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:50.582459+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:50.595430+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:50.599701+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:50.602262+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:50.602965+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:50.603951+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:50.608435+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:50.610293+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:50.612188+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:50.614442+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:50.615312+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:50.616906+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:50.617409+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:50.617886+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:50.618268+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:50.620006+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:50.621790+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:50.624023+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:50.624870+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:50.626301+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:50.626785+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:50.627266+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:50.639507+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:50.641283+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:50.643087+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:50.645272+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:50.646255+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:50.647742+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:50.648241+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:50.648706+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:50.649066+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:50.650767+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:50.652527+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:50.654986+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:50.655875+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:50.657255+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:50.657722+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:50.658182+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T03:14:50.658563+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:50.660176+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T03:14:50.662006+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T03:14:50.664296+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T03:14:50.665161+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T03:14:50.666647+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T03:14:50.667194+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T03:14:50.667709+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:30.679332+02:00] request.INFO: Matched route "api_rdvs_get_collection". {"route":"api_rdvs_get_collection","route_parameters":{"_route":"api_rdvs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Rdv","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/rdvs","method":"GET"} []
[2021-06-14T13:58:30.851811+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T13:58:31.660404+02:00] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.date_rdv AS date_rdv_1, r0_.nom1 AS nom1_2, r0_.obs1 AS obs1_3, r0_.conf1 AS conf1_4, r0_.nom2 AS nom2_5, r0_.obs2 AS obs2_6, r0_.conf2 AS conf2_7, r0_.nom3 AS nom3_8, r0_.obs3 AS obs3_9, r0_.conf3 AS conf3_10, r0_.nom4 AS nom4_11, r0_.obs4 AS obs4_12, r0_.conf4 AS conf4_13, r0_.nom5 AS nom5_14, r0_.obs5 AS obs5_15, r0_.conf5 AS conf5_16, r0_.nom6 AS nom6_17, r0_.obs6 AS obs6_18, r0_.conf6 AS conf6_19, r0_.nom7 AS nom7_20, r0_.obs7 AS obs7_21, r0_.conf7 AS conf7_22, r0_.nom8 AS nom8_23, r0_.obs8 AS obs8_24, r0_.conf8 AS conf8_25, r0_.nom9 AS nom9_26, r0_.obs9 AS obs9_27, r0_.conf9 AS conf9_28, r0_.nom10 AS nom10_29, r0_.obs10 AS obs10_30, r0_.conf10 AS conf10_31, r0_.nom11 AS nom11_32, r0_.obs11 AS obs11_33, r0_.conf11 AS conf11_34, r0_.nom12 AS nom12_35, r0_.obs12 AS obs12_36, r0_.conf12 AS conf12_37, r0_.nom13 AS nom13_38, r0_.obs13 AS obs13_39, r0_.conf13 AS conf13_40, r0_.nom14 AS nom14_41, r0_.obs14 AS obs14_42, r0_.conf14 AS conf14_43, r0_.nom15 AS nom15_44, r0_.obs15 AS obs15_45, r0_.conf15 AS conf15_46, r0_.nom16 AS nom16_47, r0_.obs16 AS obs16_48, r0_.conf16 AS conf16_49 FROM rdv r0_ ORDER BY r0_.id ASC LIMIT 30 [] []
[2021-06-14T13:58:32.380285+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing 'SELECT r0_.id AS id_0, r0_.date_rdv AS date_rdv_1, r0_.nom1 AS nom1_2, r0_.obs1 AS obs1_3, r0_.conf1 AS conf1_4, r0_.nom2 AS nom2_5, r0_.obs2 AS obs2_6, r0_.conf2 AS conf2_7, r0_.nom3 AS nom3_8, r0_.obs3 AS obs3_9, r0_.conf3 AS conf3_10, r0_.nom4 AS nom4_11, r0_.obs4 AS obs4_12, r0_.conf4 AS conf4_13, r0_.nom5 AS nom5_14, r0_.obs5 AS obs5_15, r0_.conf5 AS conf5_16, r0_.nom6 AS nom6_17, r0_.obs6 AS obs6_18, r0_.conf6 AS conf6_19, r0_.nom7 AS nom7_20, r0_.obs7 AS obs7_21, r0_.conf7 AS conf7_22, r0_.nom8 AS nom8_23, r0_.obs8 AS obs8_24, r0_.conf8 AS conf8_25, r0_.nom9 AS nom9_26, r0_.obs9 AS obs9_27, r0_.conf9 AS conf9_28, r0_.nom10 AS nom10_29, r0_.obs10 AS obs10_30, r0_.conf10 AS conf10_31, r0_.nom11 AS nom11_32, r0_.obs11 AS obs11_33, r0_.conf11 AS conf11_34, r0_.nom12 AS nom12_35, r0_.obs12 AS obs12_36, r0_.conf12 AS conf12_37, r0_.nom13 AS nom13_38, r0_.obs13 AS obs13_39, r0_.conf13 AS conf13_40, r0_.nom14 AS nom14_41, r0_.obs14 AS obs14_42, r0_.conf14 AS conf14_43, r0_.nom15 AS nom15_44, r0_.obs15 AS obs15_45, r0_.conf15 AS conf15_46, r0_.nom16 AS nom16_47, r0_.obs16 AS obs16_48, r0_.conf16 AS conf16_49 FROM rdv r0_ ORDER BY r0_.id ASC LIMIT 30':  SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation Â« rdv Â» n'existe pas LINE 1: ..._.obs16 AS obs16_48, r0_.conf16 AS conf16_49 FROM rdv r0_ OR...                                                              ^" at E:\cabinet\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractPostgreSQLDriver.php line 82 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 0): An exception occurred while executing 'SELECT r0_.id AS id_0, r0_.date_rdv AS date_rdv_1, r0_.nom1 AS nom1_2, r0_.obs1 AS obs1_3, r0_.conf1 AS conf1_4, r0_.nom2 AS nom2_5, r0_.obs2 AS obs2_6, r0_.conf2 AS conf2_7, r0_.nom3 AS nom3_8, r0_.obs3 AS obs3_9, r0_.conf3 AS conf3_10, r0_.nom4 AS nom4_11, r0_.obs4 AS obs4_12, r0_.conf4 AS conf4_13, r0_.nom5 AS nom5_14, r0_.obs5 AS obs5_15, r0_.conf5 AS conf5_16, r0_.nom6 AS nom6_17, r0_.obs6 AS obs6_18, r0_.conf6 AS conf6_19, r0_.nom7 AS nom7_20, r0_.obs7 AS obs7_21, r0_.conf7 AS conf7_22, r0_.nom8 AS nom8_23, r0_.obs8 AS obs8_24, r0_.conf8 AS conf8_25, r0_.nom9 AS nom9_26, r0_.obs9 AS obs9_27, r0_.conf9 AS conf9_28, r0_.nom10 AS nom10_29, r0_.obs10 AS obs10_30, r0_.conf10 AS conf10_31, r0_.nom11 AS nom11_32, r0_.obs11 AS obs11_33, r0_.conf11 AS conf11_34, r0_.nom12 AS nom12_35, r0_.obs12 AS obs12_36, r0_.conf12 AS conf12_37, r0_.nom13 AS nom13_38, r0_.obs13 AS obs13_39, r0_.conf13 AS conf13_40, r0_.nom14 AS nom14_41, r0_.obs14 AS obs14_42, r0_.conf14 AS conf14_43, r0_.nom15 AS nom15_44, r0_.obs15 AS obs15_45, r0_.conf15 AS conf15_46, r0_.nom16 AS nom16_47, r0_.obs16 AS obs16_48, r0_.conf16 AS conf16_49 FROM rdv r0_ ORDER BY r0_.id ASC LIMIT 30':\n\nSQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation Â« rdv Â» n'existe pas\nLINE 1: ..._.obs16 AS obs16_48, r0_.conf16 AS conf16_49 FROM rdv r0_ OR...\n                                                             ^ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:82)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation Â« rdv Â» n'existe pas\nLINE 1: ..._.obs16 AS obs16_48, r0_.conf16 AS conf16_49 FROM rdv r0_ OR...\n                                                             ^ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation Â« rdv Â» n'existe pas\nLINE 1: ..._.obs16 AS obs16_48, r0_.conf16 AS conf16_49 FROM rdv r0_ OR...\n                                                             ^ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:132)"} []
[2021-06-14T13:58:32.594721+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:32.652933+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T13:58:32.655027+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T13:58:32.655511+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:32.705640+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:32.729048+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:32.736598+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:32.740799+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:32.742179+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:32.771194+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:32.794828+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:32.798206+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:32.801692+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:32.806218+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:32.807853+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:32.810604+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:32.811464+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:32.812322+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:32.812954+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:32.816334+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:32.821699+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:32.826983+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:32.828572+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:32.831325+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:32.832236+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:32.833745+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:32.880518+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:32.885678+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:32.891547+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:32.896322+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:32.898248+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:32.902792+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:32.903686+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:32.904536+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:32.905105+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:32.908209+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:32.911527+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:32.915957+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:32.917654+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:32.921554+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:32.922579+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:32.923507+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:32.924089+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:32.928710+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:32.932607+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:32.936902+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:32.938716+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:32.942636+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:32.943507+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:32.944396+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:50.868200+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T13:58:50.882392+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T13:58:51.265497+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T13:58:51.329159+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T13:58:51.590917+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:51.601836+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T13:58:51.602633+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T13:58:51.602956+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:51.609315+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:51.624939+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:51.629072+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:51.631547+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:51.632832+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:51.633922+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:51.639193+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:51.640945+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:51.642974+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:51.645360+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:51.646160+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:51.647600+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:51.648216+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:51.648945+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:51.649451+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:51.652040+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:51.653953+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:51.656275+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:51.657175+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:51.658743+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:51.659373+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:51.660113+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:55.903860+02:00] request.INFO: Matched route "api_compteurs_get_item". {"route":"api_compteurs_get_item","route_parameters":{"_route":"api_compteurs_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Compteur","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/compteurs/1","method":"GET"} []
[2021-06-14T13:58:55.916762+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T13:58:56.167785+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.annee AS annee_1, c0_.numconsultation AS numconsultation_2, c0_.numrdv AS numrdv_3 FROM compteur c0_ WHERE c0_.id = ? [1] []
[2021-06-14T13:58:56.486445+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:56.495992+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T13:58:56.496793+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T13:58:56.497113+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:56.503369+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:56.516912+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:56.521268+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:56.523608+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:56.524395+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:56.525479+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:56.530283+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:56.532648+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:56.534510+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:56.536644+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:56.537521+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:56.539085+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:56.539599+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:56.540098+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:56.540488+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:56.542128+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:56.543920+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:56.546035+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:56.547050+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:56.549075+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:56.549634+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:56.550179+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:56.955507+02:00] request.INFO: Matched route "api_patients_get_collection". {"route":"api_patients_get_collection","route_parameters":{"_route":"api_patients_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Patient","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/patients","method":"GET"} []
[2021-06-14T13:58:56.968856+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T13:58:57.269665+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.nom AS nom_1, p0_.prenom AS prenom_2, p0_.date_naissance AS date_naissance_3, p0_.adresse AS adresse_4, p0_.ville AS ville_5, p0_.tel AS tel_6, p0_.gsm AS gsm_7, p0_.genre AS genre_8, p0_.etat_civil AS etat_civil_9, p0_.nbr_enfant AS nbr_enfant_10, p0_.nom_conjoint AS nom_conjoint_11, p0_.lien_parente AS lien_parente_12, p0_.taille AS taille_13, p0_.poids AS poids_14, p0_.gr_sanguin AS gr_sanguin_15, p0_.profession AS profession_16, p0_.ident_unique AS ident_unique_17, p0_.prise_encharge AS prise_encharge_18, p0_.medecin AS medecin_19, p0_.datep_cons AS datep_cons_20, p0_.date_dcons AS date_dcons_21, p0_.motcles AS motcles_22, p0_.code_apci AS code_apci_23, p0_.regime_cnam AS regime_cnam_24, p0_.datevalidite AS datevalidite_25, p0_.code AS code_26, p0_.lieu AS lieu_27, p0_.email AS email_28, p0_.nationalite_id AS nationalite_id_29, p0_.domaine_id AS domaine_id_30, p0_.assureur_id AS assureur_id_31 FROM patient p0_ ORDER BY p0_.id ASC LIMIT 30 [] []
[2021-06-14T13:58:57.279989+02:00] doctrine.DEBUG: SELECT count(p0_.id) AS sclr_0 FROM patient p0_ [] []
[2021-06-14T13:58:57.377519+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:57.387454+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T13:58:57.388147+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T13:58:57.388474+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:57.395699+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:57.408179+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:57.413366+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:57.415757+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:57.416465+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:57.417498+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:57.422532+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:57.424498+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:57.426519+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:57.428684+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:57.429523+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:57.431633+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:57.432144+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:57.432626+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:57.432988+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:57.434654+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:57.436472+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:57.438667+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:57.439565+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:57.441034+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:57.441504+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:57.441990+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:57.774680+02:00] request.INFO: Matched route "register". {"route":"register","route_parameters":{"_route":"register","_controller":"App\\Controller\\OrdonanceController::index","id":"null"},"request_uri":"http://localhost:8000/get/ordonance/null","method":"GET"} []
[2021-06-14T13:58:57.785299+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T13:58:58.202188+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8 ["null"] []
[2021-06-14T13:58:58.264230+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\DriverException: "An exception occurred while executing 'SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8' with params ["null"]:  SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â»" at E:\cabinet\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractPostgreSQLDriver.php line 102 {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred while executing 'SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8' with params [\"null\"]:\n\nSQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:102)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 22P02): SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 22P02): SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:112)"} []
[2021-06-14T13:58:58.314152+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:58.326494+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T13:58:58.327368+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T13:58:58.327720+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:58.336246+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:58.350443+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:58.354561+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:58.356830+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:58.357607+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:58.358590+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:58.363293+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:58.366518+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:58.369206+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:58.371476+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:58.372318+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:58.373776+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:58.374332+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:58.374826+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:58.375243+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:58.376986+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:58.378915+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:58.381485+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:58.383078+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:58.384822+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:58.385553+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:58.386309+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:58.395152+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:58.397047+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:58.399879+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:58.402182+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:58.402968+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:58.404478+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:58.405032+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:58.405534+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:58.405896+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:58.407580+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:58.409483+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:58.411781+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:58.412663+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:58.414700+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:58.415277+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:58.415796+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T13:58:58.416198+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:58.417985+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T13:58:58.419972+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T13:58:58.422205+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T13:58:58.423058+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T13:58:58.424545+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T13:58:58.425105+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T13:58:58.425595+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:02:41.161927+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:02:41.175923+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:02:41.373890+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:02:41.382949+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:02:41.502868+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:02:41.518024+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:02:41.519138+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:02:41.519589+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:02:41.528505+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:02:41.543116+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:02:41.547764+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:02:41.550870+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:02:41.551649+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:02:41.552746+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:02:41.558860+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:02:41.560646+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:02:41.562428+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:02:41.564617+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:02:41.565423+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:02:41.566888+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:02:41.567366+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:02:41.567812+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:02:41.568135+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:02:41.570459+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:02:41.572545+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:02:41.574712+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:02:41.575518+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:02:41.576954+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:02:41.577426+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:02:41.577874+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:03:27.632534+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:03:27.648567+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:03:27.913689+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:03:27.926904+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:03:28.050090+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:03:28.065995+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:03:28.067020+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:03:28.067363+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:03:28.077791+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:03:28.099634+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:03:28.106106+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:03:28.109154+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:03:28.110204+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:03:28.111747+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:03:28.119843+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:03:28.122499+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:03:28.125217+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:03:28.128803+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:03:28.130079+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:03:28.132534+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:03:28.133184+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:03:28.133832+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:03:28.134271+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:03:28.138217+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:03:28.141623+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:03:28.145037+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:03:28.146217+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:03:28.148371+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:03:28.149016+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:03:28.149673+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:03:59.854905+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:03:59.868452+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:04:00.124340+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:04:00.136318+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:04:00.277949+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:00.293506+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:04:00.294431+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:04:00.294777+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:00.304183+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:00.323969+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:00.330212+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:00.333410+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:00.334488+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:00.336152+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:00.343249+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:00.345897+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:00.348819+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:00.352300+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:00.353429+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:00.355590+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:00.356312+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:00.357092+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:00.357605+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:00.360175+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:00.362866+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:00.366438+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:00.367646+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:00.369737+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:00.370340+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:00.370997+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:01.840003+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:04:01.852301+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:04:02.034651+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:04:02.043009+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:04:02.145581+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:02.154766+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:04:02.155467+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:04:02.155736+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:02.162502+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:02.174736+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:02.179990+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:02.182368+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:02.183273+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:02.184432+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:02.188702+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:02.190460+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:02.192915+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:02.195182+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:02.196012+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:02.197481+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:02.197960+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:02.198442+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:02.198773+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:02.200436+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:02.202601+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:02.204873+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:02.206093+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:02.207584+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:02.208066+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:02.208527+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:06.362689+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:04:06.373447+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:04:06.593763+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:04:06.603689+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:04:06.695272+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:06.709069+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:04:06.710184+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:04:06.710667+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:06.718117+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:06.734105+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:06.740535+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:06.743365+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:06.744083+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:06.745036+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:06.751091+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:06.754331+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:06.756260+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:06.758471+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:06.759292+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:06.760781+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:06.761267+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:06.761707+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:06.762043+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:06.763724+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:06.765749+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:06.768103+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:06.768913+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:06.770443+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:06.771166+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:06.771860+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:11.664107+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:04:11.682656+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:04:11.911610+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:04:11.921205+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:04:12.023587+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:12.032748+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:04:12.033843+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:04:12.034312+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:12.040135+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:12.053897+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:12.059504+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:12.062836+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:12.064158+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:12.065734+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:12.073338+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:12.076557+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:12.079670+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:12.082435+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:12.083726+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:12.085249+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:12.085776+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:12.086243+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:12.086574+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:12.088219+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:12.090140+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:12.092428+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:12.093249+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:12.094670+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:12.095148+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:12.095621+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:14.160770+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:04:14.175923+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:04:14.349677+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:04:14.356977+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:04:14.437345+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:14.446011+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:04:14.446705+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:04:14.446977+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:14.452779+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:14.464188+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:14.468328+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:14.470426+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:14.471136+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:14.472083+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:14.476443+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:14.478170+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:14.479936+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:14.483250+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:14.484521+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:14.486928+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:14.487581+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:14.488229+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:14.488672+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:14.491570+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:14.494169+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:14.496348+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:14.497448+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:14.498913+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:14.499429+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:14.499907+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:17.826839+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:04:17.842890+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:04:18.013248+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:04:18.021580+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:04:18.115436+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:18.124269+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:04:18.124957+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:04:18.125371+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:18.131080+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:18.143041+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:18.146791+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:18.149762+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:18.150780+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:18.152082+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:18.159206+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:18.161602+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:18.163860+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:18.166203+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:18.167026+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:18.168482+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:18.168967+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:18.169419+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:18.169734+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:18.171364+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:18.173108+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:18.175246+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:18.176065+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:18.177579+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:18.178049+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:18.178618+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:20.786773+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:04:20.797320+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:04:20.957746+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:04:20.965112+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:04:21.062252+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:21.070953+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:04:21.071724+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:04:21.071999+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:21.079701+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:21.093239+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:21.096922+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:21.099580+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:21.100497+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:21.101466+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:21.107387+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:21.109159+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:21.111038+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:21.113320+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:21.114452+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:21.116339+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:21.116949+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:21.117416+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:21.117758+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:21.119419+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:21.121180+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:21.123715+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:21.124565+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:21.125955+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:21.126390+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:21.126829+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:23.027363+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:04:23.042863+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:04:23.242341+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:04:23.254118+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:04:23.374474+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:23.383543+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:04:23.384243+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:04:23.384510+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:23.390275+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:23.401715+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:23.406241+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:23.408906+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:23.409585+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:23.410532+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:23.415077+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:23.416986+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:23.418776+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:23.420958+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:23.421771+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:23.423156+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:23.423589+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:23.424032+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:23.424362+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:23.425977+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:23.427737+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:23.430055+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:23.430863+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:23.432401+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:23.432851+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:23.433299+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:51.638811+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:04:51.663352+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:04:51.985137+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:04:52.000716+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:04:52.164287+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:52.177807+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:04:52.178768+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:04:52.179111+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:52.188895+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:52.206989+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:52.212053+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:52.215127+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:52.216115+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:52.217536+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:52.224450+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:52.227463+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:52.230618+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:52.234058+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:52.235140+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:52.237415+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:52.238097+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:52.238820+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:52.239325+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:52.242276+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:52.245054+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:52.248819+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:52.249984+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:52.252153+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:52.252762+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:52.253346+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:53.333793+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:04:53.351222+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:04:53.770054+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:04:53.779763+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:04:53.921536+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:53.935224+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:04:53.936185+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:04:53.936535+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:53.945917+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:53.965024+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:53.970778+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:53.973851+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:53.974977+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:53.976404+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:53.983772+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:53.986641+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:53.989824+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:53.992974+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:53.994184+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:53.996329+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:53.996977+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:53.997893+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:04:53.998378+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:54.000911+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:04:54.004070+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:04:54.007762+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:04:54.008956+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:04:54.011436+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:04:54.012075+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:04:54.012746+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:06:11.293000+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:06:11.304888+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:06:11.479931+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:06:11.486978+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:06:11.585731+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:06:11.595264+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:06:11.595929+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:06:11.596174+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:06:11.601762+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:06:11.614371+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:06:11.618282+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:06:11.620428+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:06:11.621133+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:06:11.622205+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:06:11.627548+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:06:11.629224+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:06:11.630883+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:06:11.633050+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:06:11.633790+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:06:11.635127+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:06:11.635533+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:06:11.635924+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:06:11.636198+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:06:11.637712+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:06:11.639354+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:06:11.641409+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:06:11.642520+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:06:11.643978+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:06:11.644403+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:06:11.644795+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:06:39.232070+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:06:39.245359+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:06:39.440783+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:06:39.451931+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:06:39.539384+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:06:39.549345+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:06:39.550009+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:06:39.550254+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:06:39.556025+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:06:39.568932+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:06:39.572383+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:06:39.574540+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:06:39.575215+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:06:39.576350+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:06:39.581851+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:06:39.583656+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:06:39.585426+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:06:39.587937+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:06:39.589117+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:06:39.591243+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:06:39.591837+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:06:39.592628+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:06:39.593194+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:06:39.595755+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:06:39.598791+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:06:39.602277+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:06:39.603453+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:06:39.605871+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:06:39.606408+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:06:39.606916+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:02.937562+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:07:02.960591+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:07:03.274291+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:07:03.286106+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:07:03.432384+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:03.447691+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:07:03.448541+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:07:03.448783+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:03.455239+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:03.470350+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:03.474489+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:03.477297+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:03.478311+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:03.479496+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:03.485026+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:03.487036+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:03.489512+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:03.492348+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:03.493534+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:03.495294+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:03.495852+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:03.496387+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:03.496732+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:03.499230+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:03.500956+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:03.503061+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:03.503825+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:03.505733+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:03.506145+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:03.506539+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:24.020291+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:07:24.030411+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:07:24.189048+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:07:24.197415+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:07:24.270466+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:24.280197+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:07:24.280933+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:07:24.281242+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:24.286878+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:24.299842+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:24.304337+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:24.306591+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:24.307452+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:24.308572+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:24.313085+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:24.314975+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:24.316778+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:24.318981+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:24.319871+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:24.321248+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:24.321775+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:24.322414+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:24.322870+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:24.324609+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:24.326376+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:24.328488+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:24.329362+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:24.330948+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:24.331523+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:24.332076+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:29.234818+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:07:29.244272+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:07:29.390785+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:07:29.397875+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:07:29.465838+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:29.475236+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:07:29.475964+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:07:29.476317+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:29.481716+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:29.493829+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:29.497949+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:29.500137+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:29.500844+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:29.501802+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:29.506377+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:29.508097+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:29.509803+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:29.511918+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:29.512801+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:29.514178+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:29.514702+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:29.515246+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:29.515671+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:29.517280+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:29.518966+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:29.521255+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:29.522163+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:29.523544+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:29.524068+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:29.524614+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:32.180216+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:07:32.190238+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:07:32.347037+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:07:32.354398+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:07:32.447376+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:32.455435+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:07:32.456082+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:07:32.456411+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:32.463548+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:32.476033+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:32.480072+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:32.482384+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:32.483191+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:32.484182+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:32.488432+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:32.490412+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:32.492279+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:32.494473+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:32.495322+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:32.496824+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:32.497362+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:32.497843+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:32.498214+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:32.499858+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:32.501640+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:32.503831+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:32.504773+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:32.506436+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:32.507007+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:32.507514+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:45.731798+02:00] request.INFO: Matched route "api_rdvs_get_collection". {"route":"api_rdvs_get_collection","route_parameters":{"_route":"api_rdvs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Rdv","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/rdvs","method":"GET"} []
[2021-06-14T14:07:45.745907+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:07:46.075352+02:00] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.date_rdv AS date_rdv_1, r0_.nom1 AS nom1_2, r0_.obs1 AS obs1_3, r0_.conf1 AS conf1_4, r0_.nom2 AS nom2_5, r0_.obs2 AS obs2_6, r0_.conf2 AS conf2_7, r0_.nom3 AS nom3_8, r0_.obs3 AS obs3_9, r0_.conf3 AS conf3_10, r0_.nom4 AS nom4_11, r0_.obs4 AS obs4_12, r0_.conf4 AS conf4_13, r0_.nom5 AS nom5_14, r0_.obs5 AS obs5_15, r0_.conf5 AS conf5_16, r0_.nom6 AS nom6_17, r0_.obs6 AS obs6_18, r0_.conf6 AS conf6_19, r0_.nom7 AS nom7_20, r0_.obs7 AS obs7_21, r0_.conf7 AS conf7_22, r0_.nom8 AS nom8_23, r0_.obs8 AS obs8_24, r0_.conf8 AS conf8_25, r0_.nom9 AS nom9_26, r0_.obs9 AS obs9_27, r0_.conf9 AS conf9_28, r0_.nom10 AS nom10_29, r0_.obs10 AS obs10_30, r0_.conf10 AS conf10_31, r0_.nom11 AS nom11_32, r0_.obs11 AS obs11_33, r0_.conf11 AS conf11_34, r0_.nom12 AS nom12_35, r0_.obs12 AS obs12_36, r0_.conf12 AS conf12_37, r0_.nom13 AS nom13_38, r0_.obs13 AS obs13_39, r0_.conf13 AS conf13_40, r0_.nom14 AS nom14_41, r0_.obs14 AS obs14_42, r0_.conf14 AS conf14_43, r0_.nom15 AS nom15_44, r0_.obs15 AS obs15_45, r0_.conf15 AS conf15_46, r0_.nom16 AS nom16_47, r0_.obs16 AS obs16_48, r0_.conf16 AS conf16_49 FROM rdv r0_ ORDER BY r0_.id ASC LIMIT 30 [] []
[2021-06-14T14:07:46.153923+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing 'SELECT r0_.id AS id_0, r0_.date_rdv AS date_rdv_1, r0_.nom1 AS nom1_2, r0_.obs1 AS obs1_3, r0_.conf1 AS conf1_4, r0_.nom2 AS nom2_5, r0_.obs2 AS obs2_6, r0_.conf2 AS conf2_7, r0_.nom3 AS nom3_8, r0_.obs3 AS obs3_9, r0_.conf3 AS conf3_10, r0_.nom4 AS nom4_11, r0_.obs4 AS obs4_12, r0_.conf4 AS conf4_13, r0_.nom5 AS nom5_14, r0_.obs5 AS obs5_15, r0_.conf5 AS conf5_16, r0_.nom6 AS nom6_17, r0_.obs6 AS obs6_18, r0_.conf6 AS conf6_19, r0_.nom7 AS nom7_20, r0_.obs7 AS obs7_21, r0_.conf7 AS conf7_22, r0_.nom8 AS nom8_23, r0_.obs8 AS obs8_24, r0_.conf8 AS conf8_25, r0_.nom9 AS nom9_26, r0_.obs9 AS obs9_27, r0_.conf9 AS conf9_28, r0_.nom10 AS nom10_29, r0_.obs10 AS obs10_30, r0_.conf10 AS conf10_31, r0_.nom11 AS nom11_32, r0_.obs11 AS obs11_33, r0_.conf11 AS conf11_34, r0_.nom12 AS nom12_35, r0_.obs12 AS obs12_36, r0_.conf12 AS conf12_37, r0_.nom13 AS nom13_38, r0_.obs13 AS obs13_39, r0_.conf13 AS conf13_40, r0_.nom14 AS nom14_41, r0_.obs14 AS obs14_42, r0_.conf14 AS conf14_43, r0_.nom15 AS nom15_44, r0_.obs15 AS obs15_45, r0_.conf15 AS conf15_46, r0_.nom16 AS nom16_47, r0_.obs16 AS obs16_48, r0_.conf16 AS conf16_49 FROM rdv r0_ ORDER BY r0_.id ASC LIMIT 30':  SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation Â« rdv Â» n'existe pas LINE 1: ..._.obs16 AS obs16_48, r0_.conf16 AS conf16_49 FROM rdv r0_ OR...                                                              ^" at E:\cabinet\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractPostgreSQLDriver.php line 82 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 0): An exception occurred while executing 'SELECT r0_.id AS id_0, r0_.date_rdv AS date_rdv_1, r0_.nom1 AS nom1_2, r0_.obs1 AS obs1_3, r0_.conf1 AS conf1_4, r0_.nom2 AS nom2_5, r0_.obs2 AS obs2_6, r0_.conf2 AS conf2_7, r0_.nom3 AS nom3_8, r0_.obs3 AS obs3_9, r0_.conf3 AS conf3_10, r0_.nom4 AS nom4_11, r0_.obs4 AS obs4_12, r0_.conf4 AS conf4_13, r0_.nom5 AS nom5_14, r0_.obs5 AS obs5_15, r0_.conf5 AS conf5_16, r0_.nom6 AS nom6_17, r0_.obs6 AS obs6_18, r0_.conf6 AS conf6_19, r0_.nom7 AS nom7_20, r0_.obs7 AS obs7_21, r0_.conf7 AS conf7_22, r0_.nom8 AS nom8_23, r0_.obs8 AS obs8_24, r0_.conf8 AS conf8_25, r0_.nom9 AS nom9_26, r0_.obs9 AS obs9_27, r0_.conf9 AS conf9_28, r0_.nom10 AS nom10_29, r0_.obs10 AS obs10_30, r0_.conf10 AS conf10_31, r0_.nom11 AS nom11_32, r0_.obs11 AS obs11_33, r0_.conf11 AS conf11_34, r0_.nom12 AS nom12_35, r0_.obs12 AS obs12_36, r0_.conf12 AS conf12_37, r0_.nom13 AS nom13_38, r0_.obs13 AS obs13_39, r0_.conf13 AS conf13_40, r0_.nom14 AS nom14_41, r0_.obs14 AS obs14_42, r0_.conf14 AS conf14_43, r0_.nom15 AS nom15_44, r0_.obs15 AS obs15_45, r0_.conf15 AS conf15_46, r0_.nom16 AS nom16_47, r0_.obs16 AS obs16_48, r0_.conf16 AS conf16_49 FROM rdv r0_ ORDER BY r0_.id ASC LIMIT 30':\n\nSQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation Â« rdv Â» n'existe pas\nLINE 1: ..._.obs16 AS obs16_48, r0_.conf16 AS conf16_49 FROM rdv r0_ OR...\n                                                             ^ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:82)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation Â« rdv Â» n'existe pas\nLINE 1: ..._.obs16 AS obs16_48, r0_.conf16 AS conf16_49 FROM rdv r0_ OR...\n                                                             ^ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation Â« rdv Â» n'existe pas\nLINE 1: ..._.obs16 AS obs16_48, r0_.conf16 AS conf16_49 FROM rdv r0_ OR...\n                                                             ^ at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:132)"} []
[2021-06-14T14:07:46.191488+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:46.205726+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:07:46.206748+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:07:46.207033+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:46.214159+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:46.228469+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:46.232883+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:46.235514+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:46.236214+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:46.237417+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:46.243107+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:46.246529+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:46.249501+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:46.251788+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:46.252719+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:46.254271+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:46.254858+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:46.255355+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:46.255943+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:46.258085+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:46.261542+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:46.263966+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:46.264798+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:46.266135+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:46.266583+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:46.267148+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:46.269689+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:46.271758+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:46.273768+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:46.277229+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:46.278437+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:46.279900+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:46.280406+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:46.280976+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:46.281383+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:46.283683+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:46.285632+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:46.287903+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:46.288713+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:46.290212+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:46.290690+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:46.291131+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:46.291441+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:46.292997+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:46.294713+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:46.296795+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:46.297552+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:46.298894+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:46.299294+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:46.299701+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:52.029725+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:07:52.041134+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:07:52.186153+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:07:52.193439+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:07:52.261385+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:52.270655+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:07:52.271402+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:07:52.271726+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:52.277070+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:52.289064+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:52.293057+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:52.295232+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:52.296019+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:52.296988+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:52.301251+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:52.303000+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:52.304785+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:52.306970+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:52.307821+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:52.309209+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:52.309704+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:52.310179+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:52.310541+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:52.312168+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:52.314131+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:52.316269+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:52.317206+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:52.318575+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:52.319505+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:52.320184+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:57.731746+02:00] request.INFO: Matched route "api_compteurs_get_item". {"route":"api_compteurs_get_item","route_parameters":{"_route":"api_compteurs_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Compteur","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/compteurs/1","method":"GET"} []
[2021-06-14T14:07:57.742995+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:07:57.881771+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.annee AS annee_1, c0_.numconsultation AS numconsultation_2, c0_.numrdv AS numrdv_3 FROM compteur c0_ WHERE c0_.id = ? [1] []
[2021-06-14T14:07:57.982212+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:57.991956+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:07:57.992759+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:07:57.993097+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:57.998721+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:58.012172+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:58.016578+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:58.018912+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:58.019735+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:58.020749+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:58.025765+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:58.027540+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:58.029295+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:58.031515+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:58.032413+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:58.034956+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:58.035616+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:58.036112+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:58.036435+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:58.038131+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:58.040310+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:58.043384+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:58.044180+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:58.046056+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:58.046601+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:58.047005+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:58.311638+02:00] request.INFO: Matched route "api_patients_get_collection". {"route":"api_patients_get_collection","route_parameters":{"_route":"api_patients_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Patient","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/patients","method":"GET"} []
[2021-06-14T14:07:58.321431+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:07:58.471156+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.nom AS nom_1, p0_.prenom AS prenom_2, p0_.date_naissance AS date_naissance_3, p0_.adresse AS adresse_4, p0_.ville AS ville_5, p0_.tel AS tel_6, p0_.gsm AS gsm_7, p0_.genre AS genre_8, p0_.etat_civil AS etat_civil_9, p0_.nbr_enfant AS nbr_enfant_10, p0_.nom_conjoint AS nom_conjoint_11, p0_.lien_parente AS lien_parente_12, p0_.taille AS taille_13, p0_.poids AS poids_14, p0_.gr_sanguin AS gr_sanguin_15, p0_.profession AS profession_16, p0_.ident_unique AS ident_unique_17, p0_.prise_encharge AS prise_encharge_18, p0_.medecin AS medecin_19, p0_.datep_cons AS datep_cons_20, p0_.date_dcons AS date_dcons_21, p0_.motcles AS motcles_22, p0_.code_apci AS code_apci_23, p0_.regime_cnam AS regime_cnam_24, p0_.datevalidite AS datevalidite_25, p0_.code AS code_26, p0_.lieu AS lieu_27, p0_.email AS email_28, p0_.nationalite_id AS nationalite_id_29, p0_.domaine_id AS domaine_id_30, p0_.assureur_id AS assureur_id_31 FROM patient p0_ ORDER BY p0_.id ASC LIMIT 30 [] []
[2021-06-14T14:07:58.480424+02:00] doctrine.DEBUG: SELECT count(p0_.id) AS sclr_0 FROM patient p0_ [] []
[2021-06-14T14:07:58.555542+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:58.564932+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:07:58.565662+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:07:58.566003+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:58.571674+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:58.584015+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:58.588720+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:58.591000+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:58.591794+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:58.592818+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:58.597187+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:58.598966+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:58.600747+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:58.602877+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:58.603748+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:58.605280+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:58.605854+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:58.606386+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:58.606818+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:58.608562+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:58.610319+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:58.612452+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:58.613328+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:58.614812+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:58.615333+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:58.615802+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:58.845426+02:00] request.INFO: Matched route "register". {"route":"register","route_parameters":{"_route":"register","_controller":"App\\Controller\\OrdonanceController::index","id":"null"},"request_uri":"http://localhost:8000/get/ordonance/null","method":"GET"} []
[2021-06-14T14:07:58.853702+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:07:58.973762+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8 ["null"] []
[2021-06-14T14:07:59.035831+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\DriverException: "An exception occurred while executing 'SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8' with params ["null"]:  SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â»" at E:\cabinet\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractPostgreSQLDriver.php line 102 {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred while executing 'SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8' with params [\"null\"]:\n\nSQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:102)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 22P02): SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 22P02): SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:112)"} []
[2021-06-14T14:07:59.072470+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:59.083480+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:07:59.084264+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:07:59.084581+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:59.090178+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:59.102274+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:59.106685+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:59.108983+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:59.109742+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:59.110704+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:59.115597+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:59.117370+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:59.119133+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:59.121319+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:59.122300+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:59.123814+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:59.124372+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:59.124921+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:59.125345+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:59.126970+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:59.129117+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:59.131430+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:59.132284+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:59.133753+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:59.134286+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:59.134762+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:59.143162+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:59.145004+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:59.146857+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:59.148988+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:59.149864+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:59.151373+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:59.151945+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:59.152496+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:59.152925+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:59.154619+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:59.156487+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:59.158609+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:59.159443+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:59.160888+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:59.161442+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:59.161970+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:07:59.162400+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:59.164044+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:07:59.165767+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:07:59.167874+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:07:59.168765+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:07:59.170311+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:07:59.170859+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:07:59.171369+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:23:56.171172+02:00] request.INFO: Matched route "api_consultations_get_collection". {"route":"api_consultations_get_collection","route_parameters":{"_route":"api_consultations_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Consultation","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/consultations","method":"GET"} []
[2021-06-14T14:23:56.185862+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:23:56.615535+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.numero AS numero_1, c0_.annee AS annee_2, c0_.date_consultation AS date_consultation_3, c0_.observation AS observation_4, c0_.montant AS montant_5, c0_.patient_id AS patient_id_6 FROM consultation c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2021-06-14T14:23:56.624649+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM consultation c0_ [] []
[2021-06-14T14:23:56.740021+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:23:56.750658+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:23:56.751392+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:23:56.751654+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:23:56.757588+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:23:56.773438+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:23:56.778505+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:23:56.780873+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:23:56.781676+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:23:56.782867+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:23:56.788032+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:23:56.789752+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:23:56.791684+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:23:56.793829+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:23:56.794677+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:23:56.796175+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:23:56.796730+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:23:56.797278+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:23:56.797707+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:23:56.799331+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:23:56.801067+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:23:56.803198+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:23:56.804075+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:23:56.805565+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:23:56.806117+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:23:56.806669+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:01.148063+02:00] request.INFO: Matched route "api_patients_get_collection". {"route":"api_patients_get_collection","route_parameters":{"_route":"api_patients_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Patient","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/patients","method":"GET"} []
[2021-06-14T14:24:01.161193+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:24:01.370546+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.nom AS nom_1, p0_.prenom AS prenom_2, p0_.date_naissance AS date_naissance_3, p0_.adresse AS adresse_4, p0_.ville AS ville_5, p0_.tel AS tel_6, p0_.gsm AS gsm_7, p0_.genre AS genre_8, p0_.etat_civil AS etat_civil_9, p0_.nbr_enfant AS nbr_enfant_10, p0_.nom_conjoint AS nom_conjoint_11, p0_.lien_parente AS lien_parente_12, p0_.taille AS taille_13, p0_.poids AS poids_14, p0_.gr_sanguin AS gr_sanguin_15, p0_.profession AS profession_16, p0_.ident_unique AS ident_unique_17, p0_.prise_encharge AS prise_encharge_18, p0_.medecin AS medecin_19, p0_.datep_cons AS datep_cons_20, p0_.date_dcons AS date_dcons_21, p0_.motcles AS motcles_22, p0_.code_apci AS code_apci_23, p0_.regime_cnam AS regime_cnam_24, p0_.datevalidite AS datevalidite_25, p0_.code AS code_26, p0_.lieu AS lieu_27, p0_.email AS email_28, p0_.nationalite_id AS nationalite_id_29, p0_.domaine_id AS domaine_id_30, p0_.assureur_id AS assureur_id_31 FROM patient p0_ ORDER BY p0_.id ASC LIMIT 30 [] []
[2021-06-14T14:24:01.454720+02:00] doctrine.DEBUG: SELECT count(p0_.id) AS sclr_0 FROM patient p0_ [] []
[2021-06-14T14:24:01.687503+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:01.698212+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:24:01.699163+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:24:01.699471+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:01.709292+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:01.720713+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:01.724641+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:01.727998+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:01.728672+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:01.729632+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:01.733984+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:01.735730+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:01.737428+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:01.739601+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:01.740389+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:01.742070+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:01.743033+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:01.743631+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:01.744089+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:01.745953+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:01.747732+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:01.749885+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:01.750754+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:01.752316+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:01.752871+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:01.753417+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:02.264605+02:00] request.INFO: Matched route "api_compteurs_get_item". {"route":"api_compteurs_get_item","route_parameters":{"_route":"api_compteurs_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Compteur","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/compteurs/1","method":"GET"} []
[2021-06-14T14:24:02.273198+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:24:02.393727+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.annee AS annee_1, c0_.numconsultation AS numconsultation_2, c0_.numrdv AS numrdv_3 FROM compteur c0_ WHERE c0_.id = ? [1] []
[2021-06-14T14:24:02.494258+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:02.515926+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:24:02.523009+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:24:02.526806+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:02.576048+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:02.652596+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:02.687471+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:02.704643+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:02.710111+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:02.716803+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:02.744749+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:02.751104+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:02.755698+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:02.762023+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:02.763859+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:02.766446+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:02.767205+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:02.767909+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:02.768484+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:02.771720+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:02.774659+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:02.779163+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:02.780482+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:02.781952+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:02.782380+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:02.782806+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:03.370765+02:00] request.INFO: Matched route "register". {"route":"register","route_parameters":{"_route":"register","_controller":"App\\Controller\\OrdonanceController::index","id":"null"},"request_uri":"http://localhost:8000/get/ordonance/null","method":"GET"} []
[2021-06-14T14:24:03.446339+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:24:03.711903+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8 ["null"] []
[2021-06-14T14:24:03.772084+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\DriverException: "An exception occurred while executing 'SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8' with params ["null"]:  SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â»" at E:\cabinet\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractPostgreSQLDriver.php line 102 {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred while executing 'SELECT t0.id AS id_1, t0.code AS code_2, t0.nbr AS nbr_3, t0.duree AS duree_4, t0.utilisation AS utilisation_5, t0.consultation_id AS consultation_id_6, t0.medicament_id AS medicament_id_7 FROM ordonance t0 WHERE t0.consultation_id = ? LIMIT 8' with params [\"null\"]:\n\nSQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver.php:102)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 22P02): SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 22P02): SQLSTATE[22P02]: Invalid text representation: 7 ERREUR:  syntaxe en entrÃ©e invalide pour le type integer : Â« null Â» at E:\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:112)"} []
[2021-06-14T14:24:03.813862+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:03.826037+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:24:03.826808+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:24:03.827153+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:03.833092+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:03.846299+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:03.850864+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:03.853251+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:03.854079+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:03.855067+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:03.859566+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:03.861451+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:03.863261+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:03.865512+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:03.866333+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:03.867726+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:03.868181+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:03.868758+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:03.869197+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:03.870880+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:03.872666+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:03.874989+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:03.875916+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:03.877310+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:03.877864+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:03.878421+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:03.886903+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:03.888749+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:03.890469+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:03.892971+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:03.893883+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:03.895307+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:03.895855+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:03.896405+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:03.896838+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:03.898514+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:03.900522+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:03.902661+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:03.903583+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:03.904994+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:03.905545+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:03.906086+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:03.906512+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:03.908232+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:03.909978+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:03.912115+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:03.913038+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:03.914462+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:03.915017+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:03.915584+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:07.529914+02:00] request.INFO: Matched route "api_medicaments_get_collection". {"route":"api_medicaments_get_collection","route_parameters":{"_route":"api_medicaments_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Medicament","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/medicaments","method":"GET"} []
[2021-06-14T14:24:07.547714+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:24:08.307853+02:00] doctrine.DEBUG: SELECT m0_.id AS id_0, m0_.code AS code_1, m0_.libelle AS libelle_2, m0_.duree AS duree_3, m0_.utilisation AS utilisation_4, m0_.ctr_indication AS ctr_indication_5 FROM medicament m0_ ORDER BY m0_.id ASC LIMIT 30 [] []
[2021-06-14T14:24:08.315445+02:00] doctrine.DEBUG: SELECT count(m0_.id) AS sclr_0 FROM medicament m0_ [] []
[2021-06-14T14:24:08.398025+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:08.407650+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:24:08.408481+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:24:08.408815+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:08.414978+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:08.428428+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:08.432642+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:08.434842+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:08.435565+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:08.436590+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:08.442048+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:08.443809+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:08.445605+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:08.448076+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:08.449119+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:08.450568+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:08.451039+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:08.451514+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:08.451887+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:08.453502+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:08.455305+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:08.457640+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:08.458777+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:08.460257+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:08.460727+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:08.461216+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:12.202405+02:00] request.INFO: Matched route "api_medicaments_get_collection". {"route":"api_medicaments_get_collection","route_parameters":{"_route":"api_medicaments_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Medicament","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/medicaments","method":"GET"} []
[2021-06-14T14:24:12.218406+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2021-06-14T14:24:12.394731+02:00] doctrine.DEBUG: SELECT m0_.id AS id_0, m0_.code AS code_1, m0_.libelle AS libelle_2, m0_.duree AS duree_3, m0_.utilisation AS utilisation_4, m0_.ctr_indication AS ctr_indication_5 FROM medicament m0_ ORDER BY m0_.id ASC LIMIT 30 [] []
[2021-06-14T14:24:12.401279+02:00] doctrine.DEBUG: SELECT count(m0_.id) AS sclr_0 FROM medicament m0_ [] []
[2021-06-14T14:24:12.473962+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:12.483239+02:00] doctrine.DEBUG: SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' AND nspname != 'information_schema' [] []
[2021-06-14T14:24:12.483985+02:00] doctrine.DEBUG: SHOW search_path [] []
[2021-06-14T14:24:12.484372+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:12.490148+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:12.503190+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:12.507693+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:12.509978+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:12.510752+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:12.511757+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:12.516241+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:12.517992+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:12.519702+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:12.521765+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:12.522660+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:12.524054+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:12.524583+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:12.525085+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-06-14T14:24:12.525516+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:12.527181+02:00] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2021-06-14T14:24:12.528921+02:00] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2021-06-14T14:24:12.531042+02:00] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2021-06-14T14:24:12.531930+02:00] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2021-06-14T14:24:12.533319+02:00] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute WHERE attrelid=20646 AND attnum IN (1) ORDER BY attnum ASC [] []
[2021-06-14T14:24:12.533877+02:00] doctrine.DEBUG: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; [] []
[2021-06-14T14:24:12.534394+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2023-03-10T14:18:00.331951+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2023-03-10T14:18:00.332385+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2023-03-10T14:18:00.332460+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2023-03-10T14:18:00.332515+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2023-03-10T14:18:00.332639+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:18:00.332700+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:18:00.332849+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:18:00.332916+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:18:00.332978+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:18:00.333039+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:18:00.333101+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:18:00.333157+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:18:00.333204+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\MethodReflection::getDeclaringClass() should either be compatible with ReflectionMethod::getDeclaringClass(): ReflectionClass, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\MethodReflection::getDeclaringClass() should either be compatible with ReflectionMethod::getDeclaringClass(): ReflectionClass, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\MethodReflection.php:72)"} []
[2023-03-10T14:18:00.333314+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\MethodReflection::getPrototype($format = self::PROTOTYPE_AS_ARRAY) should either be compatible with ReflectionMethod::getPrototype(): ReflectionMethod, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\MethodReflection::getPrototype($format = self::PROTOTYPE_AS_ARRAY) should either be compatible with ReflectionMethod::getPrototype(): ReflectionMethod, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\MethodReflection.php:87)"} []
[2023-03-10T14:18:00.337543+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\MethodReflection::getParameters() should either be compatible with ReflectionFunctionAbstract::getParameters(): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\MethodReflection::getParameters() should either be compatible with ReflectionFunctionAbstract::getParameters(): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\MethodReflection.php:143)"} []
[2023-03-10T14:18:00.337658+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\MethodReflection::getStartLine($includeDocComment = false) should either be compatible with ReflectionFunctionAbstract::getStartLine(): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\MethodReflection::getStartLine($includeDocComment = false) should either be compatible with ReflectionFunctionAbstract::getStartLine(): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\MethodReflection.php:56)"} []
[2023-03-10T14:18:00.337721+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getStartLine($includeDocComment = false) should either be compatible with ReflectionClass::getStartLine(): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getStartLine($includeDocComment = false) should either be compatible with ReflectionClass::getStartLine(): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:47)"} []
[2023-03-10T14:18:00.337778+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getMethod($name) should either be compatible with ReflectionClass::getMethod(string $name): ReflectionMethod, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getMethod($name) should either be compatible with ReflectionClass::getMethod(string $name): ReflectionMethod, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:106)"} []
[2023-03-10T14:18:00.337899+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getMethods($filter = -1) should either be compatible with ReflectionClass::getMethods(?int $filter = null): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getMethods($filter = -1) should either be compatible with ReflectionClass::getMethods(?int $filter = null): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:117)"} []
[2023-03-10T14:18:00.337956+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getProperty($name) should either be compatible with ReflectionClass::getProperty(string $name): ReflectionProperty, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getProperty($name) should either be compatible with ReflectionClass::getProperty(string $name): ReflectionProperty, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:172)"} []
[2023-03-10T14:18:00.338004+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getProperties($filter = -1) should either be compatible with ReflectionClass::getProperties(?int $filter = null): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getProperties($filter = -1) should either be compatible with ReflectionClass::getProperties(?int $filter = null): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:187)"} []
[2023-03-10T14:18:00.338052+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getInterfaces() should either be compatible with ReflectionClass::getInterfaces(): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getInterfaces() should either be compatible with ReflectionClass::getInterfaces(): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:86)"} []
[2023-03-10T14:18:00.338100+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getTraits() should either be compatible with ReflectionClass::getTraits(): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getTraits() should either be compatible with ReflectionClass::getTraits(): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:133)"} []
[2023-03-10T14:18:00.338169+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getParentClass() should either be compatible with ReflectionClass::getParentClass(): ReflectionClass|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getParentClass() should either be compatible with ReflectionClass::getParentClass(): ReflectionClass|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:153)"} []
[2023-03-10T14:18:00.338265+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ParameterReflection::getDeclaringFunction() should either be compatible with ReflectionParameter::getDeclaringFunction(): ReflectionFunctionAbstract, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ParameterReflection::getDeclaringFunction() should either be compatible with ReflectionParameter::getDeclaringFunction(): ReflectionFunctionAbstract, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ParameterReflection.php:53)"} []
[2023-03-10T14:18:00.338322+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ParameterReflection::getDeclaringClass() should either be compatible with ReflectionParameter::getDeclaringClass(): ?ReflectionClass, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ParameterReflection::getDeclaringClass() should either be compatible with ReflectionParameter::getDeclaringClass(): ?ReflectionClass, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ParameterReflection.php:21)"} []
[2023-03-10T14:18:00.338370+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ParameterReflection::getClass() should either be compatible with ReflectionParameter::getClass(): ?ReflectionClass, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ParameterReflection::getClass() should either be compatible with ReflectionParameter::getClass(): ?ReflectionClass, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ParameterReflection.php:35)"} []
[2023-03-10T14:18:00.338416+01:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2023-03-10T14:18:00.498632+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:50)"} []
[2023-03-10T14:18:00.499677+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:99)"} []
[2023-03-10T14:18:00.499817+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:76)"} []
[2023-03-10T14:18:00.499918+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::quote($value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::quote($value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:91)"} []
[2023-03-10T14:18:00.500015+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOQueryImplementation.php:20)"} []
[2023-03-10T14:18:00.714651+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindParam($param, &$variable, $type = Doctrine\DBAL\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindParam($param, &$variable, $type = Doctrine\\DBAL\\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:79)"} []
[2023-03-10T14:18:00.714833+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindValue($param, $value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindValue($param, $value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:59)"} []
[2023-03-10T14:18:00.714961+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:95)"} []
[2023-03-10T14:18:00.715076+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:109)"} []
[2023-03-10T14:18:00.715236+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:123)"} []
[2023-03-10T14:18:00.715357+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:143)"} []
[2023-03-10T14:18:00.715484+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatementImplementations.php:36)"} []
[2023-03-10T14:18:01.377573+01:00] console.DEBUG: Command ""d:d:c"" exited with code "1" {"command":"\"d:d:c\"","code":1} []
[2023-03-10T14:19:14.696017+01:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\EnvNotFoundException: "Environment variable not found: "CORS_ALLOW_ORIGIN"." at D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\dependency-injection\EnvVarProcessor.php line 172 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\EnvNotFoundException(code: 0): Environment variable not found: \"CORS_ALLOW_ORIGIN\". at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\EnvVarProcessor.php:172)"} []
[2023-03-10T14:19:14.766035+01:00] request.CRITICAL: Exception thrown when handling an exception (Symfony\Component\DependencyInjection\Exception\EnvNotFoundException: Environment variable not found: "CORS_ALLOW_ORIGIN". at D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\dependency-injection\EnvVarProcessor.php line 172) {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\EnvNotFoundException(code: 0): Environment variable not found: \"CORS_ALLOW_ORIGIN\". at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\EnvVarProcessor.php:172)"} []
[2023-03-10T14:19:16.688786+01:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\EnvNotFoundException: "Environment variable not found: "CORS_ALLOW_ORIGIN"." at D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\dependency-injection\EnvVarProcessor.php line 172 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\EnvNotFoundException(code: 0): Environment variable not found: \"CORS_ALLOW_ORIGIN\". at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\EnvVarProcessor.php:172)"} []
[2023-03-10T14:19:16.693746+01:00] request.CRITICAL: Exception thrown when handling an exception (Symfony\Component\DependencyInjection\Exception\EnvNotFoundException: Environment variable not found: "CORS_ALLOW_ORIGIN". at D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\dependency-injection\EnvVarProcessor.php line 172) {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\EnvNotFoundException(code: 0): Environment variable not found: \"CORS_ALLOW_ORIGIN\". at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\EnvVarProcessor.php:172)"} []
[2023-03-10T14:19:44.502505+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\ParameterBag.php:210)"} []
[2023-03-10T14:19:44.502938+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\ParameterBag.php:220)"} []
[2023-03-10T14:19:44.503032+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2023-03-10T14:19:44.503106+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2023-03-10T14:19:44.503175+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2023-03-10T14:19:44.503245+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2023-03-10T14:19:44.503376+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2023-03-10T14:19:44.503450+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2023-03-10T14:19:44.503517+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:19:44.503586+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:19:44.503650+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:19:44.503713+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:19:44.503774+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:19:44.503877+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:19:44.503948+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:19:44.504013+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:19:44.504076+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\MethodReflection::getDeclaringClass() should either be compatible with ReflectionMethod::getDeclaringClass(): ReflectionClass, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\MethodReflection::getDeclaringClass() should either be compatible with ReflectionMethod::getDeclaringClass(): ReflectionClass, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\MethodReflection.php:72)"} []
[2023-03-10T14:19:44.504144+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\MethodReflection::getPrototype($format = self::PROTOTYPE_AS_ARRAY) should either be compatible with ReflectionMethod::getPrototype(): ReflectionMethod, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\MethodReflection::getPrototype($format = self::PROTOTYPE_AS_ARRAY) should either be compatible with ReflectionMethod::getPrototype(): ReflectionMethod, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\MethodReflection.php:87)"} []
[2023-03-10T14:19:44.504211+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\MethodReflection::getParameters() should either be compatible with ReflectionFunctionAbstract::getParameters(): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\MethodReflection::getParameters() should either be compatible with ReflectionFunctionAbstract::getParameters(): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\MethodReflection.php:143)"} []
[2023-03-10T14:19:44.504280+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\MethodReflection::getStartLine($includeDocComment = false) should either be compatible with ReflectionFunctionAbstract::getStartLine(): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\MethodReflection::getStartLine($includeDocComment = false) should either be compatible with ReflectionFunctionAbstract::getStartLine(): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\MethodReflection.php:56)"} []
[2023-03-10T14:19:44.504351+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getStartLine($includeDocComment = false) should either be compatible with ReflectionClass::getStartLine(): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getStartLine($includeDocComment = false) should either be compatible with ReflectionClass::getStartLine(): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:47)"} []
[2023-03-10T14:19:44.504418+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getMethod($name) should either be compatible with ReflectionClass::getMethod(string $name): ReflectionMethod, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getMethod($name) should either be compatible with ReflectionClass::getMethod(string $name): ReflectionMethod, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:106)"} []
[2023-03-10T14:19:44.504484+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getMethods($filter = -1) should either be compatible with ReflectionClass::getMethods(?int $filter = null): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getMethods($filter = -1) should either be compatible with ReflectionClass::getMethods(?int $filter = null): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:117)"} []
[2023-03-10T14:19:44.504555+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getProperty($name) should either be compatible with ReflectionClass::getProperty(string $name): ReflectionProperty, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getProperty($name) should either be compatible with ReflectionClass::getProperty(string $name): ReflectionProperty, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:172)"} []
[2023-03-10T14:19:44.504631+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getProperties($filter = -1) should either be compatible with ReflectionClass::getProperties(?int $filter = null): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getProperties($filter = -1) should either be compatible with ReflectionClass::getProperties(?int $filter = null): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:187)"} []
[2023-03-10T14:19:44.504694+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getInterfaces() should either be compatible with ReflectionClass::getInterfaces(): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getInterfaces() should either be compatible with ReflectionClass::getInterfaces(): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:86)"} []
[2023-03-10T14:19:44.504756+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getTraits() should either be compatible with ReflectionClass::getTraits(): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getTraits() should either be compatible with ReflectionClass::getTraits(): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:133)"} []
[2023-03-10T14:19:44.504818+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getParentClass() should either be compatible with ReflectionClass::getParentClass(): ReflectionClass|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getParentClass() should either be compatible with ReflectionClass::getParentClass(): ReflectionClass|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:153)"} []
[2023-03-10T14:19:44.504881+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ParameterReflection::getDeclaringFunction() should either be compatible with ReflectionParameter::getDeclaringFunction(): ReflectionFunctionAbstract, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ParameterReflection::getDeclaringFunction() should either be compatible with ReflectionParameter::getDeclaringFunction(): ReflectionFunctionAbstract, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ParameterReflection.php:53)"} []
[2023-03-10T14:19:44.504958+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ParameterReflection::getDeclaringClass() should either be compatible with ReflectionParameter::getDeclaringClass(): ?ReflectionClass, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ParameterReflection::getDeclaringClass() should either be compatible with ReflectionParameter::getDeclaringClass(): ?ReflectionClass, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ParameterReflection.php:21)"} []
[2023-03-10T14:19:44.505024+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ParameterReflection::getClass() should either be compatible with ReflectionParameter::getClass(): ?ReflectionClass, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ParameterReflection::getClass() should either be compatible with ReflectionParameter::getClass(): ?ReflectionClass, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ParameterReflection.php:35)"} []
[2023-03-10T14:19:44.507330+01:00] php.DEBUG: Warning: filemtime(): stat failed for E:\cabinet\config\routes\dev\web_profiler.yaml {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\config\\Resource\\FileResource.php","line":65,"trace":[{"file":"D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\config\\Resource\\SelfCheckingResourceChecker.php","line":34,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2023-03-10T14:19:44.515169+01:00] php.INFO: Deprecated: Return type of Symfony\Component\Routing\RouteCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Routing\\RouteCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\routing\\RouteCollection.php:59)"} []
[2023-03-10T14:19:44.515336+01:00] php.INFO: Deprecated: Return type of Symfony\Component\Routing\RouteCollection::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Routing\\RouteCollection::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\routing\\RouteCollection.php:69)"} []
[2023-03-10T14:19:45.407151+01:00] php.INFO: Deprecated: Return type of ApiPlatform\Core\Metadata\Property\PropertyNameCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of ApiPlatform\\Core\\Metadata\\Property\\PropertyNameCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\api-platform\\core\\src\\Metadata\\Property\\PropertyNameCollection.php:39)"} []
[2023-03-10T14:19:45.407362+01:00] php.INFO: Deprecated: Return type of ApiPlatform\Core\Metadata\Property\PropertyNameCollection::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of ApiPlatform\\Core\\Metadata\\Property\\PropertyNameCollection::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\api-platform\\core\\src\\Metadata\\Property\\PropertyNameCollection.php:47)"} []
[2023-03-10T14:19:51.281078+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetExists($key) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetExists($key) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:153)"} []
[2023-03-10T14:19:51.281498+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetGet($key) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetGet($key) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:158)"} []
[2023-03-10T14:19:51.281756+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetSet($key, $value) should either be compatible with ArrayAccess::offsetSet(mixed $offset, mixed $value): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetSet($key, $value) should either be compatible with ArrayAccess::offsetSet(mixed $offset, mixed $value): void, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:163)"} []
[2023-03-10T14:19:51.281958+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetUnset($key) should either be compatible with ArrayAccess::offsetUnset(mixed $offset): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetUnset($key) should either be compatible with ArrayAccess::offsetUnset(mixed $offset): void, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:168)"} []
[2023-03-10T14:19:51.282085+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:114)"} []
[2023-03-10T14:19:51.282204+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:122)"} []
[2023-03-10T14:19:51.290597+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1:8000/"" at D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\http-kernel\EventListener\RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/\" at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:182)"} []
[2023-03-10T14:19:51.407687+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:50)"} []
[2023-03-10T14:19:51.408322+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:99)"} []
[2023-03-10T14:19:51.408480+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:76)"} []
[2023-03-10T14:19:51.408605+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::quote($value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::quote($value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:91)"} []
[2023-03-10T14:19:51.408751+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOQueryImplementation.php:20)"} []
[2023-03-10T14:19:51.420303+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindParam($param, &$variable, $type = Doctrine\DBAL\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindParam($param, &$variable, $type = Doctrine\\DBAL\\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:79)"} []
[2023-03-10T14:19:51.420506+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindValue($param, $value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindValue($param, $value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:59)"} []
[2023-03-10T14:19:51.420677+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:95)"} []
[2023-03-10T14:19:51.420807+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:109)"} []
[2023-03-10T14:19:51.421108+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:123)"} []
[2023-03-10T14:19:51.421247+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:143)"} []
[2023-03-10T14:19:51.421385+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatementImplementations.php:36)"} []
[2023-03-10T14:19:51.422129+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2023-03-10T14:19:51.549143+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\ForwardCompatibility\Result::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\ForwardCompatibility\\Result::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\ForwardCompatibility\\Result.php:43)"} []
[2023-03-10T14:19:51.556671+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2023-03-10T14:19:51.559169+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2023-03-10T14:19:51.560491+01:00] php.INFO: Deprecated: stripos(): Passing null to parameter #1 ($haystack) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: stripos(): Passing null to parameter #1 ($haystack) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\web-profiler-bundle\\EventListener\\WebDebugToolbarListener.php:125)"} []
[2023-03-10T14:19:51.593248+01:00] php.INFO: Deprecated: Return type of Twig\Node\Node::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Twig\\Node\\Node::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\twig\\twig\\src\\Node\\Node.php:151)"} []
[2023-03-10T14:19:53.354034+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\ParameterBag.php:210)"} []
[2023-03-10T14:19:53.356357+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\ParameterBag.php:220)"} []
[2023-03-10T14:19:53.356468+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2023-03-10T14:19:53.356565+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2023-03-10T14:19:53.389073+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"61aecc"},"request_uri":"http://127.0.0.1:8000/_wdt/61aecc","method":"GET"} []
[2023-03-10T14:19:53.411939+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetExists($key) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetExists($key) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:153)"} []
[2023-03-10T14:19:53.413284+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetGet($key) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetGet($key) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:158)"} []
[2023-03-10T14:19:53.413451+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetSet($key, $value) should either be compatible with ArrayAccess::offsetSet(mixed $offset, mixed $value): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetSet($key, $value) should either be compatible with ArrayAccess::offsetSet(mixed $offset, mixed $value): void, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:163)"} []
[2023-03-10T14:19:53.413591+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetUnset($key) should either be compatible with ArrayAccess::offsetUnset(mixed $offset): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetUnset($key) should either be compatible with ArrayAccess::offsetUnset(mixed $offset): void, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:168)"} []
[2023-03-10T14:19:53.413701+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:114)"} []
[2023-03-10T14:19:53.413810+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:122)"} []
[2023-03-10T14:19:53.437186+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2023-03-10T14:19:53.437346+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2023-03-10T14:19:53.439356+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2023-03-10T14:19:53.439499+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2023-03-10T14:19:53.635874+01:00] php.INFO: Deprecated: Return type of Twig\Node\Node::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Twig\\Node\\Node::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\twig\\twig\\src\\Node\\Node.php:151)"} []
[2023-03-10T14:19:54.005010+01:00] php.INFO: Deprecated: Return type of Twig\Markup::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Twig\\Markup::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\twig\\twig\\src\\Markup.php:38)"} []
[2023-03-10T14:19:54.005174+01:00] php.INFO: Deprecated: Return type of Twig\Markup::jsonSerialize() should either be compatible with JsonSerializable::jsonSerialize(): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Twig\\Markup::jsonSerialize() should either be compatible with JsonSerializable::jsonSerialize(): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\twig\\twig\\src\\Markup.php:43)"} []
[2023-03-10T14:19:57.019877+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\ParameterBag.php:210)"} []
[2023-03-10T14:19:57.022305+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\ParameterBag.php:220)"} []
[2023-03-10T14:19:57.022402+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2023-03-10T14:19:57.022468+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2023-03-10T14:19:57.034617+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2023-03-10T14:19:57.048724+01:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-03-10T14:19:57.227475+01:00] php.INFO: Deprecated: Return type of ApiPlatform\Core\Metadata\Property\PropertyNameCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of ApiPlatform\\Core\\Metadata\\Property\\PropertyNameCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\api-platform\\core\\src\\Metadata\\Property\\PropertyNameCollection.php:39)"} []
[2023-03-10T14:19:57.227654+01:00] php.INFO: Deprecated: Return type of ApiPlatform\Core\Metadata\Property\PropertyNameCollection::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of ApiPlatform\\Core\\Metadata\\Property\\PropertyNameCollection::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\api-platform\\core\\src\\Metadata\\Property\\PropertyNameCollection.php:47)"} []
[2023-03-10T14:19:57.254454+01:00] php.INFO: Deprecated: Return type of Symfony\Component\Routing\RouteCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Routing\\RouteCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\routing\\RouteCollection.php:59)"} []
[2023-03-10T14:19:57.254618+01:00] php.INFO: Deprecated: Return type of Symfony\Component\Routing\RouteCollection::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Routing\\RouteCollection::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\routing\\RouteCollection.php:69)"} []
[2023-03-10T14:20:00.227366+01:00] php.INFO: Deprecated: Return type of Twig\Node\Node::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Twig\\Node\\Node::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\twig\\twig\\src\\Node\\Node.php:151)"} []
[2023-03-10T14:20:00.292711+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetExists($key) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetExists($key) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:153)"} []
[2023-03-10T14:20:00.292956+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetGet($key) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetGet($key) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:158)"} []
[2023-03-10T14:20:00.293072+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetSet($key, $value) should either be compatible with ArrayAccess::offsetSet(mixed $offset, mixed $value): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetSet($key, $value) should either be compatible with ArrayAccess::offsetSet(mixed $offset, mixed $value): void, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:163)"} []
[2023-03-10T14:20:00.293175+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetUnset($key) should either be compatible with ArrayAccess::offsetUnset(mixed $offset): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetUnset($key) should either be compatible with ArrayAccess::offsetUnset(mixed $offset): void, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:168)"} []
[2023-03-10T14:20:00.293276+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:114)"} []
[2023-03-10T14:20:00.293376+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:122)"} []
[2023-03-10T14:20:00.306839+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2023-03-10T14:20:00.306993+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2023-03-10T14:20:00.308769+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2023-03-10T14:20:00.308961+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2023-03-10T14:20:00.361095+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:50)"} []
[2023-03-10T14:20:00.361274+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:99)"} []
[2023-03-10T14:20:00.361494+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:76)"} []
[2023-03-10T14:20:00.361620+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::quote($value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::quote($value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:91)"} []
[2023-03-10T14:20:00.361729+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOQueryImplementation.php:20)"} []
[2023-03-10T14:20:00.365375+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindParam($param, &$variable, $type = Doctrine\DBAL\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindParam($param, &$variable, $type = Doctrine\\DBAL\\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:79)"} []
[2023-03-10T14:20:00.365549+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindValue($param, $value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindValue($param, $value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:59)"} []
[2023-03-10T14:20:00.365660+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:95)"} []
[2023-03-10T14:20:00.365775+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:109)"} []
[2023-03-10T14:20:00.365876+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:123)"} []
[2023-03-10T14:20:00.365973+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:143)"} []
[2023-03-10T14:20:00.366073+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatementImplementations.php:36)"} []
[2023-03-10T14:20:00.366675+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2023-03-10T14:20:00.369270+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\ForwardCompatibility\Result::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\ForwardCompatibility\\Result::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\ForwardCompatibility\\Result.php:43)"} []
[2023-03-10T14:20:00.373257+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2023-03-10T14:20:00.373906+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2023-03-10T14:20:00.374792+01:00] php.INFO: Deprecated: stripos(): Passing null to parameter #1 ($haystack) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: stripos(): Passing null to parameter #1 ($haystack) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\web-profiler-bundle\\EventListener\\WebDebugToolbarListener.php:125)"} []
[2023-03-10T14:20:00.466643+01:00] php.INFO: Deprecated: Return type of Symfony\Component\Finder\Finder::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Finder\\Finder::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\finder\\Finder.php:608)"} []
[2023-03-10T14:20:00.466820+01:00] php.INFO: Deprecated: Return type of Symfony\Component\Finder\Finder::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Finder\\Finder::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\finder\\Finder.php:690)"} []
[2023-03-10T14:20:01.338447+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\ParameterBag.php:210)"} []
[2023-03-10T14:20:01.340522+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\ParameterBag.php:220)"} []
[2023-03-10T14:20:01.340670+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2023-03-10T14:20:01.340817+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2023-03-10T14:20:01.366800+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetExists($key) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetExists($key) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:153)"} []
[2023-03-10T14:20:01.366947+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetGet($key) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetGet($key) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:158)"} []
[2023-03-10T14:20:01.367117+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetSet($key, $value) should either be compatible with ArrayAccess::offsetSet(mixed $offset, mixed $value): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetSet($key, $value) should either be compatible with ArrayAccess::offsetSet(mixed $offset, mixed $value): void, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:163)"} []
[2023-03-10T14:20:01.367215+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetUnset($key) should either be compatible with ArrayAccess::offsetUnset(mixed $offset): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetUnset($key) should either be compatible with ArrayAccess::offsetUnset(mixed $offset): void, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:168)"} []
[2023-03-10T14:20:01.367303+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:114)"} []
[2023-03-10T14:20:01.367386+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:122)"} []
[2023-03-10T14:20:01.384347+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1:8000/"" at D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\http-kernel\EventListener\RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/\" at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:182)"} []
[2023-03-10T14:20:01.398685+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2023-03-10T14:20:01.398855+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2023-03-10T14:20:01.400277+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2023-03-10T14:20:01.400447+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2023-03-10T14:20:01.470034+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:50)"} []
[2023-03-10T14:20:01.470199+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:99)"} []
[2023-03-10T14:20:01.470317+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:76)"} []
[2023-03-10T14:20:01.470493+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::quote($value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::quote($value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:91)"} []
[2023-03-10T14:20:01.470614+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOQueryImplementation.php:20)"} []
[2023-03-10T14:20:01.473789+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindParam($param, &$variable, $type = Doctrine\DBAL\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindParam($param, &$variable, $type = Doctrine\\DBAL\\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:79)"} []
[2023-03-10T14:20:01.473979+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindValue($param, $value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindValue($param, $value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:59)"} []
[2023-03-10T14:20:01.474113+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:95)"} []
[2023-03-10T14:20:01.474238+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:109)"} []
[2023-03-10T14:20:01.474355+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:123)"} []
[2023-03-10T14:20:01.474471+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:143)"} []
[2023-03-10T14:20:01.474590+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatementImplementations.php:36)"} []
[2023-03-10T14:20:01.477073+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2023-03-10T14:20:01.479849+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\ForwardCompatibility\Result::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\ForwardCompatibility\\Result::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\ForwardCompatibility\\Result.php:43)"} []
[2023-03-10T14:20:01.483851+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2023-03-10T14:20:01.484501+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2023-03-10T14:20:01.485341+01:00] php.INFO: Deprecated: stripos(): Passing null to parameter #1 ($haystack) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: stripos(): Passing null to parameter #1 ($haystack) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\web-profiler-bundle\\EventListener\\WebDebugToolbarListener.php:125)"} []
[2023-03-10T14:20:01.558060+01:00] php.INFO: Deprecated: Return type of Symfony\Component\Finder\Finder::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Finder\\Finder::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\finder\\Finder.php:608)"} []
[2023-03-10T14:20:01.558221+01:00] php.INFO: Deprecated: Return type of Symfony\Component\Finder\Finder::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Finder\\Finder::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\finder\\Finder.php:690)"} []
[2023-03-10T14:20:02.393211+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\ParameterBag.php:210)"} []
[2023-03-10T14:20:02.396245+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\ParameterBag.php:220)"} []
[2023-03-10T14:20:02.396357+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2023-03-10T14:20:02.396437+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2023-03-10T14:20:02.405002+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"17a7b1"},"request_uri":"http://127.0.0.1:8000/_wdt/17a7b1","method":"GET"} []
[2023-03-10T14:20:02.425023+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetExists($key) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetExists($key) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:153)"} []
[2023-03-10T14:20:02.425197+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetGet($key) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetGet($key) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:158)"} []
[2023-03-10T14:20:02.425330+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetSet($key, $value) should either be compatible with ArrayAccess::offsetSet(mixed $offset, mixed $value): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetSet($key, $value) should either be compatible with ArrayAccess::offsetSet(mixed $offset, mixed $value): void, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:163)"} []
[2023-03-10T14:20:02.425530+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetUnset($key) should either be compatible with ArrayAccess::offsetUnset(mixed $offset): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetUnset($key) should either be compatible with ArrayAccess::offsetUnset(mixed $offset): void, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:168)"} []
[2023-03-10T14:20:02.425675+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:114)"} []
[2023-03-10T14:20:02.425780+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:122)"} []
[2023-03-10T14:20:02.439989+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2023-03-10T14:20:02.440154+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2023-03-10T14:20:02.442016+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2023-03-10T14:20:02.442193+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2023-03-10T14:20:02.510857+01:00] php.INFO: Deprecated: Return type of Twig\Markup::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Twig\\Markup::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\twig\\twig\\src\\Markup.php:38)"} []
[2023-03-10T14:20:02.511019+01:00] php.INFO: Deprecated: Return type of Twig\Markup::jsonSerialize() should either be compatible with JsonSerializable::jsonSerialize(): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Twig\\Markup::jsonSerialize() should either be compatible with JsonSerializable::jsonSerialize(): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\twig\\twig\\src\\Markup.php:43)"} []
[2023-03-10T14:20:04.585123+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\ParameterBag.php:210)"} []
[2023-03-10T14:20:04.587000+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\ParameterBag.php:220)"} []
[2023-03-10T14:20:04.587145+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2023-03-10T14:20:04.587217+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2023-03-10T14:20:04.595743+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2023-03-10T14:20:04.607404+01:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-03-10T14:20:04.710465+01:00] php.INFO: Deprecated: Return type of Symfony\Component\Routing\RouteCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Routing\\RouteCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\routing\\RouteCollection.php:59)"} []
[2023-03-10T14:20:04.710684+01:00] php.INFO: Deprecated: Return type of Symfony\Component\Routing\RouteCollection::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Routing\\RouteCollection::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\routing\\RouteCollection.php:69)"} []
[2023-03-10T14:20:04.772011+01:00] php.INFO: Deprecated: Return type of ApiPlatform\Core\Metadata\Property\PropertyNameCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of ApiPlatform\\Core\\Metadata\\Property\\PropertyNameCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\api-platform\\core\\src\\Metadata\\Property\\PropertyNameCollection.php:39)"} []
[2023-03-10T14:20:04.772307+01:00] php.INFO: Deprecated: Return type of ApiPlatform\Core\Metadata\Property\PropertyNameCollection::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of ApiPlatform\\Core\\Metadata\\Property\\PropertyNameCollection::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\api-platform\\core\\src\\Metadata\\Property\\PropertyNameCollection.php:47)"} []
[2023-03-10T14:20:05.035183+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetExists($key) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetExists($key) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:153)"} []
[2023-03-10T14:20:05.035353+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetGet($key) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetGet($key) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:158)"} []
[2023-03-10T14:20:05.035479+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetSet($key, $value) should either be compatible with ArrayAccess::offsetSet(mixed $offset, mixed $value): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetSet($key, $value) should either be compatible with ArrayAccess::offsetSet(mixed $offset, mixed $value): void, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:163)"} []
[2023-03-10T14:20:05.035593+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::offsetUnset($key) should either be compatible with ArrayAccess::offsetUnset(mixed $offset): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::offsetUnset($key) should either be compatible with ArrayAccess::offsetUnset(mixed $offset): void, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:168)"} []
[2023-03-10T14:20:05.035689+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:114)"} []
[2023-03-10T14:20:05.035801+01:00] php.INFO: Deprecated: Return type of Symfony\Component\VarDumper\Cloner\Data::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\VarDumper\\Cloner\\Data::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\var-dumper\\Cloner\\Data.php:122)"} []
[2023-03-10T14:20:05.052933+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2023-03-10T14:20:05.053105+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2023-03-10T14:20:05.054899+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2023-03-10T14:20:05.055048+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2023-03-10T14:20:05.130606+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:50)"} []
[2023-03-10T14:20:05.130778+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:99)"} []
[2023-03-10T14:20:05.130891+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:76)"} []
[2023-03-10T14:20:05.130996+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::quote($value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::quote($value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:91)"} []
[2023-03-10T14:20:05.131103+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOQueryImplementation.php:20)"} []
[2023-03-10T14:20:05.135723+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindParam($param, &$variable, $type = Doctrine\DBAL\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindParam($param, &$variable, $type = Doctrine\\DBAL\\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:79)"} []
[2023-03-10T14:20:05.135909+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindValue($param, $value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindValue($param, $value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:59)"} []
[2023-03-10T14:20:05.136021+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:95)"} []
[2023-03-10T14:20:05.136125+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:109)"} []
[2023-03-10T14:20:05.136227+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:123)"} []
[2023-03-10T14:20:05.136334+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:143)"} []
[2023-03-10T14:20:05.136441+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatementImplementations.php:36)"} []
[2023-03-10T14:20:05.139235+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2023-03-10T14:20:05.141602+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\ForwardCompatibility\Result::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\ForwardCompatibility\\Result::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\ForwardCompatibility\\Result.php:43)"} []
[2023-03-10T14:20:05.145965+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2023-03-10T14:20:05.146947+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2023-03-10T14:20:05.248527+01:00] php.INFO: Deprecated: Return type of Symfony\Component\Finder\Finder::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Finder\\Finder::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\finder\\Finder.php:608)"} []
[2023-03-10T14:20:05.248714+01:00] php.INFO: Deprecated: Return type of Symfony\Component\Finder\Finder::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Finder\\Finder::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\finder\\Finder.php:690)"} []
[2023-03-10T14:21:46.490945+01:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2023-03-10T14:21:46.542668+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:50)"} []
[2023-03-10T14:21:46.542773+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:99)"} []
[2023-03-10T14:21:46.542841+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:76)"} []
[2023-03-10T14:21:46.542900+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::quote($value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::quote($value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:91)"} []
[2023-03-10T14:21:46.543014+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOQueryImplementation.php:20)"} []
[2023-03-10T14:21:46.547517+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindParam($param, &$variable, $type = Doctrine\DBAL\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindParam($param, &$variable, $type = Doctrine\\DBAL\\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:79)"} []
[2023-03-10T14:21:46.547632+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindValue($param, $value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindValue($param, $value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:59)"} []
[2023-03-10T14:21:46.547702+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:95)"} []
[2023-03-10T14:21:46.547764+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:109)"} []
[2023-03-10T14:21:46.547882+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:123)"} []
[2023-03-10T14:21:46.547946+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:143)"} []
[2023-03-10T14:21:46.548007+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatementImplementations.php:36)"} []
[2023-03-10T14:21:46.549816+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2023-03-10T14:21:46.551736+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\ForwardCompatibility\Result::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\ForwardCompatibility\\Result::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\ForwardCompatibility\\Result.php:43)"} []
[2023-03-10T14:21:46.554544+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2023-03-10T14:21:47.593808+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2023-03-10T14:21:52.450491+01:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2023-03-10T14:21:53.418485+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:50)"} []
[2023-03-10T14:21:53.418591+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:99)"} []
[2023-03-10T14:21:53.418665+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:76)"} []
[2023-03-10T14:21:53.418722+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::quote($value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::quote($value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:91)"} []
[2023-03-10T14:21:53.418835+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOQueryImplementation.php:20)"} []
[2023-03-10T14:21:53.422091+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindParam($param, &$variable, $type = Doctrine\DBAL\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindParam($param, &$variable, $type = Doctrine\\DBAL\\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:79)"} []
[2023-03-10T14:21:53.422196+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindValue($param, $value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindValue($param, $value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:59)"} []
[2023-03-10T14:21:53.422261+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:95)"} []
[2023-03-10T14:21:53.422324+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:109)"} []
[2023-03-10T14:21:53.422424+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:123)"} []
[2023-03-10T14:21:53.422481+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:143)"} []
[2023-03-10T14:21:53.422535+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatementImplementations.php:36)"} []
[2023-03-10T14:21:53.424118+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2023-03-10T14:21:53.425996+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\ForwardCompatibility\Result::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\ForwardCompatibility\\Result::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\ForwardCompatibility\\Result.php:43)"} []
[2023-03-10T14:21:53.438504+01:00] doctrine.DEBUG: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB [] []
[2023-03-10T14:21:53.464290+01:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2023-03-10T14:21:53.465671+01:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2023-03-10T14:21:53.466045+01:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2023-03-10T14:21:53.475072+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2023-03-10T14:21:53.487864+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\MethodReflection::getDeclaringClass() should either be compatible with ReflectionMethod::getDeclaringClass(): ReflectionClass, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\MethodReflection::getDeclaringClass() should either be compatible with ReflectionMethod::getDeclaringClass(): ReflectionClass, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\MethodReflection.php:72)"} []
[2023-03-10T14:21:53.487968+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\MethodReflection::getPrototype($format = self::PROTOTYPE_AS_ARRAY) should either be compatible with ReflectionMethod::getPrototype(): ReflectionMethod, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\MethodReflection::getPrototype($format = self::PROTOTYPE_AS_ARRAY) should either be compatible with ReflectionMethod::getPrototype(): ReflectionMethod, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\MethodReflection.php:87)"} []
[2023-03-10T14:21:53.488036+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\MethodReflection::getParameters() should either be compatible with ReflectionFunctionAbstract::getParameters(): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\MethodReflection::getParameters() should either be compatible with ReflectionFunctionAbstract::getParameters(): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\MethodReflection.php:143)"} []
[2023-03-10T14:21:53.488094+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\MethodReflection::getStartLine($includeDocComment = false) should either be compatible with ReflectionFunctionAbstract::getStartLine(): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\MethodReflection::getStartLine($includeDocComment = false) should either be compatible with ReflectionFunctionAbstract::getStartLine(): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\MethodReflection.php:56)"} []
[2023-03-10T14:21:53.488739+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getStartLine($includeDocComment = false) should either be compatible with ReflectionClass::getStartLine(): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getStartLine($includeDocComment = false) should either be compatible with ReflectionClass::getStartLine(): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:47)"} []
[2023-03-10T14:21:53.488836+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getMethod($name) should either be compatible with ReflectionClass::getMethod(string $name): ReflectionMethod, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getMethod($name) should either be compatible with ReflectionClass::getMethod(string $name): ReflectionMethod, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:106)"} []
[2023-03-10T14:21:53.488904+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getMethods($filter = -1) should either be compatible with ReflectionClass::getMethods(?int $filter = null): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getMethods($filter = -1) should either be compatible with ReflectionClass::getMethods(?int $filter = null): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:117)"} []
[2023-03-10T14:21:53.488964+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getProperty($name) should either be compatible with ReflectionClass::getProperty(string $name): ReflectionProperty, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getProperty($name) should either be compatible with ReflectionClass::getProperty(string $name): ReflectionProperty, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:172)"} []
[2023-03-10T14:21:53.489021+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getProperties($filter = -1) should either be compatible with ReflectionClass::getProperties(?int $filter = null): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getProperties($filter = -1) should either be compatible with ReflectionClass::getProperties(?int $filter = null): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:187)"} []
[2023-03-10T14:21:53.489075+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getInterfaces() should either be compatible with ReflectionClass::getInterfaces(): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getInterfaces() should either be compatible with ReflectionClass::getInterfaces(): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:86)"} []
[2023-03-10T14:21:53.489175+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getTraits() should either be compatible with ReflectionClass::getTraits(): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getTraits() should either be compatible with ReflectionClass::getTraits(): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:133)"} []
[2023-03-10T14:21:53.489252+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getParentClass() should either be compatible with ReflectionClass::getParentClass(): ReflectionClass|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getParentClass() should either be compatible with ReflectionClass::getParentClass(): ReflectionClass|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:153)"} []
[2023-03-10T14:21:53.490052+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ParameterReflection::getDeclaringFunction() should either be compatible with ReflectionParameter::getDeclaringFunction(): ReflectionFunctionAbstract, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ParameterReflection::getDeclaringFunction() should either be compatible with ReflectionParameter::getDeclaringFunction(): ReflectionFunctionAbstract, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ParameterReflection.php:53)"} []
[2023-03-10T14:21:53.490143+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ParameterReflection::getDeclaringClass() should either be compatible with ReflectionParameter::getDeclaringClass(): ?ReflectionClass, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ParameterReflection::getDeclaringClass() should either be compatible with ReflectionParameter::getDeclaringClass(): ?ReflectionClass, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ParameterReflection.php:21)"} []
[2023-03-10T14:21:53.490208+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ParameterReflection::getClass() should either be compatible with ReflectionParameter::getClass(): ?ReflectionClass, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ParameterReflection::getClass() should either be compatible with ReflectionParameter::getClass(): ?ReflectionClass, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ParameterReflection.php:35)"} []
[2023-03-10T14:21:53.503113+01:00] doctrine.DEBUG: CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2023-03-10T14:21:53.526625+01:00] doctrine.DEBUG: CREATE SEQUENCE categorie_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2023-03-10T14:21:53.545392+01:00] doctrine.DEBUG: CREATE SEQUENCE compteur_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2023-03-10T14:21:53.564108+01:00] doctrine.DEBUG: CREATE SEQUENCE consultation_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2023-03-10T14:21:53.586690+01:00] doctrine.DEBUG: CREATE SEQUENCE domaine_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2023-03-10T14:21:53.608459+01:00] doctrine.DEBUG: CREATE SEQUENCE horaire_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2023-03-10T14:21:53.631211+01:00] doctrine.DEBUG: CREATE SEQUENCE medecin_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2023-03-10T14:21:53.653150+01:00] doctrine.DEBUG: CREATE SEQUENCE medicament_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2023-03-10T14:21:53.676195+01:00] doctrine.DEBUG: CREATE SEQUENCE modereg_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2023-03-10T14:21:53.694512+01:00] doctrine.DEBUG: CREATE SEQUENCE nationalite_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2023-03-10T14:21:53.710199+01:00] doctrine.DEBUG: CREATE SEQUENCE ordonance_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2023-03-10T14:21:53.732895+01:00] doctrine.DEBUG: CREATE SEQUENCE patient_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2023-03-10T14:21:53.758648+01:00] doctrine.DEBUG: CREATE SEQUENCE reglement_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2023-03-10T14:21:53.776547+01:00] doctrine.DEBUG: CREATE SEQUENCE specialite_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2023-03-10T14:21:53.819192+01:00] doctrine.DEBUG: CREATE SEQUENCE user_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2023-03-10T14:21:53.839957+01:00] doctrine.DEBUG: CREATE TABLE assureur (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2023-03-10T14:21:53.858200+01:00] doctrine.DEBUG: CREATE TABLE categorie (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2023-03-10T14:21:53.882387+01:00] doctrine.DEBUG: CREATE TABLE compteur (id INT NOT NULL, annee INT NOT NULL, numconsultation INT NOT NULL, numrdv INT NOT NULL, PRIMARY KEY(id)) [] []
[2023-03-10T14:21:53.904935+01:00] doctrine.DEBUG: CREATE TABLE consultation (id INT NOT NULL, patient_id INT NOT NULL, numero INT NOT NULL, annee INT NOT NULL, date_consultation DATE NOT NULL, observation VARCHAR(255) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) [] []
[2023-03-10T14:21:53.927512+01:00] doctrine.DEBUG: CREATE INDEX IDX_964685A66B899279 ON consultation (patient_id) [] []
[2023-03-10T14:21:53.941561+01:00] doctrine.DEBUG: CREATE TABLE domaine (id INT NOT NULL, code VARCHAR(255) NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) [] []
[2023-03-10T14:21:53.971662+01:00] doctrine.DEBUG: CREATE TABLE horaire (id INT NOT NULL, code VARCHAR(255) NOT NULL, hd TIME(0) WITHOUT TIME ZONE NOT NULL, hf TIME(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) [] []
[2023-03-10T14:21:53.979106+01:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing 'CREATE TABLE horaire (id INT NOT NULL, code VARCHAR(255) NOT NULL, hd TIME(0) WITHOUT TIME ZONE NOT NULL, hf TIME(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))':  SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'TIME ZONE NOT NULL, hf TIME(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))' at line 1" {"exception":"[object] (Doctrine\\DBAL\\Exception\\SyntaxErrorException(code: 0): An exception occurred while executing 'CREATE TABLE horaire (id INT NOT NULL, code VARCHAR(255) NOT NULL, hd TIME(0) WITHOUT TIME ZONE NOT NULL, hf TIME(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))':\n\nSQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'TIME ZONE NOT NULL, hf TIME(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))' at line 1 at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractMySQLDriver.php:98)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 42000): SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'TIME ZONE NOT NULL, hf TIME(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))' at line 1 at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 42000): SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'TIME ZONE NOT NULL, hf TIME(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))' at line 1 at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:132)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing 'CREATE TABLE horaire (id INT NOT NULL, code VARCHAR(255) NOT NULL, hd TIME(0) WITHOUT TIME ZONE NOT NULL, hf TIME(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))':\n\nSQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'TIME ZONE NOT NULL, hf TIME(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))' at line 1"} []
[2023-03-10T14:21:53.979897+01:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2023-03-10T14:25:00.441315+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2023-03-10T14:25:00.441658+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2023-03-10T14:25:00.441710+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2023-03-10T14:25:00.441796+01:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2023-03-10T14:25:00.441835+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:25:00.441868+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:25:00.441897+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:25:00.441925+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:25:00.441953+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:25:00.441982+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:25:00.442024+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:25:00.442053+01:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-03-10T14:25:00.442109+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\MethodReflection::getDeclaringClass() should either be compatible with ReflectionMethod::getDeclaringClass(): ReflectionClass, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\MethodReflection::getDeclaringClass() should either be compatible with ReflectionMethod::getDeclaringClass(): ReflectionClass, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\MethodReflection.php:72)"} []
[2023-03-10T14:25:00.442143+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\MethodReflection::getPrototype($format = self::PROTOTYPE_AS_ARRAY) should either be compatible with ReflectionMethod::getPrototype(): ReflectionMethod, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\MethodReflection::getPrototype($format = self::PROTOTYPE_AS_ARRAY) should either be compatible with ReflectionMethod::getPrototype(): ReflectionMethod, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\MethodReflection.php:87)"} []
[2023-03-10T14:25:00.442173+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\MethodReflection::getParameters() should either be compatible with ReflectionFunctionAbstract::getParameters(): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\MethodReflection::getParameters() should either be compatible with ReflectionFunctionAbstract::getParameters(): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\MethodReflection.php:143)"} []
[2023-03-10T14:25:00.442202+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\MethodReflection::getStartLine($includeDocComment = false) should either be compatible with ReflectionFunctionAbstract::getStartLine(): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\MethodReflection::getStartLine($includeDocComment = false) should either be compatible with ReflectionFunctionAbstract::getStartLine(): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\MethodReflection.php:56)"} []
[2023-03-10T14:25:00.442231+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getStartLine($includeDocComment = false) should either be compatible with ReflectionClass::getStartLine(): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getStartLine($includeDocComment = false) should either be compatible with ReflectionClass::getStartLine(): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:47)"} []
[2023-03-10T14:25:00.442259+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getMethod($name) should either be compatible with ReflectionClass::getMethod(string $name): ReflectionMethod, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getMethod($name) should either be compatible with ReflectionClass::getMethod(string $name): ReflectionMethod, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:106)"} []
[2023-03-10T14:25:00.442290+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getMethods($filter = -1) should either be compatible with ReflectionClass::getMethods(?int $filter = null): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getMethods($filter = -1) should either be compatible with ReflectionClass::getMethods(?int $filter = null): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:117)"} []
[2023-03-10T14:25:00.442319+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getProperty($name) should either be compatible with ReflectionClass::getProperty(string $name): ReflectionProperty, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getProperty($name) should either be compatible with ReflectionClass::getProperty(string $name): ReflectionProperty, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:172)"} []
[2023-03-10T14:25:00.442348+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getProperties($filter = -1) should either be compatible with ReflectionClass::getProperties(?int $filter = null): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getProperties($filter = -1) should either be compatible with ReflectionClass::getProperties(?int $filter = null): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:187)"} []
[2023-03-10T14:25:00.442376+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getInterfaces() should either be compatible with ReflectionClass::getInterfaces(): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getInterfaces() should either be compatible with ReflectionClass::getInterfaces(): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:86)"} []
[2023-03-10T14:25:00.442404+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getTraits() should either be compatible with ReflectionClass::getTraits(): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getTraits() should either be compatible with ReflectionClass::getTraits(): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:133)"} []
[2023-03-10T14:25:00.442456+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ClassReflection::getParentClass() should either be compatible with ReflectionClass::getParentClass(): ReflectionClass|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ClassReflection::getParentClass() should either be compatible with ReflectionClass::getParentClass(): ReflectionClass|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ClassReflection.php:153)"} []
[2023-03-10T14:25:00.442488+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ParameterReflection::getDeclaringFunction() should either be compatible with ReflectionParameter::getDeclaringFunction(): ReflectionFunctionAbstract, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ParameterReflection::getDeclaringFunction() should either be compatible with ReflectionParameter::getDeclaringFunction(): ReflectionFunctionAbstract, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ParameterReflection.php:53)"} []
[2023-03-10T14:25:00.442517+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ParameterReflection::getDeclaringClass() should either be compatible with ReflectionParameter::getDeclaringClass(): ?ReflectionClass, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ParameterReflection::getDeclaringClass() should either be compatible with ReflectionParameter::getDeclaringClass(): ?ReflectionClass, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ParameterReflection.php:21)"} []
[2023-03-10T14:25:00.442546+01:00] php.INFO: Deprecated: Return type of Laminas\Code\Reflection\ParameterReflection::getClass() should either be compatible with ReflectionParameter::getClass(): ?ReflectionClass, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Laminas\\Code\\Reflection\\ParameterReflection::getClass() should either be compatible with ReflectionParameter::getClass(): ?ReflectionClass, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\laminas\\laminas-code\\src\\Reflection\\ParameterReflection.php:35)"} []
[2023-03-10T14:25:00.442575+01:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2023-03-10T14:25:01.853870+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:50)"} []
[2023-03-10T14:25:01.853986+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:99)"} []
[2023-03-10T14:25:01.854054+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:76)"} []
[2023-03-10T14:25:01.854113+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::quote($value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::quote($value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:91)"} []
[2023-03-10T14:25:01.854171+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOQueryImplementation.php:20)"} []
[2023-03-10T14:25:01.857552+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindParam($param, &$variable, $type = Doctrine\DBAL\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindParam($param, &$variable, $type = Doctrine\\DBAL\\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:79)"} []
[2023-03-10T14:25:01.857674+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindValue($param, $value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindValue($param, $value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:59)"} []
[2023-03-10T14:25:01.857744+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:95)"} []
[2023-03-10T14:25:01.857802+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:109)"} []
[2023-03-10T14:25:01.857858+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:123)"} []
[2023-03-10T14:25:01.857918+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:143)"} []
[2023-03-10T14:25:01.857975+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatementImplementations.php:36)"} []
[2023-03-10T14:25:01.859263+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2023-03-10T14:25:01.862076+01:00] php.INFO: Deprecated: Return type of Doctrine\DBAL\ForwardCompatibility\Result::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\ForwardCompatibility\\Result::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\ForwardCompatibility\\Result.php:43)"} []
[2023-03-10T14:25:01.873140+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'myCabinet' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2023-03-10T14:25:01.883048+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'myCabinet' /*!50116 AND c.constraint_schema = 'myCabinet' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2023-03-10T14:25:01.883777+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'myCabinet' ORDER BY SEQ_IN_INDEX ASC [] []
[2023-03-10T14:25:01.884423+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2023-03-10T14:25:01.885960+01:00] doctrine.DEBUG: ALTER TABLE doctrine_migration_versions CHANGE executed_at executed_at DATETIME DEFAULT NULL, CHANGE execution_time execution_time INT DEFAULT NULL [] []
[2023-03-10T14:25:01.901112+01:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2023-03-10T14:25:01.904143+01:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2023-03-10T14:25:01.904552+01:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2023-03-10T14:25:01.904841+01:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2023-03-10T14:25:01.910445+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2023-03-10T14:25:01.917171+01:00] doctrine.DEBUG: CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1 [] []
[2023-03-10T14:25:01.920904+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2023-03-10T14:25:01.923138+01:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing 'CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1':  SQLSTATE[42S01]: Base table or view already exists: 1050 Table 'assureur_id_seq' already exists" {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableExistsException(code: 0): An exception occurred while executing 'CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1':\n\nSQLSTATE[42S01]: Base table or view already exists: 1050 Table 'assureur_id_seq' already exists at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractMySQLDriver.php:57)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 42S01): SQLSTATE[42S01]: Base table or view already exists: 1050 Table 'assureur_id_seq' already exists at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDO\\Exception.php:18)\n[previous exception] [object] (PDOException(code: 42S01): SQLSTATE[42S01]: Base table or view already exists: 1050 Table 'assureur_id_seq' already exists at D:\\Portfolio dev\\Cabinet\\gestion-cabinet\\cabinet\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:132)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing 'CREATE SEQUENCE assureur_id_seq INCREMENT BY 1 MINVALUE 1 START 1':\n\nSQLSTATE[42S01]: Base table or view already exists: 1050 Table 'assureur_id_seq' already exists"} []
[2023-03-10T14:25:01.923748+01:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
