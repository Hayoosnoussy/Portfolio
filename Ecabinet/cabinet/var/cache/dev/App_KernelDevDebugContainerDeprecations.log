a:26:{i:0;a:6:{s:4:"type";i:8192;s:7:"message";s:229:"Return type of Symfony\Component\Form\Form::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:77:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\form\Form.php";s:4:"line";i:1009;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\dependency-injection\ContainerBuilder.php";s:4:"line";i:1478;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:8192;s:7:"message";s:236:"Return type of Symfony\Component\Form\Form::offsetExists($name) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:77:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\form\Form.php";s:4:"line";i:957;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\dependency-injection\ContainerBuilder.php";s:4:"line";i:1478;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:8192;s:7:"message";s:231:"Return type of Symfony\Component\Form\Form::offsetGet($name) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:77:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\form\Form.php";s:4:"line";i:971;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\dependency-injection\ContainerBuilder.php";s:4:"line";i:1478;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:8192;s:7:"message";s:252:"Return type of Symfony\Component\Form\Form::offsetSet($name, $child) should either be compatible with ArrayAccess::offsetSet(mixed $offset, mixed $value): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:77:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\form\Form.php";s:4:"line";i:987;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\dependency-injection\ContainerBuilder.php";s:4:"line";i:1478;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:8192;s:7:"message";s:234:"Return type of Symfony\Component\Form\Form::offsetUnset($name) should either be compatible with ArrayAccess::offsetUnset(mixed $offset): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:77:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\form\Form.php";s:4:"line";i:999;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\dependency-injection\ContainerBuilder.php";s:4:"line";i:1478;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:8192;s:7:"message";s:201:"Return type of Symfony\Component\Form\Form::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:77:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\form\Form.php";s:4:"line";i:1019;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\dependency-injection\ContainerBuilder.php";s:4:"line";i:1478;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:16384;s:7:"message";s:61:"Please install the "intl" PHP extension for best performance.";s:4:"file";s:123:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:280;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:129:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\dependency-injection\Compiler\MergeExtensionConfigurationPass.php";s:4:"line";i:76;s:8:"function";s:4:"load";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:7;a:6:{s:4:"type";i:8192;s:7:"message";s:246:"Return type of Symfony\Component\Security\Core\Exception\AuthenticationException::__wakeup() should either be compatible with Exception::__wakeup(): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:115:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\security-core\Exception\AuthenticationException.php";s:4:"line";i:115;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\dependency-injection\ContainerBuilder.php";s:4:"line";i:1478;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:8;a:6:{s:4:"type";i:8192;s:7:"message";s:233:"Return type of Symfony\Component\Finder\Finder::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:81:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Finder.php";s:4:"line";i:608;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:123:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:413;s:8:"function";s:31:"registerTranslatorConfiguration";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:9;a:6:{s:4:"type";i:8192;s:7:"message";s:205:"Return type of Symfony\Component\Finder\Finder::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:81:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Finder.php";s:4:"line";i:690;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:123:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:413;s:8:"function";s:31:"registerTranslatorConfiguration";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:10;a:6:{s:4:"type";i:8192;s:7:"message";s:238:"Return type of Symfony\Component\Finder\Iterator\FileTypeFilterIterator::accept() should either be compatible with FilterIterator::accept(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:106:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Iterator\FileTypeFilterIterator.php";s:4:"line";i:42;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:123:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:1294;s:8:"function";s:5:"files";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:11;a:6:{s:4:"type";i:8192;s:7:"message";s:252:"Return type of Symfony\Component\Finder\Iterator\SortableIterator::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:100:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Iterator\SortableIterator.php";s:4:"line";i:85;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:123:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:1299;s:8:"function";s:10:"sortByName";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:12;a:6:{s:4:"type";i:8192;s:7:"message";s:286:"Return type of Symfony\Component\Finder\Iterator\RecursiveDirectoryIterator::getChildren() should either be compatible with RecursiveDirectoryIterator::getChildren(): RecursiveDirectoryIterator, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:110:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Iterator\RecursiveDirectoryIterator.php";s:4:"line";i:85;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:81:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Finder.php";s:4:"line";i:615;s:8:"function";s:17:"searchInDirectory";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:13;a:6:{s:4:"type";i:8192;s:7:"message";s:246:"Return type of Symfony\Component\Finder\Iterator\RecursiveDirectoryIterator::rewind() should either be compatible with FilesystemIterator::rewind(): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:110:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Iterator\RecursiveDirectoryIterator.php";s:4:"line";i:113;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:81:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Finder.php";s:4:"line";i:615;s:8:"function";s:17:"searchInDirectory";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:14;a:6:{s:4:"type";i:8192;s:7:"message";s:281:"Return type of Symfony\Component\Finder\Iterator\RecursiveDirectoryIterator::current() should either be compatible with FilesystemIterator::current(): SplFileInfo|FilesystemIterator|string, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:110:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Iterator\RecursiveDirectoryIterator.php";s:4:"line";i:61;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:81:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Finder.php";s:4:"line";i:615;s:8:"function";s:17:"searchInDirectory";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:15;a:6:{s:4:"type";i:8192;s:7:"message";s:246:"Return type of Symfony\Component\Finder\Iterator\ExcludeDirectoryFilterIterator::accept() should either be compatible with FilterIterator::accept(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:114:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Iterator\ExcludeDirectoryFilterIterator.php";s:4:"line";i:55;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:81:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Finder.php";s:4:"line";i:615;s:8:"function";s:17:"searchInDirectory";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:16;a:6:{s:4:"type";i:8192;s:7:"message";s:259:"Return type of Symfony\Component\Finder\Iterator\ExcludeDirectoryFilterIterator::hasChildren() should either be compatible with RecursiveIterator::hasChildren(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:114:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Iterator\ExcludeDirectoryFilterIterator.php";s:4:"line";i:74;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:81:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Finder.php";s:4:"line";i:615;s:8:"function";s:17:"searchInDirectory";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:17;a:6:{s:4:"type";i:8192;s:7:"message";s:273:"Return type of Symfony\Component\Finder\Iterator\ExcludeDirectoryFilterIterator::getChildren() should either be compatible with RecursiveIterator::getChildren(): ?RecursiveIterator, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:114:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Iterator\ExcludeDirectoryFilterIterator.php";s:4:"line";i:79;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:81:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Finder.php";s:4:"line";i:615;s:8:"function";s:17:"searchInDirectory";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:18;a:6:{s:4:"type";i:8192;s:7:"message";s:236:"Return type of Symfony\Component\Finder\Iterator\CustomFilterIterator::accept() should either be compatible with FilterIterator::accept(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:104:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Iterator\CustomFilterIterator.php";s:4:"line";i:49;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:81:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Finder.php";s:4:"line";i:615;s:8:"function";s:17:"searchInDirectory";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:19;a:6:{s:4:"type";i:8192;s:7:"message";s:234:"Return type of Symfony\Component\Finder\Iterator\PathFilterIterator::accept() should either be compatible with FilterIterator::accept(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:102:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Iterator\PathFilterIterator.php";s:4:"line";i:27;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:81:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Finder.php";s:4:"line";i:615;s:8:"function";s:17:"searchInDirectory";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:20;a:6:{s:4:"type";i:8192;s:7:"message";s:244:"Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:93:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\http-foundation\HeaderBag.php";s:4:"line";i:255;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:98:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:347;s:4:"args";a:1:{i:0;s:101:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\http-foundation\ResponseHeaderBag.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:21;a:6:{s:4:"type";i:8192;s:7:"message";s:216:"Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:93:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\http-foundation\HeaderBag.php";s:4:"line";i:265;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:98:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:347;s:4:"args";a:1:{i:0;s:101:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\http-foundation\ResponseHeaderBag.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:22;a:6:{s:4:"type";i:8192;s:7:"message";s:238:"Return type of Symfony\Component\Finder\Iterator\FilenameFilterIterator::accept() should either be compatible with FilterIterator::accept(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:106:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Iterator\FilenameFilterIterator.php";s:4:"line";i:28;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:81:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\finder\Finder.php";s:4:"line";i:615;s:8:"function";s:17:"searchInDirectory";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:23;a:6:{s:4:"type";i:16384;s:7:"message";s:215:"Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" interface is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" instead.";s:4:"file";s:118:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\security-core\Encoder\UserPasswordEncoderInterface.php";s:4:"line";i:17;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:98:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:347;s:4:"args";a:1:{i:0;s:118:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\security-core\Encoder\UserPasswordEncoderInterface.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:24;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" service is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" instead. It is being referenced by the ".service_locator.Isyi.eu" service.";s:4:"file";s:128:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:128:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:25;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" service is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" instead. It is being referenced by the ".service_locator..WbzsKm" service.";s:4:"file";s:128:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:128:"D:\Portfolio dev\Cabinet\gestion-cabinet\cabinet\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}}